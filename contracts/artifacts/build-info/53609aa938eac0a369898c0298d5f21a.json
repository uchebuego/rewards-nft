{
	"id": "53609aa938eac0a369898c0298d5f21a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RewardsNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract RewardsNFT is ERC721URIStorage, Ownable {\n    uint256 private _tokenIdCounter = 0;\n\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {}\n\n    function mintWithURI(address to, string memory tokenURI) public onlyOwner {\n        uint256 newTokenId = _tokenIdCounter;\n        _mint(to, newTokenId);\n        _setTokenURI(newTokenId, tokenURI);\n        _tokenIdCounter++;\n    }\n\n    function getTokenIdCounter() public view returns (uint256) {\n        return _tokenIdCounter;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_93\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4804:4811  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4789  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4862  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4883:4887  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4891  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4893:4900  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4882  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5094:5098  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5100:5102  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5104:5111  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5093  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5359  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5337  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5311:5410  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5434:5438  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5440:5442  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5444:5451  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5453:5457  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5433  _safeTransfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12661  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12675  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12713  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7497:7501  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7526  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7543  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7552  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7581:7586  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7577  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7638:7645  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7637  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7658  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11381:11385  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11369:11376  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11368  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11346:11427  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11682:11686  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11670:11677  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11669  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11728  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11812  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12274  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12285  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12344  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12358  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12999:13007  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:12995  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13065  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13093  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6448:6452  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6454:6456  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6458:6465  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6447  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6507:6511  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6515  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6517:6524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6526:6530  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6506  _checkOnERC721Received */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6476:6586  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14074:14078  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14107  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14165  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_220\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14180:14184  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14186:14193  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14195:14199  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_223\n      swap2\n      dup2\n      add\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14373  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14380  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14384:14385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14385  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14409:14469  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14642  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14630:14643  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14621:14627  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14617:14619  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14613:14628  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14606:14644  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14243:14301  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n    tag_218:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14735:14739  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_237\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_257:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_265:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_258:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_269:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_269)\n    tag_271:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_259:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_273\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_258\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_148\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_260:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_280:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_282:\n        /* \"#utility.yul\":2087:2116   */\n      tag_283\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_260\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_285:\n        /* \"#utility.yul\":2363:2392   */\n      tag_286\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_260\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_287\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_260\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_289:\n        /* \"#utility.yul\":2662:2691   */\n      tag_148\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_293:\n        /* \"#utility.yul\":3049:3078   */\n      tag_294\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_260\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_295:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_203:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_298:\n        /* \"#utility.yul\":3580:3609   */\n      tag_299\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_260\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_300\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_260\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_301:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_302:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_304\n      tag_203\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_306\n      tag_203\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_307:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_309:\n        /* \"#utility.yul\":4679:4708   */\n      tag_310\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_260\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_311\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_260\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_313:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_111:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_152:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_321\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_258\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_322\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_258\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_173:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_196:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9876   */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9656:9671   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9638:9672   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9708:9723   */\n      dup5\n      and\n        /* \"#utility.yul\":9703:9705   */\n      0x20\n        /* \"#utility.yul\":9688:9706   */\n      dup3\n      add\n        /* \"#utility.yul\":9681:9724   */\n      mstore\n        /* \"#utility.yul\":9755:9757   */\n      0x40\n        /* \"#utility.yul\":9740:9758   */\n      dup2\n      add\n        /* \"#utility.yul\":9733:9767   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9803:9806   */\n      0x80\n        /* \"#utility.yul\":9798:9800   */\n      0x60\n        /* \"#utility.yul\":9783:9801   */\n      dup3\n      add\n        /* \"#utility.yul\":9776:9807   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9581:9585   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9824:9870   */\n      tag_329\n      swap1\n        /* \"#utility.yul\":9850:9869   */\n      dup4\n      add\n        /* \"#utility.yul\":9842:9848   */\n      dup5\n        /* \"#utility.yul\":9824:9870   */\n      tag_259\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9816:9870   */\n      swap7\n        /* \"#utility.yul\":9387:9876   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:10130   */\n    tag_224:\n        /* \"#utility.yul\":9950:9956   */\n      0x00\n        /* \"#utility.yul\":10003:10005   */\n      0x20\n        /* \"#utility.yul\":9991:10000   */\n      dup3\n        /* \"#utility.yul\":9982:9989   */\n      dup5\n        /* \"#utility.yul\":9978:10001   */\n      sub\n        /* \"#utility.yul\":9974:10006   */\n      slt\n        /* \"#utility.yul\":9971:10023   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":10019:10020   */\n      0x00\n        /* \"#utility.yul\":10016:10017   */\n      dup1\n        /* \"#utility.yul\":10009:10021   */\n      revert\n        /* \"#utility.yul\":9971:10023   */\n    tag_331:\n        /* \"#utility.yul\":10051:10060   */\n      dup2\n        /* \"#utility.yul\":10045:10061   */\n      mload\n        /* \"#utility.yul\":10070:10100   */\n      tag_148\n        /* \"#utility.yul\":10094:10099   */\n      dup2\n        /* \"#utility.yul\":10070:10100   */\n      tag_257\n      jump\t// in\n\n    auxdata: 0xa264697066735822122082ecd85d7735dad800cc8bfaf0a89fb35031eb6721891249ba7c92c406a6184e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:17"
															},
															"nodeType": "YulIf",
															"src": "220:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:17"
															},
															"nodeType": "YulIf",
															"src": "353:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:17"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:17"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:17"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:17"
															},
															"nodeType": "YulIf",
															"src": "536:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:17"
															},
															"nodeType": "YulIf",
															"src": "698:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:17"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:17"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:17"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:17",
																"statements": []
															},
															"src": "779:133:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:17",
														"type": ""
													}
												],
												"src": "146:840:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:17"
															},
															"nodeType": "YulIf",
															"src": "1119:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:17"
															},
															"nodeType": "YulIf",
															"src": "1256:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:17"
															},
															"nodeType": "YulIf",
															"src": "1429:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:17",
														"type": ""
													}
												],
												"src": "991:562:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:17"
															},
															"nodeType": "YulIf",
															"src": "1701:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:17"
															},
															"nodeType": "YulIf",
															"src": "1771:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:17",
														"type": ""
													}
												],
												"src": "1558:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:17",
														"type": ""
													}
												],
												"src": "1943:121:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:17"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:17",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:17"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:17"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:17"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:17"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:17"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:17",
																			"statements": []
																		},
																		"src": "2516:82:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:17"
															},
															"nodeType": "YulIf",
															"src": "2160:448:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:17",
														"type": ""
													}
												],
												"src": "2069:545:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:17",
														"type": ""
													}
												],
												"src": "2619:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:17"
															},
															"nodeType": "YulIf",
															"src": "2929:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:17",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:17"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:17",
																					"statements": []
																				},
																				"src": "3376:236:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:17"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:17"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:17",
														"type": ""
													}
												],
												"src": "2790:1352:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13E7 CODESIZE SUB DUP1 PUSH3 0x13E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x10F3 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xEC 0xD8 0x5D PUSH24 0x35DAD800CC8BFAF0A89FB35031EB6721891249BA7C92C406 0xA6 XOR 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:16377:4:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:4;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16377;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:17:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:17;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:17;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:17;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:17;;;3992:26;3943:89;-1:-1:-1;;2747:1:17;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:17;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:17;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:17;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:17:o;:::-;628:16377:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1051": {
									"entryPoint": null,
									"id": 1051,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_917": {
									"entryPoint": 1707,
									"id": 917,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1025": {
									"entryPoint": 2704,
									"id": 1025,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_586": {
									"entryPoint": null,
									"id": 586,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_620": {
									"entryPoint": 1817,
									"id": 620,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1726": {
									"entryPoint": null,
									"id": 1726,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_568": {
									"entryPoint": null,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_963": {
									"entryPoint": 1609,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_555": {
									"entryPoint": 2506,
									"id": 555,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_949": {
									"entryPoint": 2300,
									"id": 949,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_893": {
									"entryPoint": 1944,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_397": {
									"entryPoint": 819,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_258": {
									"entryPoint": 1273,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_415": {
									"entryPoint": 780,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2704": {
									"entryPoint": 2961,
									"id": 2704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_296": {
									"entryPoint": 634,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_286": {
									"entryPoint": 1177,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_496": {
									"entryPoint": 1150,
									"id": 496,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_526": {
									"entryPoint": 1437,
									"id": 526,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_432": {
									"entryPoint": 1422,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1988": {
									"entryPoint": null,
									"id": 1988,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_234": {
									"entryPoint": 552,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_306": {
									"entryPoint": 1407,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1795": {
									"entryPoint": 2557,
									"id": 1795,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_345": {
									"entryPoint": 1493,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_477": {
									"entryPoint": 1101,
									"id": 477,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10132:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:17"
															},
															"nodeType": "YulIf",
															"src": "68:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:17"
															},
															"nodeType": "YulIf",
															"src": "229:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:17",
														"type": ""
													}
												],
												"src": "150:245:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:17",
														"type": ""
													}
												],
												"src": "400:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:17",
																"statements": []
															},
															"src": "687:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:17",
														"type": ""
													}
												],
												"src": "592:250:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:17",
														"type": ""
													}
												],
												"src": "847:271:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:17",
														"type": ""
													}
												],
												"src": "1123:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:17"
															},
															"nodeType": "YulIf",
															"src": "1428:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:17",
														"type": ""
													}
												],
												"src": "1348:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:17",
														"type": ""
													}
												],
												"src": "1533:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:17"
															},
															"nodeType": "YulIf",
															"src": "1838:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:17",
														"type": ""
													}
												],
												"src": "1741:173:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:17"
															},
															"nodeType": "YulIf",
															"src": "2016:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:17",
														"type": ""
													}
												],
												"src": "1919:254:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:224:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:32:17"
															},
															"nodeType": "YulIf",
															"src": "2292:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2401:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2243:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2263:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2271:6:17",
														"type": ""
													}
												],
												"src": "2178:328:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:116:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2627:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:32:17"
															},
															"nodeType": "YulIf",
															"src": "2591:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2652:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2547:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2558:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:17",
														"type": ""
													}
												],
												"src": "2511:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2813:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2783:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2794:4:17",
														"type": ""
													}
												],
												"src": "2702:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:17"
															},
															"nodeType": "YulIf",
															"src": "2978:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:17"
															},
															"nodeType": "YulIf",
															"src": "3141:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:17",
														"type": ""
													}
												],
												"src": "2884:347:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:17"
															},
															"nodeType": "YulIf",
															"src": "3508:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:17"
															},
															"nodeType": "YulIf",
															"src": "3818:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:17"
															},
															"nodeType": "YulIf",
															"src": "3902:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:17"
															},
															"nodeType": "YulIf",
															"src": "4001:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:17"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:17"
															},
															"nodeType": "YulIf",
															"src": "4184:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:17"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:17"
															},
															"nodeType": "YulIf",
															"src": "4323:53:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:17"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:17",
														"type": ""
													}
												],
												"src": "3368:1138:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:17"
															},
															"nodeType": "YulIf",
															"src": "4608:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:17",
														"type": ""
													}
												],
												"src": "4511:260:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:17"
															},
															"nodeType": "YulIf",
															"src": "4919:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:17"
															},
															"nodeType": "YulIf",
															"src": "4989:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:17",
														"type": ""
													}
												],
												"src": "4776:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:223:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:17",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:17",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:17"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:17",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5525:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:17",
														"type": ""
													}
												],
												"src": "5161:397:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:251:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:17",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:17",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:17"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:17",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:59:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5714:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5728:4:17",
														"type": ""
													}
												],
												"src": "5563:425:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:235:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:17",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:17"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:17",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:17"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:17",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:17",
														"type": ""
													}
												],
												"src": "5993:409:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6581:174:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:17",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:17",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6723:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6558:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6572:4:17",
														"type": ""
													}
												],
												"src": "6407:348:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6934:231:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:17"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:17",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:17"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:17",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7132:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6911:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6925:4:17",
														"type": ""
													}
												],
												"src": "6760:405:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7357:309:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:66:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:16:17"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:17"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:70:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7633:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:20:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7325:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7330:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7338:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7349:3:17",
														"type": ""
													}
												],
												"src": "7170:496:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7845:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:17",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:17"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:17",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8039:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7822:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7836:4:17",
														"type": ""
													}
												],
												"src": "7671:401:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8251:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:17",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8444:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8242:4:17",
														"type": ""
													}
												],
												"src": "8077:400:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8656:175:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:17",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8647:4:17",
														"type": ""
													}
												],
												"src": "8482:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9010:240:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:17",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:17",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:17"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:17",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9217:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8987:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9001:4:17",
														"type": ""
													}
												],
												"src": "8836:414:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9590:286:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9600:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9623:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9610:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9604:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9645:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9660:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9668:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9638:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9638:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9692:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9703:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9688:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9712:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9720:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9708:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9708:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9681:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9744:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9755:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9760:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9787:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9798:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9783:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9783:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9803:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9776:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9776:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9776:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9816:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9842:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9854:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9865:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9850:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9850:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "9824:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9824:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9816:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9535:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9546:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9554:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9562:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9570:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9581:4:17",
														"type": ""
													}
												],
												"src": "9387:489:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9961:169:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10007:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10016:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10019:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10009:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10009:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10009:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9982:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9991:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9978:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9978:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10003:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9974:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9974:32:17"
															},
															"nodeType": "YulIf",
															"src": "9971:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10032:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10051:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10045:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10036:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10094:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "10070:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10070:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10070:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10109:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10119:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9927:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9938:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9950:6:17",
														"type": ""
													}
												],
												"src": "9881:249:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xEC 0xD8 0x5D PUSH24 0x35DAD800CC8BFAF0A89FB35031EB6721891249BA7C92C406 0xA6 XOR 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:16377:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1570:300:4;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:17;;;1679:51;;1667:2;1652:18;3935:167:4;1533:203:17;3468:406:4;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:17;;;2836:2;2821:18;1929:204:4;2702:177:17;2633:102:4;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:12;;;1827:36:4;1688:175;1570:300;-1:-1:-1;;1570:300:4:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:4;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:4;:2;-1:-1:-1;;;;;3605:11:4;;3597:57;;;;-1:-1:-1;;;3597:57:4;;5363:2:17;3597:57:4;;;5345:21:17;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:17;;;5485:31;5533:19;;3597:57:4;;;;;;;;;719:10:10;-1:-1:-1;;;;;3686:21:4;;;;:62;;-1:-1:-1;3711:37:4;3728:5;719:10:10;4388:162:4;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:4;;5765:2:17;3665:170:4;;;5747:21:17;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:4;5563:425:17;3665:170:4;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:10;4804:7:4;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:4;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;;2324:56;;;;-1:-1:-1;;;2324:56:4;;6609:2:17;2324:56:4;;;6591:21:17;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:17;;;6660:54;6731:18;;2324:56:4;6407:348:17;1929:204:4;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:73;;;;-1:-1:-1;;;2020:73:4;;6962:2:17;2020:73:4;;;6944:21:17;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:17;;;7084:39;7140:19;;2020:73:4;6760:405:17;2020:73:4;-1:-1:-1;;;;;;2110:16:4;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:10;4296:8:4;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:10;5352:7:4;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:4;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:4;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:4:o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;13313:53;;;;-1:-1:-1;;;13313:53:4;;6609:2:17;13313:53:4;;;6591:21:17;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:17;;;6660:54;6731:18;;13313:53:4;6407:348:17;13313:53:4;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:4;-1:-1:-1;;;;;12646:29:4;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:4;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:4;:7;-1:-1:-1;;;;;7570:16:4;;:52;;;-1:-1:-1;;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:4;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:4;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:4:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:4;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:4;;11346:81;;;;-1:-1:-1;;;11346:81:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:4;;11437:65;;;;-1:-1:-1;;;11437:65:4;;8279:2:17;11437:65:4;;;8261:21:17;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:17;;;8401:34;8452:19;;11437:65:4;8077:400:17;11437:65:4;11682:4;-1:-1:-1;;;;;11655:31:4;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:4;;11647:81;;;;-1:-1:-1;;;11647:81:4;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:4;;;;;;-1:-1:-1;;;;;12265:15:4;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:4;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:4;:5;-1:-1:-1;;;;;12990:17:4;;12982:55;;;;-1:-1:-1;;;12982:55:4;;8684:2:17;12982:55:4;;;8666:21:17;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;12982:55:4;8482:349:17;12982:55:4;-1:-1:-1;;;;;13047:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:4;;;;;;;;;;13108:41;;540::17;;;13108::4;;513:18:17;13108:41:4;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:4;;;;;;;:::i;447:696:11:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:11;-1:-1:-1;604:41:11;-1:-1:-1;765:28:11;;;781:2;765:28;820:280;-1:-1:-1;;851:5:11;-1:-1:-1;;;985:2:11;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:11;820:280;1064:21;-1:-1:-1;1120:6:11;447:696;-1:-1:-1;;;447:696:11:o;13925:831:4:-;14074:4;-1:-1:-1;;;;;14094:13:4;;1702:19:9;:23;14090:660:4;;14129:71;;-1:-1:-1;;;14129:71:4;;-1:-1:-1;;;;;14129:36:4;;;;;:71;;719:10:10;;14180:4:4;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:4;;;;;;;;-1:-1:-1;;14129:71:4;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:4;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:4;-1:-1:-1;;;14250:51:4;;-1:-1:-1;14243:58:4;;14090:660;-1:-1:-1;14735:4:4;13925:831;;;;;;:::o;10139:916:14:-;10192:7;;-1:-1:-1;;;10267:17:14;;10263:103;;-1:-1:-1;;;10304:17:14;;;-1:-1:-1;10349:2:14;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:14;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:14;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:14;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:14;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:14;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:14:o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:17;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:17;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:17:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:17;;1348:180;-1:-1:-1;1348:180:17:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:17;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:17:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:17;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:17;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:17:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:17;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:17;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:489::-;-1:-1:-1;;;;;9656:15:17;;;9638:34;;9708:15;;9703:2;9688:18;;9681:43;9755:2;9740:18;;9733:34;;;9803:3;9798:2;9783:18;;9776:31;;;9581:4;;9824:46;;9850:19;;9842:6;9824:46;:::i;:::-;9816:54;9387:489;-1:-1:-1;;;;;;9387:489:17:o;9881:249::-;9950:6;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10051:9;10045:16;10070:30;10094:5;10070:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "867800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4769",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2561",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 17,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 17,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 17,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 17,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 17,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 17,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082ecd85d7735dad800cc8bfaf0a89fb35031eb6721891249ba7c92c406a6184e64736f6c63430008120033",
									".code": [
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 17,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 17,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4771,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4763,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4873,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5319,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5311,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12661,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 12699,
											"end": 12722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7529,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7626,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7404,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11354,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11346,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 11670,
											"end": 11677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11655,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11647,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12999,
											"end": 13007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12990,
											"end": 12995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6448,
											"end": 6452,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6438,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6484,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6476,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 974,
											"end": 988,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14367,
											"end": 14380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 14409,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14630,
											"end": 14643,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14606,
											"end": 14644,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 17,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9638,
											"end": 9672,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9638,
											"end": 9672,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9681,
											"end": 9724,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9755,
											"end": 9757,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9798,
											"end": 9800,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9850,
											"end": 9869,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9850,
											"end": 9869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9842,
											"end": 9848,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 9824,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9816,
											"end": 9870,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9387,
											"end": 9876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9881,
											"end": 10130,
											"name": "tag",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 9881,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10005,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9991,
											"end": 10000,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9982,
											"end": 9989,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9978,
											"end": 10001,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9974,
											"end": 10006,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10009,
											"end": 10021,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10051,
											"end": 10060,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10045,
											"end": 10061,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10070,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10070,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 10070,
											"end": 10100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/RewardsNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 166,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 168,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 172,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 176,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 180,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 166,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 168,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 172,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 176,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 180,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1217,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xDA DUP4 SWAP13 PUSH18 0xDE4998B97BB5D687B69290308A06D6755FF9 0xD7 0xD 0x1E PUSH11 0x9A3A0190DC64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xDA DUP4 SWAP13 PUSH18 0xDE4998B97BB5D687B69290308A06D6755FF9 0xD7 0xD 0x1E PUSH11 0x9A3A0190DC64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/RewardsNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP4 EXP CALLVALUE DUP10 0xB1 DUP7 0xCB 0x22 PUSH2 0x2417 MSTORE8 NUMBER 0xA7 DUP6 0x29 0xBC 0xC2 0xD2 0xE5 JUMPDEST SWAP6 0xE7 PUSH17 0xB81F1D26F6039764736F6C634300081200 CALLER ",
							"sourceMap": "220:2559:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP4 EXP CALLVALUE DUP10 0xB1 DUP7 0xCB 0x22 PUSH2 0x2417 MSTORE8 NUMBER 0xA7 DUP6 0x29 0xBC 0xC2 0xD2 0xE5 JUMPDEST SWAP6 0xE7 PUSH17 0xB81F1D26F6039764736F6C634300081200 CALLER ",
							"sourceMap": "220:2559:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/RewardsNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/RewardsNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE0 0xD7 0xCA 0xF8 0xB5 CALLDATASIZE PUSH15 0xD2E6EA208CB596A40B3CCD2C7E9FC PUSH2 0xD4D 0xE6 XOR JUMP STATICCALL PUSH7 0xA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE0 0xD7 0xCA 0xF8 0xB5 CALLDATASIZE PUSH15 0xD2E6EA208CB596A40B3CCD2C7E9FC PUSH2 0xD4D 0xE6 XOR JUMP STATICCALL PUSH7 0xA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/RewardsNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/RewardsNFT.sol": {
				"RewardsNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenIdCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "mintWithURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RewardsNFT.sol\":190:705  contract RewardsNFT is ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/RewardsNFT.sol\":279:280  0 */\n  0x00\n    /* \"contracts/RewardsNFT.sol\":245:280  uint256 private _tokenIdCounter = 0 */\n  0x08\n  sstore\n    /* \"contracts/RewardsNFT.sol\":287:364  constructor(string memory name, string memory symbol) ERC721(name, symbol) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/RewardsNFT.sol\":348:352  name */\n  dup2\n    /* \"contracts/RewardsNFT.sol\":354:360  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_8\n    /* \"contracts/RewardsNFT.sol\":348:352  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/RewardsNFT.sol\":287:364  constructor(string memory name, string memory symbol) ERC721(name, symbol) {} */\n  pop\n  pop\n    /* \"contracts/RewardsNFT.sol\":190:705  contract RewardsNFT is ERC721URIStorage, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x07\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_21:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_29:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_31\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_33\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_34:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_35:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_39:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_40:\n    /* \"#utility.yul\":1309:1370   */\n  tag_41\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_42:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_43\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_22:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_45:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_24:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_50:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_51:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_49:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_9:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_57\n  tag_20\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2994:3091   */\n  tag_58\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_59\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_22\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_62:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_53)\n    /* \"#utility.yul\":3222:3885   */\ntag_61:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_65:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_68:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_26:\n    /* \"contracts/RewardsNFT.sol\":190:705  contract RewardsNFT is ERC721URIStorage, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RewardsNFT.sol\":190:705  contract RewardsNFT is ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdbfd4b98\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x0e980602\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x0e980602\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":535:740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":535:740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/RewardsNFT.sol\":370:599  function mintWithURI(address to, string memory tokenURI) public onlyOwner {... */\n    tag_7:\n      tag_40\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_40\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_9:\n      tag_40\n      tag_53\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_10:\n      tag_34\n      tag_56\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":4147:4172   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4135:4137   */\n      0x20\n        /* \"#utility.yul\":4120:4138   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":4001:4178   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_40\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_34)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_30\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_15:\n      tag_40\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_16:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":806:1414  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_30\n      tag_82\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/RewardsNFT.sol\":605:703  function getTokenIdCounter() public view returns (uint256) {... */\n    tag_18:\n        /* \"contracts/RewardsNFT.sol\":681:696  _tokenIdCounter */\n      sload(0x08)\n        /* \"contracts/RewardsNFT.sol\":605:703  function getTokenIdCounter() public view returns (uint256) {... */\n      jump(tag_59)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_19:\n      tag_24\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_40\n      tag_94\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":535:740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":637:641  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":660:693  interfaceId == bytes4(0x49064906) */\n      dup3\n      and\n      shl(0xe1, 0x24832483)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":660:733  interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":697:733  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":721:732  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":697:720  super.supportsInterface */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":697:733  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":653:733  return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":535:740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_108:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6059:6061   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6041:6062   */\n      mstore\n        /* \"#utility.yul\":6098:6100   */\n      0x21\n        /* \"#utility.yul\":6078:6096   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6071:6101   */\n      mstore\n        /* \"#utility.yul\":6137:6171   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":6117:6135   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6110:6172   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":6188:6206   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6181:6212   */\n      mstore\n        /* \"#utility.yul\":6229:6248   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6461:6463   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6443:6464   */\n      mstore\n        /* \"#utility.yul\":6500:6502   */\n      0x3d\n        /* \"#utility.yul\":6480:6498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6473:6503   */\n      mstore\n        /* \"#utility.yul\":6539:6573   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":6519:6537   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6512:6574   */\n      mstore\n        /* \"#utility.yul\":6610:6641   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":6590:6608   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6583:6642   */\n      mstore\n        /* \"#utility.yul\":6659:6678   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_113\n        /* \"#utility.yul\":6259:6684   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RewardsNFT.sol\":370:599  function mintWithURI(address to, string memory tokenURI) public onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/RewardsNFT.sol\":475:490  _tokenIdCounter */\n      sload(0x08)\n        /* \"contracts/RewardsNFT.sol\":500:521  _mint(to, newTokenId) */\n      tag_129\n        /* \"contracts/RewardsNFT.sol\":506:508  to */\n      dup4\n        /* \"contracts/RewardsNFT.sol\":475:490  _tokenIdCounter */\n      dup3\n        /* \"contracts/RewardsNFT.sol\":500:505  _mint */\n      tag_130\n        /* \"contracts/RewardsNFT.sol\":500:521  _mint(to, newTokenId) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/RewardsNFT.sol\":531:565  _setTokenURI(newTokenId, tokenURI) */\n      tag_131\n        /* \"contracts/RewardsNFT.sol\":544:554  newTokenId */\n      dup2\n        /* \"contracts/RewardsNFT.sol\":556:564  tokenURI */\n      dup4\n        /* \"contracts/RewardsNFT.sol\":531:543  _setTokenURI */\n      tag_132\n        /* \"contracts/RewardsNFT.sol\":531:565  _setTokenURI(newTokenId, tokenURI) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/RewardsNFT.sol\":575:590  _tokenIdCounter */\n      0x08\n        /* \"contracts/RewardsNFT.sol\":575:592  _tokenIdCounter++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/RewardsNFT.sol\":575:590  _tokenIdCounter */\n      0x00\n        /* \"contracts/RewardsNFT.sol\":575:592  _tokenIdCounter++ */\n      tag_133\n      dup4\n      tag_134\n      jump\t// in\n    tag_133:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/RewardsNFT.sol\":444:599  {... */\n      pop\n        /* \"contracts/RewardsNFT.sol\":370:599  function mintWithURI(address to, string memory tokenURI) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_136\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4804:4811  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4789  _isApprovedOrOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4862  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_141\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4883:4887  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4891  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4893:4900  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4882  _transfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5094:5098  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5100:5102  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5104:5111  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5093  safeTransferFrom */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7542:7544   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7524:7545   */\n      mstore\n        /* \"#utility.yul\":7581:7583   */\n      0x18\n        /* \"#utility.yul\":7561:7579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7554:7584   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":7600:7618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7593:7647   */\n      mstore\n        /* \"#utility.yul\":7664:7682   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_113\n        /* \"#utility.yul\":7340:7688   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7895:7897   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7877:7898   */\n      mstore\n        /* \"#utility.yul\":7934:7936   */\n      0x29\n        /* \"#utility.yul\":7914:7932   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7907:7937   */\n      mstore\n        /* \"#utility.yul\":7973:8007   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7953:7971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7946:8008   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":8024:8042   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8017:8056   */\n      mstore\n        /* \"#utility.yul\":8073:8092   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_113\n        /* \"#utility.yul\":7693:8098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_153:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5359  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5337  _isApprovedOrOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5311:5410  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_141\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5434:5438  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5440:5442  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5444:5451  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5453:5457  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5433  _safeTransfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":806:1414  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":879:892  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":904:927  _requireMinted(tokenId) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":919:926  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":904:918  _requireMinted */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":904:927  _requireMinted(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":938:961  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":964:983  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":964:974  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":964:983  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":938:983  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_102\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_102\n      jump\t// in\n    tag_182:\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_184\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_183)\n    tag_184:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":993:1011  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1014:1024  _baseURI() */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1014:1024  _baseURI() */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":993:1024  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1103:1107  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1097:1115  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1119:1120  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1097:1120  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1093:1163  if (bytes(base).length == 0) {... */\n      tag_188\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1143:1152  _tokenURI */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":806:1414  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1093:1163  if (bytes(base).length == 0) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1265:1288  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1265:1292  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1261:1367  if (bytes(_tokenURI).length > 0) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1339:1343  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1345:1354  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1355  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_190\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1356  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":806:1414  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1261:1367  if (bytes(_tokenURI).length > 0) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1384:1407  super.tokenURI(tokenId) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1399:1406  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1384:1398  super.tokenURI */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1384:1407  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1377:1407  return super.tokenURI(tokenId) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":806:1414  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8806:8808   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8788:8809   */\n      mstore\n        /* \"#utility.yul\":8845:8847   */\n      0x26\n        /* \"#utility.yul\":8825:8843   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8818:8848   */\n      mstore\n        /* \"#utility.yul\":8884:8918   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8864:8882   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8857:8919   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8935:8953   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8928:8964   */\n      mstore\n        /* \"#utility.yul\":8981:9000   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_113\n        /* \"#utility.yul\":8604:9006   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_204\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_98\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7542:7544   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7524:7545   */\n      mstore\n        /* \"#utility.yul\":7581:7583   */\n      0x18\n        /* \"#utility.yul\":7561:7579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7554:7584   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":7600:7618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7593:7647   */\n      mstore\n        /* \"#utility.yul\":7664:7682   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_113\n        /* \"#utility.yul\":7340:7688   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12661  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12675  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12713  ERC721.ownerOf */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9213:9215   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9195:9216   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9232:9250   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9225:9255   */\n      mstore\n        /* \"#utility.yul\":9291:9325   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9271:9289   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9264:9326   */\n      mstore\n        /* \"#utility.yul\":9343:9361   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n        /* \"#utility.yul\":9011:9367   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8925:9845  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9004:9020  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9574:9576   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9556:9577   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9593:9611   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9586:9616   */\n      mstore\n        /* \"#utility.yul\":9652:9686   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":9632:9650   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9625:9687   */\n      mstore\n        /* \"#utility.yul\":9704:9722   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_113\n        /* \"#utility.yul\":9372:9728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9935:9937   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9917:9938   */\n      mstore\n        /* \"#utility.yul\":9974:9976   */\n      0x1c\n        /* \"#utility.yul\":9954:9972   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9947:9977   */\n      mstore\n        /* \"#utility.yul\":10013:10043   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":9993:10011   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9986:10044   */\n      mstore\n        /* \"#utility.yul\":10061:10079   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_113\n        /* \"#utility.yul\":9733:10085   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9935:9937   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9917:9938   */\n      mstore\n        /* \"#utility.yul\":9974:9976   */\n      0x1c\n        /* \"#utility.yul\":9954:9972   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9947:9977   */\n      mstore\n        /* \"#utility.yul\":10013:10043   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":9993:10011   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9986:10044   */\n      mstore\n        /* \"#utility.yul\":10061:10079   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_113\n        /* \"#utility.yul\":9733:10085   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9680  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9689  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9688:9689  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9689  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9726  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9717  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9726  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9731  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9780  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9718:9725  tokenId */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9780  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9780  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1599:1852  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1690:1765  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10292:10294   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1690:1765  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10274:10295   */\n      mstore\n        /* \"#utility.yul\":10331:10333   */\n      0x2e\n        /* \"#utility.yul\":10311:10329   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10304:10334   */\n      mstore\n        /* \"#utility.yul\":10370:10404   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":10350:10368   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10343:10405   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10421:10439   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10414:10458   */\n      mstore\n        /* \"#utility.yul\":10475:10494   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1690:1765  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_113\n        /* \"#utility.yul\":10090:10500   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1690:1765  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1775:1794  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1775:1785  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1775:1794  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1775:1806  _tokenURIs[tokenId] = _tokenURI */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1797:1806  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1775:1794  _tokenURIs[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1775:1806  _tokenURIs[tokenId] = _tokenURI */\n      tag_243\n      jump\t// in\n    tag_242:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1822:1845  MetadataUpdate(tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":4147:4172   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1822:1845  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n      swap1\n        /* \"#utility.yul\":4135:4137   */\n      0x20\n        /* \"#utility.yul\":4120:4138   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1822:1845  MetadataUpdate(tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1599:1852  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7497:7501  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7526  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7543  ERC721.ownerOf */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7552  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7581:7586  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7577  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_248\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7638:7645  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7637  getApproved */\n      tag_37\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7658  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11381:11385  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11369:11376  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11368  ERC721.ownerOf */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11346:11427  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_255\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13317:13319   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13299:13320   */\n      mstore\n        /* \"#utility.yul\":13356:13358   */\n      0x24\n        /* \"#utility.yul\":13336:13354   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13329:13359   */\n      mstore\n        /* \"#utility.yul\":13395:13429   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":13375:13393   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13368:13430   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":13446:13464   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13439:13473   */\n      mstore\n        /* \"#utility.yul\":13490:13509   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_113\n        /* \"#utility.yul\":13115:13515   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11682:11686  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11670:11677  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11669  ERC721.ownerOf */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11728  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_255\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11812  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12274  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12285  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12344  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12358  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12999:13007  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:12995  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13722:13724   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13704:13725   */\n      mstore\n        /* \"#utility.yul\":13761:13763   */\n      0x19\n        /* \"#utility.yul\":13741:13759   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13734:13764   */\n      mstore\n        /* \"#utility.yul\":13800:13827   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":13780:13798   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13773:13828   */\n      mstore\n        /* \"#utility.yul\":13845:13863   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_113\n        /* \"#utility.yul\":13520:13869   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13065  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13093  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6448:6452  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6454:6456  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6458:6465  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6447  _transfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6507:6511  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6515  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6517:6524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6526:6530  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6506  _checkOnERC721Received */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6476:6586  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_277\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_282\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_283)\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_286\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14074:14078  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14107  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14165  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_297\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14180:14184  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14186:14193  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14195:14199  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_298\n      jump\t// in\n    tag_297:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_300\n      swap2\n      dup2\n      add\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      0x01\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_302\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_307\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_306)\n    tag_307:\n      0x60\n      swap2\n      pop\n    tag_306:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14373  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14380  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14384:14385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14385  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14409:14469  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_277\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14642  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14630:14643  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14621:14627  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14617:14619  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14613:14628  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14606:14644  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_302:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14243:14301  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_192)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n    tag_295:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14735:14739  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_314\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_315\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_317\n      jumpi\n      tag_317\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_319:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_320:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_320\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_328\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_347:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_26:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_359:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_283\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_347\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_348:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_363:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_363)\n    tag_365:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_349:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_367\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_348\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_33:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_283\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_349\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_36:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_371:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_350:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_374:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_42:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_376:\n        /* \"#utility.yul\":2087:2116   */\n      tag_377\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_350\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2305   */\n    tag_318:\n        /* \"#utility.yul\":2239:2249   */\n      0x4e487b71\n        /* \"#utility.yul\":2234:2237   */\n      0xe0\n        /* \"#utility.yul\":2230:2250   */\n      shl\n        /* \"#utility.yul\":2227:2228   */\n      0x00\n        /* \"#utility.yul\":2220:2251   */\n      mstore\n        /* \"#utility.yul\":2270:2274   */\n      0x41\n        /* \"#utility.yul\":2267:2268   */\n      0x04\n        /* \"#utility.yul\":2260:2275   */\n      mstore\n        /* \"#utility.yul\":2294:2298   */\n      0x24\n        /* \"#utility.yul\":2291:2292   */\n      0x00\n        /* \"#utility.yul\":2284:2299   */\n      revert\n        /* \"#utility.yul\":2310:2942   */\n    tag_351:\n        /* \"#utility.yul\":2375:2380   */\n      0x00\n        /* \"#utility.yul\":2405:2423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2446:2448   */\n      dup1\n        /* \"#utility.yul\":2438:2444   */\n      dup5\n        /* \"#utility.yul\":2435:2449   */\n      gt\n        /* \"#utility.yul\":2432:2472   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2452:2470   */\n      tag_381\n      tag_318\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2527:2529   */\n      0x40\n        /* \"#utility.yul\":2521:2530   */\n      mload\n        /* \"#utility.yul\":2495:2497   */\n      0x1f\n        /* \"#utility.yul\":2581:2596   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2577:2601   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2603:2605   */\n      0x3f\n        /* \"#utility.yul\":2573:2606   */\n      add\n        /* \"#utility.yul\":2569:2611   */\n      and\n        /* \"#utility.yul\":2557:2612   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2627:2645   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2647:2669   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2624:2670   */\n      or\n        /* \"#utility.yul\":2621:2693   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2673:2691   */\n      tag_383\n      tag_318\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2713:2723   */\n      dup2\n        /* \"#utility.yul\":2709:2711   */\n      0x40\n        /* \"#utility.yul\":2702:2724   */\n      mstore\n        /* \"#utility.yul\":2742:2748   */\n      dup1\n        /* \"#utility.yul\":2733:2748   */\n      swap4\n      pop\n        /* \"#utility.yul\":2772:2778   */\n      dup6\n        /* \"#utility.yul\":2764:2770   */\n      dup2\n        /* \"#utility.yul\":2757:2779   */\n      mstore\n        /* \"#utility.yul\":2812:2815   */\n      dup7\n        /* \"#utility.yul\":2803:2809   */\n      dup7\n        /* \"#utility.yul\":2798:2801   */\n      dup7\n        /* \"#utility.yul\":2794:2810   */\n      add\n        /* \"#utility.yul\":2791:2816   */\n      gt\n        /* \"#utility.yul\":2788:2833   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2826:2827   */\n      dup1\n        /* \"#utility.yul\":2819:2831   */\n      revert\n        /* \"#utility.yul\":2788:2833   */\n    tag_384:\n        /* \"#utility.yul\":2879:2885   */\n      dup6\n        /* \"#utility.yul\":2874:2877   */\n      dup6\n        /* \"#utility.yul\":2867:2871   */\n      0x20\n        /* \"#utility.yul\":2859:2865   */\n      dup4\n        /* \"#utility.yul\":2855:2872   */\n      add\n        /* \"#utility.yul\":2842:2886   */\n      calldatacopy\n        /* \"#utility.yul\":2934:2935   */\n      0x00\n        /* \"#utility.yul\":2927:2931   */\n      0x20\n        /* \"#utility.yul\":2918:2924   */\n      dup8\n        /* \"#utility.yul\":2910:2916   */\n      dup4\n        /* \"#utility.yul\":2906:2925   */\n      add\n        /* \"#utility.yul\":2902:2932   */\n      add\n        /* \"#utility.yul\":2895:2936   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2310:2942   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2947:3472   */\n    tag_46:\n        /* \"#utility.yul\":3025:3031   */\n      0x00\n        /* \"#utility.yul\":3033:3039   */\n      dup1\n        /* \"#utility.yul\":3086:3088   */\n      0x40\n        /* \"#utility.yul\":3074:3083   */\n      dup4\n        /* \"#utility.yul\":3065:3072   */\n      dup6\n        /* \"#utility.yul\":3061:3084   */\n      sub\n        /* \"#utility.yul\":3057:3089   */\n      slt\n        /* \"#utility.yul\":3054:3106   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":3102:3103   */\n      0x00\n        /* \"#utility.yul\":3099:3100   */\n      dup1\n        /* \"#utility.yul\":3092:3104   */\n      revert\n        /* \"#utility.yul\":3054:3106   */\n    tag_386:\n        /* \"#utility.yul\":3125:3154   */\n      tag_387\n        /* \"#utility.yul\":3144:3153   */\n      dup4\n        /* \"#utility.yul\":3125:3154   */\n      tag_350\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3115:3154   */\n      swap2\n      pop\n        /* \"#utility.yul\":3205:3207   */\n      0x20\n        /* \"#utility.yul\":3194:3203   */\n      dup4\n        /* \"#utility.yul\":3190:3208   */\n      add\n        /* \"#utility.yul\":3177:3209   */\n      calldataload\n        /* \"#utility.yul\":3232:3250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3224:3230   */\n      dup2\n        /* \"#utility.yul\":3221:3251   */\n      gt\n        /* \"#utility.yul\":3218:3268   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3264:3265   */\n      0x00\n        /* \"#utility.yul\":3261:3262   */\n      dup1\n        /* \"#utility.yul\":3254:3266   */\n      revert\n        /* \"#utility.yul\":3218:3268   */\n    tag_388:\n        /* \"#utility.yul\":3287:3309   */\n      dup4\n      add\n        /* \"#utility.yul\":3340:3344   */\n      0x1f\n        /* \"#utility.yul\":3332:3345   */\n      dup2\n      add\n        /* \"#utility.yul\":3328:3355   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3318:3373   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3369:3370   */\n      0x00\n        /* \"#utility.yul\":3366:3367   */\n      dup1\n        /* \"#utility.yul\":3359:3371   */\n      revert\n        /* \"#utility.yul\":3318:3373   */\n    tag_389:\n        /* \"#utility.yul\":3392:3466   */\n      tag_390\n        /* \"#utility.yul\":3458:3465   */\n      dup6\n        /* \"#utility.yul\":3453:3455   */\n      dup3\n        /* \"#utility.yul\":3440:3456   */\n      calldataload\n        /* \"#utility.yul\":3435:3437   */\n      0x20\n        /* \"#utility.yul\":3431:3433   */\n      dup5\n        /* \"#utility.yul\":3427:3438   */\n      add\n        /* \"#utility.yul\":3392:3466   */\n      tag_351\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3382:3466   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2947:3472   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3805   */\n    tag_50:\n        /* \"#utility.yul\":3554:3560   */\n      0x00\n        /* \"#utility.yul\":3562:3568   */\n      dup1\n        /* \"#utility.yul\":3570:3576   */\n      0x00\n        /* \"#utility.yul\":3623:3625   */\n      0x60\n        /* \"#utility.yul\":3611:3620   */\n      dup5\n        /* \"#utility.yul\":3602:3609   */\n      dup7\n        /* \"#utility.yul\":3598:3621   */\n      sub\n        /* \"#utility.yul\":3594:3626   */\n      slt\n        /* \"#utility.yul\":3591:3643   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":3639:3640   */\n      0x00\n        /* \"#utility.yul\":3636:3637   */\n      dup1\n        /* \"#utility.yul\":3629:3641   */\n      revert\n        /* \"#utility.yul\":3591:3643   */\n    tag_392:\n        /* \"#utility.yul\":3662:3691   */\n      tag_393\n        /* \"#utility.yul\":3681:3690   */\n      dup5\n        /* \"#utility.yul\":3662:3691   */\n      tag_350\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3652:3691   */\n      swap3\n      pop\n        /* \"#utility.yul\":3710:3748   */\n      tag_394\n        /* \"#utility.yul\":3744:3746   */\n      0x20\n        /* \"#utility.yul\":3733:3742   */\n      dup6\n        /* \"#utility.yul\":3729:3747   */\n      add\n        /* \"#utility.yul\":3710:3748   */\n      tag_350\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3700:3748   */\n      swap2\n      pop\n        /* \"#utility.yul\":3795:3797   */\n      0x40\n        /* \"#utility.yul\":3784:3793   */\n      dup5\n        /* \"#utility.yul\":3780:3798   */\n      add\n        /* \"#utility.yul\":3767:3799   */\n      calldataload\n        /* \"#utility.yul\":3757:3799   */\n      swap1\n      pop\n        /* \"#utility.yul\":3477:3805   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3810:3996   */\n    tag_61:\n        /* \"#utility.yul\":3869:3875   */\n      0x00\n        /* \"#utility.yul\":3922:3924   */\n      0x20\n        /* \"#utility.yul\":3910:3919   */\n      dup3\n        /* \"#utility.yul\":3901:3908   */\n      dup5\n        /* \"#utility.yul\":3897:3920   */\n      sub\n        /* \"#utility.yul\":3893:3925   */\n      slt\n        /* \"#utility.yul\":3890:3942   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3938:3939   */\n      0x00\n        /* \"#utility.yul\":3935:3936   */\n      dup1\n        /* \"#utility.yul\":3928:3940   */\n      revert\n        /* \"#utility.yul\":3890:3942   */\n    tag_396:\n        /* \"#utility.yul\":3961:3990   */\n      tag_283\n        /* \"#utility.yul\":3980:3989   */\n      dup3\n        /* \"#utility.yul\":3961:3990   */\n      tag_350\n      jump\t// in\n        /* \"#utility.yul\":4183:4530   */\n    tag_75:\n        /* \"#utility.yul\":4248:4254   */\n      0x00\n        /* \"#utility.yul\":4256:4262   */\n      dup1\n        /* \"#utility.yul\":4309:4311   */\n      0x40\n        /* \"#utility.yul\":4297:4306   */\n      dup4\n        /* \"#utility.yul\":4288:4295   */\n      dup6\n        /* \"#utility.yul\":4284:4307   */\n      sub\n        /* \"#utility.yul\":4280:4312   */\n      slt\n        /* \"#utility.yul\":4277:4329   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":4325:4326   */\n      0x00\n        /* \"#utility.yul\":4322:4323   */\n      dup1\n        /* \"#utility.yul\":4315:4327   */\n      revert\n        /* \"#utility.yul\":4277:4329   */\n    tag_400:\n        /* \"#utility.yul\":4348:4377   */\n      tag_401\n        /* \"#utility.yul\":4367:4376   */\n      dup4\n        /* \"#utility.yul\":4348:4377   */\n      tag_350\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4338:4377   */\n      swap2\n      pop\n        /* \"#utility.yul\":4427:4429   */\n      0x20\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4412:4430   */\n      add\n        /* \"#utility.yul\":4399:4431   */\n      calldataload\n        /* \"#utility.yul\":4474:4479   */\n      dup1\n        /* \"#utility.yul\":4467:4480   */\n      iszero\n        /* \"#utility.yul\":4460:4481   */\n      iszero\n        /* \"#utility.yul\":4453:4458   */\n      dup2\n        /* \"#utility.yul\":4450:4482   */\n      eq\n        /* \"#utility.yul\":4440:4500   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":4496:4497   */\n      0x00\n        /* \"#utility.yul\":4493:4494   */\n      dup1\n        /* \"#utility.yul\":4486:4498   */\n      revert\n        /* \"#utility.yul\":4440:4500   */\n    tag_402:\n        /* \"#utility.yul\":4519:4524   */\n      dup1\n        /* \"#utility.yul\":4509:4524   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4183:4530   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:5202   */\n    tag_79:\n        /* \"#utility.yul\":4630:4636   */\n      0x00\n        /* \"#utility.yul\":4638:4644   */\n      dup1\n        /* \"#utility.yul\":4646:4652   */\n      0x00\n        /* \"#utility.yul\":4654:4660   */\n      dup1\n        /* \"#utility.yul\":4707:4710   */\n      0x80\n        /* \"#utility.yul\":4695:4704   */\n      dup6\n        /* \"#utility.yul\":4686:4693   */\n      dup8\n        /* \"#utility.yul\":4682:4705   */\n      sub\n        /* \"#utility.yul\":4678:4711   */\n      slt\n        /* \"#utility.yul\":4675:4728   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4724:4725   */\n      0x00\n        /* \"#utility.yul\":4721:4722   */\n      dup1\n        /* \"#utility.yul\":4714:4726   */\n      revert\n        /* \"#utility.yul\":4675:4728   */\n    tag_404:\n        /* \"#utility.yul\":4747:4776   */\n      tag_405\n        /* \"#utility.yul\":4766:4775   */\n      dup6\n        /* \"#utility.yul\":4747:4776   */\n      tag_350\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4737:4776   */\n      swap4\n      pop\n        /* \"#utility.yul\":4795:4833   */\n      tag_406\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"#utility.yul\":4818:4827   */\n      dup7\n        /* \"#utility.yul\":4814:4832   */\n      add\n        /* \"#utility.yul\":4795:4833   */\n      tag_350\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4785:4833   */\n      swap3\n      pop\n        /* \"#utility.yul\":4880:4882   */\n      0x40\n        /* \"#utility.yul\":4869:4878   */\n      dup6\n        /* \"#utility.yul\":4865:4883   */\n      add\n        /* \"#utility.yul\":4852:4884   */\n      calldataload\n        /* \"#utility.yul\":4842:4884   */\n      swap2\n      pop\n        /* \"#utility.yul\":4935:4937   */\n      0x60\n        /* \"#utility.yul\":4924:4933   */\n      dup6\n        /* \"#utility.yul\":4920:4938   */\n      add\n        /* \"#utility.yul\":4907:4939   */\n      calldataload\n        /* \"#utility.yul\":4962:4980   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4954:4960   */\n      dup2\n        /* \"#utility.yul\":4951:4981   */\n      gt\n        /* \"#utility.yul\":4948:4998   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4991:4992   */\n      dup1\n        /* \"#utility.yul\":4984:4996   */\n      revert\n        /* \"#utility.yul\":4948:4998   */\n    tag_407:\n        /* \"#utility.yul\":5017:5039   */\n      dup6\n      add\n        /* \"#utility.yul\":5070:5074   */\n      0x1f\n        /* \"#utility.yul\":5062:5075   */\n      dup2\n      add\n        /* \"#utility.yul\":5058:5085   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5048:5103   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":5099:5100   */\n      0x00\n        /* \"#utility.yul\":5096:5097   */\n      dup1\n        /* \"#utility.yul\":5089:5101   */\n      revert\n        /* \"#utility.yul\":5048:5103   */\n    tag_408:\n        /* \"#utility.yul\":5122:5196   */\n      tag_409\n        /* \"#utility.yul\":5188:5195   */\n      dup8\n        /* \"#utility.yul\":5183:5185   */\n      dup3\n        /* \"#utility.yul\":5170:5186   */\n      calldataload\n        /* \"#utility.yul\":5165:5167   */\n      0x20\n        /* \"#utility.yul\":5161:5163   */\n      dup5\n        /* \"#utility.yul\":5157:5168   */\n      add\n        /* \"#utility.yul\":5122:5196   */\n      tag_351\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5112:5196   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4535:5202   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5207:5467   */\n    tag_90:\n        /* \"#utility.yul\":5275:5281   */\n      0x00\n        /* \"#utility.yul\":5283:5289   */\n      dup1\n        /* \"#utility.yul\":5336:5338   */\n      0x40\n        /* \"#utility.yul\":5324:5333   */\n      dup4\n        /* \"#utility.yul\":5315:5322   */\n      dup6\n        /* \"#utility.yul\":5311:5334   */\n      sub\n        /* \"#utility.yul\":5307:5339   */\n      slt\n        /* \"#utility.yul\":5304:5356   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":5352:5353   */\n      0x00\n        /* \"#utility.yul\":5349:5350   */\n      dup1\n        /* \"#utility.yul\":5342:5354   */\n      revert\n        /* \"#utility.yul\":5304:5356   */\n    tag_411:\n        /* \"#utility.yul\":5375:5404   */\n      tag_412\n        /* \"#utility.yul\":5394:5403   */\n      dup4\n        /* \"#utility.yul\":5375:5404   */\n      tag_350\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5365:5404   */\n      swap2\n      pop\n        /* \"#utility.yul\":5423:5461   */\n      tag_413\n        /* \"#utility.yul\":5457:5459   */\n      0x20\n        /* \"#utility.yul\":5446:5455   */\n      dup5\n        /* \"#utility.yul\":5442:5460   */\n      add\n        /* \"#utility.yul\":5423:5461   */\n      tag_350\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5413:5461   */\n      swap1\n      pop\n        /* \"#utility.yul\":5207:5467   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5472:5852   */\n    tag_102:\n        /* \"#utility.yul\":5551:5552   */\n      0x01\n        /* \"#utility.yul\":5547:5559   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5594:5606   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5615:5676   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":5669:5673   */\n      0x7f\n        /* \"#utility.yul\":5661:5667   */\n      dup3\n        /* \"#utility.yul\":5657:5674   */\n      and\n        /* \"#utility.yul\":5647:5674   */\n      swap2\n      pop\n        /* \"#utility.yul\":5615:5676   */\n    tag_415:\n        /* \"#utility.yul\":5722:5724   */\n      0x20\n        /* \"#utility.yul\":5714:5720   */\n      dup3\n        /* \"#utility.yul\":5711:5725   */\n      lt\n        /* \"#utility.yul\":5691:5709   */\n      dup2\n        /* \"#utility.yul\":5688:5726   */\n      sub\n        /* \"#utility.yul\":5685:5846   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":5768:5778   */\n      0x4e487b71\n        /* \"#utility.yul\":5763:5766   */\n      0xe0\n        /* \"#utility.yul\":5759:5779   */\n      shl\n        /* \"#utility.yul\":5756:5757   */\n      0x00\n        /* \"#utility.yul\":5749:5780   */\n      mstore\n        /* \"#utility.yul\":5803:5807   */\n      0x22\n        /* \"#utility.yul\":5800:5801   */\n      0x04\n        /* \"#utility.yul\":5793:5808   */\n      mstore\n        /* \"#utility.yul\":5831:5835   */\n      0x24\n        /* \"#utility.yul\":5828:5829   */\n      0x00\n        /* \"#utility.yul\":5821:5836   */\n      revert\n        /* \"#utility.yul\":5685:5846   */\n    tag_416:\n      pop\n        /* \"#utility.yul\":5472:5852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6689:6921   */\n    tag_134:\n        /* \"#utility.yul\":6728:6731   */\n      0x00\n        /* \"#utility.yul\":6749:6766   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6746:6886   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":6808:6818   */\n      0x4e487b71\n        /* \"#utility.yul\":6803:6806   */\n      0xe0\n        /* \"#utility.yul\":6799:6819   */\n      shl\n        /* \"#utility.yul\":6796:6797   */\n      0x00\n        /* \"#utility.yul\":6789:6820   */\n      mstore\n        /* \"#utility.yul\":6843:6847   */\n      0x11\n        /* \"#utility.yul\":6840:6841   */\n      0x04\n        /* \"#utility.yul\":6833:6848   */\n      mstore\n        /* \"#utility.yul\":6871:6875   */\n      0x24\n        /* \"#utility.yul\":6868:6869   */\n      0x00\n        /* \"#utility.yul\":6861:6876   */\n      revert\n        /* \"#utility.yul\":6746:6886   */\n    tag_420:\n      pop\n        /* \"#utility.yul\":6913:6914   */\n      0x01\n        /* \"#utility.yul\":6902:6915   */\n      add\n      swap1\n        /* \"#utility.yul\":6689:6921   */\n      jump\t// out\n        /* \"#utility.yul\":6926:7335   */\n    tag_141:\n        /* \"#utility.yul\":7128:7130   */\n      0x20\n        /* \"#utility.yul\":7110:7131   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7167:7169   */\n      0x2d\n        /* \"#utility.yul\":7147:7165   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7140:7170   */\n      mstore\n        /* \"#utility.yul\":7206:7240   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":7201:7203   */\n      0x40\n        /* \"#utility.yul\":7186:7204   */\n      dup3\n      add\n        /* \"#utility.yul\":7179:7241   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":7272:7274   */\n      0x60\n        /* \"#utility.yul\":7257:7275   */\n      dup3\n      add\n        /* \"#utility.yul\":7250:7293   */\n      mstore\n        /* \"#utility.yul\":7325:7328   */\n      0x80\n        /* \"#utility.yul\":7310:7329   */\n      add\n      swap1\n        /* \"#utility.yul\":6926:7335   */\n      jump\t// out\n        /* \"#utility.yul\":8103:8599   */\n    tag_191:\n        /* \"#utility.yul\":8282:8285   */\n      0x00\n        /* \"#utility.yul\":8320:8326   */\n      dup4\n        /* \"#utility.yul\":8314:8327   */\n      mload\n        /* \"#utility.yul\":8336:8402   */\n      tag_425\n        /* \"#utility.yul\":8395:8401   */\n      dup2\n        /* \"#utility.yul\":8390:8393   */\n      dup5\n        /* \"#utility.yul\":8383:8387   */\n      0x20\n        /* \"#utility.yul\":8375:8381   */\n      dup9\n        /* \"#utility.yul\":8371:8388   */\n      add\n        /* \"#utility.yul\":8336:8402   */\n      tag_348\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8465:8478   */\n      dup4\n      mload\n        /* \"#utility.yul\":8424:8440   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8487:8557   */\n      tag_426\n        /* \"#utility.yul\":8465:8478   */\n      dup2\n        /* \"#utility.yul\":8424:8440   */\n      dup4\n        /* \"#utility.yul\":8534:8538   */\n      0x20\n        /* \"#utility.yul\":8522:8539   */\n      dup9\n      add\n        /* \"#utility.yul\":8487:8557   */\n      tag_348\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8573:8593   */\n      add\n      swap5\n        /* \"#utility.yul\":8103:8599   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10631:11176   */\n    tag_353:\n        /* \"#utility.yul\":10733:10735   */\n      0x1f\n        /* \"#utility.yul\":10728:10731   */\n      dup3\n        /* \"#utility.yul\":10725:10736   */\n      gt\n        /* \"#utility.yul\":10722:11170   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":10769:10770   */\n      0x00\n        /* \"#utility.yul\":10794:10799   */\n      dup2\n        /* \"#utility.yul\":10790:10792   */\n      dup2\n        /* \"#utility.yul\":10783:10800   */\n      mstore\n        /* \"#utility.yul\":10839:10843   */\n      0x20\n        /* \"#utility.yul\":10835:10837   */\n      dup2\n        /* \"#utility.yul\":10825:10844   */\n      keccak256\n        /* \"#utility.yul\":10909:10911   */\n      0x1f\n        /* \"#utility.yul\":10897:10907   */\n      dup6\n        /* \"#utility.yul\":10893:10912   */\n      add\n        /* \"#utility.yul\":10890:10891   */\n      0x05\n        /* \"#utility.yul\":10886:10913   */\n      shr\n        /* \"#utility.yul\":10880:10884   */\n      dup2\n        /* \"#utility.yul\":10876:10914   */\n      add\n        /* \"#utility.yul\":10945:10949   */\n      0x20\n        /* \"#utility.yul\":10933:10943   */\n      dup7\n        /* \"#utility.yul\":10930:10950   */\n      lt\n        /* \"#utility.yul\":10927:10974   */\n      iszero\n      tag_435\n      jumpi\n      pop\n        /* \"#utility.yul\":10968:10972   */\n      dup1\n        /* \"#utility.yul\":10927:10974   */\n    tag_435:\n        /* \"#utility.yul\":11023:11025   */\n      0x1f\n        /* \"#utility.yul\":11018:11021   */\n      dup6\n        /* \"#utility.yul\":11014:11026   */\n      add\n        /* \"#utility.yul\":11011:11012   */\n      0x05\n        /* \"#utility.yul\":11007:11027   */\n      shr\n        /* \"#utility.yul\":11001:11005   */\n      dup3\n        /* \"#utility.yul\":10997:11028   */\n      add\n        /* \"#utility.yul\":10987:11028   */\n      swap2\n      pop\n        /* \"#utility.yul\":11078:11160   */\n    tag_436:\n        /* \"#utility.yul\":11096:11098   */\n      dup2\n        /* \"#utility.yul\":11089:11094   */\n      dup2\n        /* \"#utility.yul\":11086:11099   */\n      lt\n        /* \"#utility.yul\":11078:11160   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":11141:11158   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":11122:11123   */\n      0x01\n        /* \"#utility.yul\":11111:11124   */\n      add\n        /* \"#utility.yul\":11078:11160   */\n      jump(tag_436)\n    tag_438:\n        /* \"#utility.yul\":11082:11085   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10631:11176   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11352:12704   */\n    tag_243:\n        /* \"#utility.yul\":11478:11481   */\n      dup2\n        /* \"#utility.yul\":11472:11482   */\n      mload\n        /* \"#utility.yul\":11505:11523   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11497:11503   */\n      dup2\n        /* \"#utility.yul\":11494:11524   */\n      gt\n        /* \"#utility.yul\":11491:11547   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":11527:11545   */\n      tag_442\n      tag_318\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11556:11653   */\n      tag_443\n        /* \"#utility.yul\":11646:11652   */\n      dup2\n        /* \"#utility.yul\":11606:11644   */\n      tag_444\n        /* \"#utility.yul\":11638:11642   */\n      dup5\n        /* \"#utility.yul\":11632:11643   */\n      sload\n        /* \"#utility.yul\":11606:11644   */\n      tag_102\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11600:11604   */\n      dup5\n        /* \"#utility.yul\":11556:11653   */\n      tag_353\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11708:11712   */\n      0x20\n      dup1\n        /* \"#utility.yul\":11772:11774   */\n      0x1f\n        /* \"#utility.yul\":11761:11775   */\n      dup4\n      gt\n        /* \"#utility.yul\":11789:11790   */\n      0x01\n        /* \"#utility.yul\":11784:12447   */\n      dup2\n      eq\n      tag_446\n      jumpi\n        /* \"#utility.yul\":12491:12492   */\n      0x00\n        /* \"#utility.yul\":12508:12514   */\n      dup5\n        /* \"#utility.yul\":12505:12594   */\n      iszero\n      tag_447\n      jumpi\n      pop\n        /* \"#utility.yul\":12560:12579   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":12554:12580   */\n      mload\n        /* \"#utility.yul\":12505:12594   */\n    tag_447:\n      not(0x00)\n        /* \"#utility.yul\":11309:11310   */\n      0x03\n        /* \"#utility.yul\":11305:11316   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":11301:11325   */\n      shr\n        /* \"#utility.yul\":11297:11326   */\n      not\n        /* \"#utility.yul\":11287:11327   */\n      and\n        /* \"#utility.yul\":11333:11334   */\n      0x01\n        /* \"#utility.yul\":11329:11340   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":11284:11341   */\n      or\n        /* \"#utility.yul\":12607:12688   */\n      dup6\n      sstore\n        /* \"#utility.yul\":11754:12698   */\n      jump(tag_438)\n        /* \"#utility.yul\":11784:12447   */\n    tag_446:\n        /* \"#utility.yul\":10578:10579   */\n      0x00\n        /* \"#utility.yul\":10571:10585   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":10615:10619   */\n      0x20\n        /* \"#utility.yul\":10602:10620   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":11820:11840   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":11938:12174   */\n    tag_450:\n        /* \"#utility.yul\":11952:11959   */\n      dup3\n        /* \"#utility.yul\":11949:11950   */\n      dup2\n        /* \"#utility.yul\":11946:11960   */\n      lt\n        /* \"#utility.yul\":11938:12174   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":12041:12060   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":12035:12061   */\n      mload\n        /* \"#utility.yul\":12020:12062   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12133:12160   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":12101:12102   */\n      0x01\n        /* \"#utility.yul\":12089:12103   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":11968:11987   */\n      dup5\n      add\n        /* \"#utility.yul\":11938:12174   */\n      jump(tag_450)\n    tag_452:\n        /* \"#utility.yul\":11942:11945   */\n      pop\n        /* \"#utility.yul\":12202:12208   */\n      dup6\n        /* \"#utility.yul\":12193:12200   */\n      dup3\n        /* \"#utility.yul\":12190:12209   */\n      lt\n        /* \"#utility.yul\":12187:12388   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":12263:12282   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12257:12283   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":12346:12347   */\n      0x03\n        /* \"#utility.yul\":12342:12356   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":12358:12361   */\n      0xf8\n        /* \"#utility.yul\":12338:12362   */\n      and\n        /* \"#utility.yul\":12334:12371   */\n      shr\n        /* \"#utility.yul\":12330:12372   */\n      not\n        /* \"#utility.yul\":12315:12373   */\n      and\n        /* \"#utility.yul\":12300:12374   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12187:12388   */\n    tag_453:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12434:12435   */\n      0x01\n        /* \"#utility.yul\":12418:12432   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":12414:12436   */\n      add\n        /* \"#utility.yul\":12401:12437   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":11352:12704   */\n      jump\t// out\n        /* \"#utility.yul\":12709:13110   */\n    tag_255:\n        /* \"#utility.yul\":12911:12913   */\n      0x20\n        /* \"#utility.yul\":12893:12914   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12950:12952   */\n      0x25\n        /* \"#utility.yul\":12930:12948   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12923:12953   */\n      mstore\n        /* \"#utility.yul\":12989:13023   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":12984:12986   */\n      0x40\n        /* \"#utility.yul\":12969:12987   */\n      dup3\n      add\n        /* \"#utility.yul\":12962:13024   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":13055:13057   */\n      0x60\n        /* \"#utility.yul\":13040:13058   */\n      dup3\n      add\n        /* \"#utility.yul\":13033:13068   */\n      mstore\n        /* \"#utility.yul\":13100:13103   */\n      0x80\n        /* \"#utility.yul\":13085:13104   */\n      add\n      swap1\n        /* \"#utility.yul\":12709:13110   */\n      jump\t// out\n        /* \"#utility.yul\":13874:14288   */\n    tag_277:\n        /* \"#utility.yul\":14076:14078   */\n      0x20\n        /* \"#utility.yul\":14058:14079   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14115:14117   */\n      0x32\n        /* \"#utility.yul\":14095:14113   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14088:14118   */\n      mstore\n        /* \"#utility.yul\":14154:14188   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":14149:14151   */\n      0x40\n        /* \"#utility.yul\":14134:14152   */\n      dup3\n      add\n        /* \"#utility.yul\":14127:14189   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":14220:14222   */\n      0x60\n        /* \"#utility.yul\":14205:14223   */\n      dup3\n      add\n        /* \"#utility.yul\":14198:14246   */\n      mstore\n        /* \"#utility.yul\":14278:14281   */\n      0x80\n        /* \"#utility.yul\":14263:14282   */\n      add\n      swap1\n        /* \"#utility.yul\":13874:14288   */\n      jump\t// out\n        /* \"#utility.yul\":14293:14782   */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14562:14577   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":14544:14578   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14614:14629   */\n      dup5\n      and\n        /* \"#utility.yul\":14609:14611   */\n      0x20\n        /* \"#utility.yul\":14594:14612   */\n      dup3\n      add\n        /* \"#utility.yul\":14587:14630   */\n      mstore\n        /* \"#utility.yul\":14661:14663   */\n      0x40\n        /* \"#utility.yul\":14646:14664   */\n      dup2\n      add\n        /* \"#utility.yul\":14639:14673   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14709:14712   */\n      0x80\n        /* \"#utility.yul\":14704:14706   */\n      0x60\n        /* \"#utility.yul\":14689:14707   */\n      dup3\n      add\n        /* \"#utility.yul\":14682:14713   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14487:14491   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14730:14776   */\n      tag_459\n      swap1\n        /* \"#utility.yul\":14756:14775   */\n      dup4\n      add\n        /* \"#utility.yul\":14748:14754   */\n      dup5\n        /* \"#utility.yul\":14730:14776   */\n      tag_349\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14722:14776   */\n      swap7\n        /* \"#utility.yul\":14293:14782   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14787:15036   */\n    tag_301:\n        /* \"#utility.yul\":14856:14862   */\n      0x00\n        /* \"#utility.yul\":14909:14911   */\n      0x20\n        /* \"#utility.yul\":14897:14906   */\n      dup3\n        /* \"#utility.yul\":14888:14895   */\n      dup5\n        /* \"#utility.yul\":14884:14907   */\n      sub\n        /* \"#utility.yul\":14880:14912   */\n      slt\n        /* \"#utility.yul\":14877:14929   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":14925:14926   */\n      0x00\n        /* \"#utility.yul\":14922:14923   */\n      dup1\n        /* \"#utility.yul\":14915:14927   */\n      revert\n        /* \"#utility.yul\":14877:14929   */\n    tag_461:\n        /* \"#utility.yul\":14957:14966   */\n      dup2\n        /* \"#utility.yul\":14951:14967   */\n      mload\n        /* \"#utility.yul\":14976:15006   */\n      tag_283\n        /* \"#utility.yul\":15000:15005   */\n      dup2\n        /* \"#utility.yul\":14976:15006   */\n      tag_347\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e7bd77182af0f7fd03e6a4268adde4e9ce0e5d5086b48d6a8959efe24d7ad27064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2995": {
									"entryPoint": null,
									"id": 2995,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1726": {
									"entryPoint": 125,
									"id": 1726,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 129,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:17"
															},
															"nodeType": "YulIf",
															"src": "220:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:17"
															},
															"nodeType": "YulIf",
															"src": "353:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:17"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:17"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:17"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:17"
															},
															"nodeType": "YulIf",
															"src": "536:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:17"
															},
															"nodeType": "YulIf",
															"src": "698:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:17"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:17"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:17"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:17",
																"statements": []
															},
															"src": "779:133:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:17",
														"type": ""
													}
												],
												"src": "146:840:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:17"
															},
															"nodeType": "YulIf",
															"src": "1119:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:17"
															},
															"nodeType": "YulIf",
															"src": "1256:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:17"
															},
															"nodeType": "YulIf",
															"src": "1429:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:17",
														"type": ""
													}
												],
												"src": "991:562:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:17"
															},
															"nodeType": "YulIf",
															"src": "1701:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:17"
															},
															"nodeType": "YulIf",
															"src": "1771:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:17",
														"type": ""
													}
												],
												"src": "1558:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:17",
														"type": ""
													}
												],
												"src": "1943:121:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:17"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:17",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:17"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:17"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:17"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:17"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:17"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:17",
																			"statements": []
																		},
																		"src": "2516:82:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:17"
															},
															"nodeType": "YulIf",
															"src": "2160:448:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:17",
														"type": ""
													}
												],
												"src": "2069:545:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:17",
														"type": ""
													}
												],
												"src": "2619:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:17"
															},
															"nodeType": "YulIf",
															"src": "2929:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:17",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:17"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:17",
																					"statements": []
																				},
																				"src": "3376:236:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:17"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:17"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:17",
														"type": ""
													}
												],
												"src": "2790:1352:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006008553480156200001657600080fd5b5060405162001b9838038062001b98833981016040819052620000399162000198565b8181600062000049838262000291565b50600162000058828262000291565b505050620000756200006f6200007d60201b60201c565b62000081565b50506200035d565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000fb57600080fd5b81516001600160401b0380821115620001185762000118620000d3565b604051601f8301601f19908116603f01168101908282118183101715620001435762000143620000d3565b816040528381526020925086838588010111156200016057600080fd5b600091505b8382101562000184578582018301518183018401529082019062000165565b600093810190920192909252949350505050565b60008060408385031215620001ac57600080fd5b82516001600160401b0380821115620001c457600080fd5b620001d286838701620000e9565b93506020850151915080821115620001e957600080fd5b50620001f885828601620000e9565b9150509250929050565b600181811c908216806200021757607f821691505b6020821081036200023857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028c57600081815260208120601f850160051c81016020861015620002675750805b601f850160051c820191505b81811015620002885782815560010162000273565b5050505b505050565b81516001600160401b03811115620002ad57620002ad620000d3565b620002c581620002be845462000202565b846200023e565b602080601f831160018114620002fd5760008415620002e45750858301515b600019600386901b1c1916600185901b17855562000288565b600085815260208120601f198616915b828110156200032e578886015182559484019460019091019084016200030d565b50858210156200034d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61182b806200036d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde14610239578063c87b56dd1461024c578063dbfd4b981461025f578063e985e9c514610267578063f2fde38b146102a357600080fd5b8063715018a6146102055780638da5cb5b1461020d57806395d89b411461021e578063a22cb4651461022657600080fd5b80630e980602116100e95780630e9806021461019857806323b872dd146101ab57806342842e0e146101be5780636352211e146101d157806370a08231146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e61012936600461120a565b6102b6565b60405190151581526020015b60405180910390f35b61014b6102e1565b60405161013a9190611277565b61016b61016636600461128a565b610373565b6040516001600160a01b03909116815260200161013a565b6101966101913660046112bf565b61039a565b005b6101966101a6366004611375565b6104b4565b6101966101b93660046113d7565b6104ed565b6101966101cc3660046113d7565b61051e565b61016b6101df36600461128a565b610539565b6101f76101f2366004611413565b610599565b60405190815260200161013a565b61019661061f565b6007546001600160a01b031661016b565b61014b610633565b61019661023436600461142e565b610642565b61019661024736600461146a565b610651565b61014b61025a36600461128a565b610689565b6008546101f7565b61012e6102753660046114e6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101966102b1366004611413565b610799565b60006001600160e01b03198216632483248360e11b14806102db57506102db82610812565b92915050565b6060600080546102f090611519565b80601f016020809104026020016040519081016040528092919081815260200182805461031c90611519565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050905090565b600061037e82610862565b506000908152600460205260409020546001600160a01b031690565b60006103a582610539565b9050806001600160a01b0316836001600160a01b0316036104175760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043357506104338133610275565b6104a55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161040e565b6104af83836108c1565b505050565b6104bc61092f565b6008546104c98382610989565b6104d38183610b14565b600880549060006104e383611553565b9190505550505050565b6104f73382610bdf565b6105135760405162461bcd60e51b815260040161040e9061157a565b6104af838383610c5d565b6104af83838360405180602001604052806000815250610651565b6000818152600260205260408120546001600160a01b0316806102db5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040e565b60006001600160a01b0382166106035760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161040e565b506001600160a01b031660009081526003602052604090205490565b61062761092f565b6106316000610dc1565b565b6060600180546102f090611519565b61064d338383610e13565b5050565b61065b3383610bdf565b6106775760405162461bcd60e51b815260040161040e9061157a565b61068384848484610ee1565b50505050565b606061069482610862565b600082815260066020526040812080546106ad90611519565b80601f01602080910402602001604051908101604052809291908181526020018280546106d990611519565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b50505050509050600061074460408051602081019091526000815290565b90508051600003610756575092915050565b8151156107885780826040516020016107709291906115c7565b60405160208183030381529060405292505050919050565b61079184610f14565b949350505050565b6107a161092f565b6001600160a01b0381166108065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040e565b61080f81610dc1565b50565b60006001600160e01b031982166380ac58cd60e01b148061084357506001600160e01b03198216635b5e139f60e01b145b806102db57506301ffc9a760e01b6001600160e01b03198316146102db565b6000818152600260205260409020546001600160a01b031661080f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040e565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108f682610539565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6007546001600160a01b031633146106315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b6001600160a01b0382166109df5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040e565b6000818152600260205260409020546001600160a01b031615610a445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040e565b6000818152600260205260409020546001600160a01b031615610aa95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610b8f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161040e565b6000828152600660205260409020610ba78282611644565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600080610beb83610539565b9050806001600160a01b0316846001600160a01b03161480610c3257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107915750836001600160a01b0316610c4b84610373565b6001600160a01b031614949350505050565b826001600160a01b0316610c7082610539565b6001600160a01b031614610c965760405162461bcd60e51b815260040161040e90611704565b6001600160a01b038216610cf85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040e565b826001600160a01b0316610d0b82610539565b6001600160a01b031614610d315760405162461bcd60e51b815260040161040e90611704565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e745760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eec848484610c5d565b610ef884848484610f88565b6106835760405162461bcd60e51b815260040161040e90611749565b6060610f1f82610862565b6000610f3660408051602081019091526000815290565b90506000815111610f565760405180602001604052806000815250610f81565b80610f6084611089565b604051602001610f719291906115c7565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561107e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fcc90339089908890889060040161179b565b6020604051808303816000875af1925050508015611007575060408051601f3d908101601f19168201909252611004918101906117d8565b60015b611064573d808015611035576040519150601f19603f3d011682016040523d82523d6000602084013e61103a565b606091505b50805160000361105c5760405162461bcd60e51b815260040161040e90611749565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610791565b506001949350505050565b606060006110968361111c565b600101905060008167ffffffffffffffff8111156110b6576110b66112e9565b6040519080825280601f01601f1916602001820160405280156110e0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110ea57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061115b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611187576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106111a557662386f26fc10000830492506010015b6305f5e10083106111bd576305f5e100830492506008015b61271083106111d157612710830492506004015b606483106111e3576064830492506002015b600a83106102db5760010192915050565b6001600160e01b03198116811461080f57600080fd5b60006020828403121561121c57600080fd5b8135610f81816111f4565b60005b8381101561124257818101518382015260200161122a565b50506000910152565b60008151808452611263816020860160208601611227565b601f01601f19169290920160200192915050565b602081526000610f81602083018461124b565b60006020828403121561129c57600080fd5b5035919050565b80356001600160a01b03811681146112ba57600080fd5b919050565b600080604083850312156112d257600080fd5b6112db836112a3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561131a5761131a6112e9565b604051601f8501601f19908116603f01168101908282118183101715611342576113426112e9565b8160405280935085815286868601111561135b57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561138857600080fd5b611391836112a3565b9150602083013567ffffffffffffffff8111156113ad57600080fd5b8301601f810185136113be57600080fd5b6113cd858235602084016112ff565b9150509250929050565b6000806000606084860312156113ec57600080fd5b6113f5846112a3565b9250611403602085016112a3565b9150604084013590509250925092565b60006020828403121561142557600080fd5b610f81826112a3565b6000806040838503121561144157600080fd5b61144a836112a3565b91506020830135801515811461145f57600080fd5b809150509250929050565b6000806000806080858703121561148057600080fd5b611489856112a3565b9350611497602086016112a3565b925060408501359150606085013567ffffffffffffffff8111156114ba57600080fd5b8501601f810187136114cb57600080fd5b6114da878235602084016112ff565b91505092959194509250565b600080604083850312156114f957600080fd5b611502836112a3565b9150611510602084016112a3565b90509250929050565b600181811c9082168061152d57607f821691505b60208210810361154d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161157357634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516115d9818460208801611227565b8351908301906115ed818360208801611227565b01949350505050565b601f8211156104af57600081815260208120601f850160051c8101602086101561161d5750805b601f850160051c820191505b8181101561163c57828155600101611629565b505050505050565b815167ffffffffffffffff81111561165e5761165e6112e9565b6116728161166c8454611519565b846115f6565b602080601f8311600181146116a7576000841561168f5750858301515b600019600386901b1c1916600185901b17855561163c565b600085815260208120601f198616915b828110156116d6578886015182559484019460019091019084016116b7565b50858210156116f45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117ce9083018461124b565b9695505050505050565b6000602082840312156117ea57600080fd5b8151610f81816111f456fea2646970667358221220e7bd77182af0f7fd03e6a4268adde4e9ce0e5d5086b48d6a8959efe24d7ad27064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B98 CODESIZE SUB DUP1 PUSH3 0x1B98 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0x198 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH3 0x49 DUP4 DUP3 PUSH3 0x291 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x58 DUP3 DUP3 PUSH3 0x291 JUMP JUMPDEST POP POP POP PUSH3 0x75 PUSH3 0x6F PUSH3 0x7D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x81 JUMP JUMPDEST POP POP PUSH3 0x35D JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x118 JUMPI PUSH3 0x118 PUSH3 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x143 JUMPI PUSH3 0x143 PUSH3 0xD3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x184 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x165 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D2 DUP7 DUP4 DUP8 ADD PUSH3 0xE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1F8 DUP6 DUP3 DUP7 ADD PUSH3 0xE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x217 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x238 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x28C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x267 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x288 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x273 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2AD JUMPI PUSH3 0x2AD PUSH3 0xD3 JUMP JUMPDEST PUSH3 0x2C5 DUP2 PUSH3 0x2BE DUP5 SLOAD PUSH3 0x202 JUMP JUMPDEST DUP5 PUSH3 0x23E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2FD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2E4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x288 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x32E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x30D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x34D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x182B DUP1 PUSH3 0x36D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xDBFD4B98 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE980602 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE980602 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x16B PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x633 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2DB JUMPI POP PUSH2 0x2DB DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x369 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x862 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 DUP3 PUSH2 0x539 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x433 JUMPI POP PUSH2 0x433 DUP2 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 PUSH2 0x8C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x92F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x4C9 DUP4 DUP3 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x4D3 DUP2 DUP4 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4E3 DUP4 PUSH2 0x1553 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x4F7 CALLER DUP3 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x651 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x627 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x631 PUSH1 0x0 PUSH2 0xDC1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x64D CALLER DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65B CALLER DUP4 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x683 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEE1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x694 DUP3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x6AD SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D9 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x726 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x726 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x709 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x744 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x756 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x788 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x770 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP5 PUSH2 0xF14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH2 0x80F DUP2 PUSH2 0xDC1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x843 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2DB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x8F6 DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x631 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBA7 DUP3 DUP3 PUSH2 0x1644 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBEB DUP4 PUSH2 0x539 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC32 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x791 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC4B DUP5 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC70 DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD0B DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xEEC DUP5 DUP5 DUP5 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xEF8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF1F DUP3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF36 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF81 JUMP JUMPDEST DUP1 PUSH2 0xF60 DUP5 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF71 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xFCC SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x179B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1007 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1004 SWAP2 DUP2 ADD SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1064 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x103A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1749 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x791 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1096 DUP4 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B6 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x10EA JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x115B JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1187 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11A5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11BD JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11D1 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11E3 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2DB JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF81 DUP2 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1242 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x122A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1263 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12DB DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x131A JUMPI PUSH2 0x131A PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1342 JUMPI PUSH2 0x1342 PUSH2 0x12E9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1391 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13CD DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x12FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F5 DUP5 PUSH2 0x12A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1403 PUSH1 0x20 DUP6 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF81 DUP3 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144A DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1489 DUP6 PUSH2 0x12A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1497 PUSH1 0x20 DUP7 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14DA DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x12FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1502 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1510 PUSH1 0x20 DUP5 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x152D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1573 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x15D9 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1227 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15ED DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1227 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x161D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x163C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165E PUSH2 0x12E9 JUMP JUMPDEST PUSH2 0x1672 DUP2 PUSH2 0x166C DUP5 SLOAD PUSH2 0x1519 JUMP JUMPDEST DUP5 PUSH2 0x15F6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x168F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x163C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16D6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x16B7 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16F4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x17CE SWAP1 DUP4 ADD DUP5 PUSH2 0x124B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF81 DUP2 PUSH2 0x11F4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xBD PUSH24 0x182AF0F7FD03E6A4268ADDE4E9CE0E5D5086B48D6A8959EF 0xE2 0x4D PUSH27 0xD27064736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "190:515:16:-:0;;;279:1;245:35;;287:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;348:4;354:6;1456:5:4;:13;348:4:16;1456:5:4;:13;:::i;:::-;-1:-1:-1;1479:7:4;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;287:77:16;;190:515;;640:96:10;719:10;;640:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:17:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:17;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:17;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:17;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:17;;;3992:26;3943:89;-1:-1:-1;;2747:1:17;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:17;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:17;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:17;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:17:o;:::-;190:515:16;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1051": {
									"entryPoint": null,
									"id": 1051,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_917": {
									"entryPoint": 2241,
									"id": 917,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1025": {
									"entryPoint": 3976,
									"id": 1025,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 2351,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_586": {
									"entryPoint": null,
									"id": 586,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_620": {
									"entryPoint": 3039,
									"id": 620,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_741": {
									"entryPoint": 2441,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1726": {
									"entryPoint": null,
									"id": 1726,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_568": {
									"entryPoint": null,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_963": {
									"entryPoint": 2146,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_555": {
									"entryPoint": 3809,
									"id": 555,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_949": {
									"entryPoint": 3603,
									"id": 949,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1326": {
									"entryPoint": 2836,
									"id": 1326,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3521,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_893": {
									"entryPoint": 3165,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_397": {
									"entryPoint": 922,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_258": {
									"entryPoint": 1433,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_415": {
									"entryPoint": 883,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenIdCounter_3030": {
									"entryPoint": null,
									"id": 3030,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2704": {
									"entryPoint": 4380,
									"id": 2704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintWithURI_3022": {
									"entryPoint": 1204,
									"id": 3022,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_296": {
									"entryPoint": 737,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_286": {
									"entryPoint": 1337,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1567,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_496": {
									"entryPoint": 1310,
									"id": 496,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_526": {
									"entryPoint": 1617,
									"id": 526,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_432": {
									"entryPoint": 1602,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1241": {
									"entryPoint": 694,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1988": {
									"entryPoint": null,
									"id": 1988,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_234": {
									"entryPoint": 2066,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_306": {
									"entryPoint": 1587,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1795": {
									"entryPoint": 4233,
									"id": 1795,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1300": {
									"entryPoint": 1673,
									"id": 1300,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_345": {
									"entryPoint": 3860,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_477": {
									"entryPoint": 1261,
									"id": 477,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1945,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15170:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:17"
															},
															"nodeType": "YulIf",
															"src": "68:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:17"
															},
															"nodeType": "YulIf",
															"src": "229:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:17",
														"type": ""
													}
												],
												"src": "150:245:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:17",
														"type": ""
													}
												],
												"src": "400:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:17",
																"statements": []
															},
															"src": "687:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:17",
														"type": ""
													}
												],
												"src": "592:250:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:17",
														"type": ""
													}
												],
												"src": "847:271:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:17",
														"type": ""
													}
												],
												"src": "1123:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:17"
															},
															"nodeType": "YulIf",
															"src": "1428:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:17",
														"type": ""
													}
												],
												"src": "1348:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:17",
														"type": ""
													}
												],
												"src": "1533:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:17"
															},
															"nodeType": "YulIf",
															"src": "1838:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:17",
														"type": ""
													}
												],
												"src": "1741:173:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:17"
															},
															"nodeType": "YulIf",
															"src": "2016:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:17",
														"type": ""
													}
												],
												"src": "1919:254:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2210:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2227:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2239:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2230:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2230:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2260:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2260:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2178:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2385:557:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2395:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2405:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2399:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2450:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2452:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2452:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2452:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2438:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2446:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2435:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:14:17"
															},
															"nodeType": "YulIf",
															"src": "2432:40:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2481:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:7:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2485:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2507:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2511:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2539:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2561:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "2585:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2593:2:17",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2581:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2581:15:17"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "2598:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2577:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2577:24:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2603:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2573:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2573:33:17"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2608:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:42:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:55:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2543:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2671:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2673:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2673:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2673:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2630:10:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2642:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2627:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2650:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2647:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2647:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2624:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:46:17"
															},
															"nodeType": "YulIf",
															"src": "2621:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2713:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:22:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2733:15:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2742:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2733:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2764:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2772:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2757:22:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2817:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2826:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2819:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2819:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2819:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2798:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2794:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2812:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2791:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:25:17"
															},
															"nodeType": "YulIf",
															"src": "2788:45:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2867:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:17:17"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2879:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2842:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2842:44:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2910:6:17"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2918:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2906:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2906:19:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2927:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2902:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2902:30:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2895:41:17"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2354:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2359:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2367:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2375:5:17",
														"type": ""
													}
												],
												"src": "2310:632:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3044:428:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3090:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3102:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3092:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3092:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3092:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3065:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3074:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3061:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3061:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3086:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3057:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:32:17"
															},
															"nodeType": "YulIf",
															"src": "3054:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3115:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3144:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3125:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3163:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3177:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3177:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3167:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3252:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3261:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3264:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3254:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3254:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3254:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3224:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3221:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:30:17"
															},
															"nodeType": "YulIf",
															"src": "3218:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3277:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3291:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3302:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3287:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3281:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3357:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3366:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3369:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3359:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3359:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3359:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3336:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3340:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3332:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3332:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:35:17"
															},
															"nodeType": "YulIf",
															"src": "3318:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3382:84:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3431:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3427:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3427:11:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3453:2:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3440:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3440:16:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3458:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "3392:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:74:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3002:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3013:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3025:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3033:6:17",
														"type": ""
													}
												],
												"src": "2947:525:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3581:224:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3627:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3636:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3639:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3629:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3629:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3629:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3602:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3611:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3598:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3598:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:32:17"
															},
															"nodeType": "YulIf",
															"src": "3591:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3652:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3681:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3662:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3700:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3733:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3744:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3729:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3729:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3710:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3757:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3784:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3795:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3780:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3780:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3767:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3531:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3542:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3554:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3562:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3570:6:17",
														"type": ""
													}
												],
												"src": "3477:328:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3880:116:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3926:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3935:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3938:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3928:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3928:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3928:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3901:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3922:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:32:17"
															},
															"nodeType": "YulIf",
															"src": "3890:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3951:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3980:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3961:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3846:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3857:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3869:6:17",
														"type": ""
													}
												],
												"src": "3810:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4102:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4112:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4124:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4120:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4112:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4154:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4165:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4147:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4147:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4071:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4082:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4093:4:17",
														"type": ""
													}
												],
												"src": "4001:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4267:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4313:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4322:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4325:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4315:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4315:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4288:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4297:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4309:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:32:17"
															},
															"nodeType": "YulIf",
															"src": "4277:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4338:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4367:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4348:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4338:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4386:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4427:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4412:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4412:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4399:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4399:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4390:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4484:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4493:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4496:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4486:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4486:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4486:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4453:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4474:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4467:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4467:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4460:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4460:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4450:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:40:17"
															},
															"nodeType": "YulIf",
															"src": "4440:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4509:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4519:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4509:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4225:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4236:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4248:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4256:6:17",
														"type": ""
													}
												],
												"src": "4183:347:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4665:537:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4712:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4721:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4724:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4714:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4714:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4714:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4686:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4678:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:33:17"
															},
															"nodeType": "YulIf",
															"src": "4675:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4737:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4766:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4747:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4747:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4737:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4818:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4829:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4795:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4842:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4869:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4880:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4865:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4865:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4852:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4893:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4924:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4935:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4920:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4907:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4897:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4982:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4991:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4994:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4984:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4984:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4984:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4954:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4951:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4951:30:17"
															},
															"nodeType": "YulIf",
															"src": "4948:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5007:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5021:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5032:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5017:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5011:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5087:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5096:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5089:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5089:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5089:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5066:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5070:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5062:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5062:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5077:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5058:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:35:17"
															},
															"nodeType": "YulIf",
															"src": "5048:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5112:84:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5161:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5165:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5157:11:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5183:2:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5170:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:16:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5188:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5122:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:74:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4607:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4618:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4630:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4638:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4646:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4654:6:17",
														"type": ""
													}
												],
												"src": "4535:667:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5294:173:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5340:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5352:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5315:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5324:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5311:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5307:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:32:17"
															},
															"nodeType": "YulIf",
															"src": "5304:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5365:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5394:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5375:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5413:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5446:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5457:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5442:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5442:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5423:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5252:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5263:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5275:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5283:6:17",
														"type": ""
													}
												],
												"src": "5207:260:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5537:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5551:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5554:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5547:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5568:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5598:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5572:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5645:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5647:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5661:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5669:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5657:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5657:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5647:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5625:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5618:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:26:17"
															},
															"nodeType": "YulIf",
															"src": "5615:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5735:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5756:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5763:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5768:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5759:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5759:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5749:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5749:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5749:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5800:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5793:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5793:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5793:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5828:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5821:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5821:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5821:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5691:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5714:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5722:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5711:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5688:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:38:17"
															},
															"nodeType": "YulIf",
															"src": "5685:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5507:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5516:6:17",
														"type": ""
													}
												],
												"src": "5472:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6031:223:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6048:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6059:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6082:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6093:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6078:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6078:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6098:2:17",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6071:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6121:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6132:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6137:34:17",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6110:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6192:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6203:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6188:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6188:18:17"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6208:3:17",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6181:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6221:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6233:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6244:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6229:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6221:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6008:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6022:4:17",
														"type": ""
													}
												],
												"src": "5857:397:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6433:251:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6450:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6461:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6443:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6443:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6484:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6495:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6480:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6480:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6500:2:17",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6473:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6473:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6523:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6534:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6519:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6539:34:17",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6512:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6594:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6605:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6590:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6590:18:17"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6610:31:17",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:59:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6583:59:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6651:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6663:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6651:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6410:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6424:4:17",
														"type": ""
													}
												],
												"src": "6259:425:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:185:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6775:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6796:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6803:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6808:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6799:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6799:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6789:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6789:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6789:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6840:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6843:4:17",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6833:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6833:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6833:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6868:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6871:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6861:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6861:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6861:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6752:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6763:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6759:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6749:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6749:17:17"
															},
															"nodeType": "YulIf",
															"src": "6746:140:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6895:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6906:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6902:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6902:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6895:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6718:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6728:3:17",
														"type": ""
													}
												],
												"src": "6689:232:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7100:235:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7117:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7128:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7110:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7110:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7151:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7162:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7147:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7147:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7167:2:17",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7140:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7140:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7190:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7201:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7186:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7186:18:17"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7206:34:17",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7179:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7261:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7272:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7257:18:17"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7277:15:17",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7250:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7250:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7302:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7314:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7302:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7077:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7091:4:17",
														"type": ""
													}
												],
												"src": "6926:409:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7514:174:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7531:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7542:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7524:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7565:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7576:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7561:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7561:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7581:2:17",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7604:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7615:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7600:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7600:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7620:26:17",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7593:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7593:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7593:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7656:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7668:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7656:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7491:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7505:4:17",
														"type": ""
													}
												],
												"src": "7340:348:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7867:231:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7884:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7895:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7877:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7918:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7929:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7914:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7914:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7907:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7907:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7957:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7968:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7953:18:17"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7973:34:17",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7946:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8028:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8039:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8024:18:17"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8044:11:17",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8017:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8065:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8077:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8088:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8073:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8065:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7844:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7858:4:17",
														"type": ""
													}
												],
												"src": "7693:405:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8290:309:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8300:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8320:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8314:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8304:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8375:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8383:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8390:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8395:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8336:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:66:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:66:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8411:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8428:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8433:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8424:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8424:16:17"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8415:5:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8449:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8471:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8465:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8453:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8526:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8534:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8522:17:17"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8541:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8548:8:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8487:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8487:70:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8487:70:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8566:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8577:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8584:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8573:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:20:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8566:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8258:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8263:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8271:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8282:3:17",
														"type": ""
													}
												],
												"src": "8103:496:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8778:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8795:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8806:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8788:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8788:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8788:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8829:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8840:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8825:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8825:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8845:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8818:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8868:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8879:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8864:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8864:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8884:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8857:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8857:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8857:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8939:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8950:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8935:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8935:18:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8955:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8928:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8928:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8928:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8973:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8985:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8996:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8981:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8981:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8973:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8755:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8769:4:17",
														"type": ""
													}
												],
												"src": "8604:402:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9185:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9202:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9213:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9195:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9195:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9236:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9247:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9232:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9232:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9252:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9225:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9225:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9275:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9286:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9271:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9271:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9291:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9264:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9264:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9264:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9335:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9347:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9358:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9343:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9343:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9335:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9162:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9176:4:17",
														"type": ""
													}
												],
												"src": "9011:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9563:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9574:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9556:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9556:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9597:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9608:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9593:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9593:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9613:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9586:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9586:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9586:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9647:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:18:17"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9652:34:17",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9696:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9708:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9704:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9696:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9523:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9537:4:17",
														"type": ""
													}
												],
												"src": "9372:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9907:178:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9924:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9917:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9917:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9969:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9954:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9974:2:17",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9947:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9947:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9997:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10008:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9993:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9993:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10013:30:17",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9986:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9986:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9986:58:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10053:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10065:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10076:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10061:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10053:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9884:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9898:4:17",
														"type": ""
													}
												],
												"src": "9733:352:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10264:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10281:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10292:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10274:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10274:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10274:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10315:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10326:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10311:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10311:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10331:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10304:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10304:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10304:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10354:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10365:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10350:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10350:18:17"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10370:34:17",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10343:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10436:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10421:18:17"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10441:16:17",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10467:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10479:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10490:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10475:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10475:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10467:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10241:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10255:4:17",
														"type": ""
													}
												],
												"src": "10090:410:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10561:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10578:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10581:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10571:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10571:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10571:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10594:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10612:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10615:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "10602:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10602:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10594:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10544:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10552:4:17",
														"type": ""
													}
												],
												"src": "10505:121:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10712:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10745:425:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10759:11:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10769:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "10763:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10790:2:17"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "10794:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10783:17:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10783:17:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10813:31:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10835:2:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10839:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "10825:9:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10825:19:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "10817:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10857:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "10880:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10890:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "10897:10:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10909:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10893:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10893:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "10886:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10886:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10876:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10876:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "10861:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10951:23:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "10953:19:17",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "10968:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "10953:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "10933:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10945:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "10930:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10930:20:17"
																		},
																		"nodeType": "YulIf",
																		"src": "10927:47:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10987:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "11001:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11011:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "11018:3:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11023:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11014:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11014:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "11007:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11007:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10997:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10997:31:17"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "10991:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11041:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "11054:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "11045:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11139:21:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "11148:5:17"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "11155:2:17"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "11141:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11141:17:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11141:17:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "11089:5:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "11096:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "11086:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11086:13:17"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "11100:26:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11102:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "11115:5:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11122:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11111:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11111:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "11102:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "11082:3:17",
																			"statements": []
																		},
																		"src": "11078:82:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "10728:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10733:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10725:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:11:17"
															},
															"nodeType": "YulIf",
															"src": "10722:448:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10684:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "10691:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "10696:10:17",
														"type": ""
													}
												],
												"src": "10631:545:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11266:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11276:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "11291:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11309:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "11312:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11305:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11305:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11322:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "11318:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11318:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "11301:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11301:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11297:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11297:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11287:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11333:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "11336:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11329:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11329:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11284:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11284:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "11276:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11243:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11249:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "11257:4:17",
														"type": ""
													}
												],
												"src": "11181:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11448:1256:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11458:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11478:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11472:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11472:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "11462:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11525:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11527:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11527:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11527:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "11497:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11505:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11494:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11494:30:17"
															},
															"nodeType": "YulIf",
															"src": "11491:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "11600:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "11638:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "11632:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11632:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "11606:25:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11606:38:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "11646:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "11556:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11556:97:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11556:97:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11662:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11679:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "11666:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11689:23:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11708:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "11693:11:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11721:24:17",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "11734:11:17"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "11721:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11791:656:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11805:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "11824:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11836:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "11832:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11832:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "11820:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11820:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "11809:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11853:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11897:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "11867:29:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11867:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "11857:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11915:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11924:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "11919:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12002:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12027:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "12045:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "12050:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "12041:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12041:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "12035:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12035:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12020:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12020:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12020:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12079:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12093:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12101:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12089:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12089:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "12079:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12120:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "12137:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "12148:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12133:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12133:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "12120:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11949:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "11952:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "11946:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11946:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "11961:28:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "11963:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "11972:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "11975:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11968:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11968:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11963:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "11942:3:17",
																					"statements": []
																				},
																				"src": "11938:236:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12222:166:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "12240:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "12267:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "12272:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12263:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12263:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12257:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12257:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "12244:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12307:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "12319:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "12346:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "12349:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "12342:3:17"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "12342:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "12358:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "12338:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "12338:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "12368:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "12364:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "12364:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "12334:3:17"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "12334:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "12330:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12330:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "12315:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12315:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12300:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12300:74:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12300:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12193:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "12202:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12190:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12190:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "12187:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12408:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12422:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "12425:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "12418:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12418:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12434:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12414:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12414:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "12401:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12401:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12401:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11784:663:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11789:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12464:234:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12478:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12491:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "12482:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12527:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12545:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "12564:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "12569:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12560:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12560:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12554:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12554:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "12545:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "12508:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "12505:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12614:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "12673:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "12680:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "12620:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12620:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "12607:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12607:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12607:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12456:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "11764:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11772:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11761:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11761:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "11754:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "11433:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11439:3:17",
														"type": ""
													}
												],
												"src": "11352:1352:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12883:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12900:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12911:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12893:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12893:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12893:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12934:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12945:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12930:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12930:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12950:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12923:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12923:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12923:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12973:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12984:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12969:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12969:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12989:34:17",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12962:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12962:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12962:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13044:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13055:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13040:18:17"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13060:7:17",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13033:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13033:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13033:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13077:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13089:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13100:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13085:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13085:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13077:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12860:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12874:4:17",
														"type": ""
													}
												],
												"src": "12709:401:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13289:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13306:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13317:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13299:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13299:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13299:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13340:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13351:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13336:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13336:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13329:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13329:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13329:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13379:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13390:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13375:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13375:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13395:34:17",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13368:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13368:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13368:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13450:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13461:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13446:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13446:18:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13466:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13439:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13439:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13439:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13482:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13494:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13505:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13490:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13490:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13482:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13266:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13280:4:17",
														"type": ""
													}
												],
												"src": "13115:400:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13694:175:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13711:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13722:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13704:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13745:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13756:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13741:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13741:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13761:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13734:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13734:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13734:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13784:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13795:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13780:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13800:27:17",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13773:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13773:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13773:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13837:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13849:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13860:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13845:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13845:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13837:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13671:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13685:4:17",
														"type": ""
													}
												],
												"src": "13520:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:240:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14065:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14076:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14058:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14058:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14058:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14099:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14110:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14095:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14095:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14115:2:17",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14088:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14088:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14138:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14149:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14134:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14134:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14154:34:17",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14127:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14127:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14127:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14209:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14220:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14205:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14205:18:17"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14225:20:17",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14198:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14198:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14198:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14255:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14267:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14278:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14263:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14263:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14255:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14025:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14039:4:17",
														"type": ""
													}
												],
												"src": "13874:414:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14496:286:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14506:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14524:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14529:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14520:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14520:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14533:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14516:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14516:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14510:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14551:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14566:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14574:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14562:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14562:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14544:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14544:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14544:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14598:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14609:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14594:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14594:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14618:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14626:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14614:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14587:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14587:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14587:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14650:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14661:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14646:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14646:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14666:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14639:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14639:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14693:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14704:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14689:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14709:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14682:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14682:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14682:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14722:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14748:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14760:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14771:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14756:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14756:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14730:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14730:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14722:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14441:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14452:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14460:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14468:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14476:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14487:4:17",
														"type": ""
													}
												],
												"src": "14293:489:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14867:169:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14913:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14922:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14925:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14915:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14915:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14915:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14888:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14884:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14884:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14909:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14880:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14880:32:17"
															},
															"nodeType": "YulIf",
															"src": "14877:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14938:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14957:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14951:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14951:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14942:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15000:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14976:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14976:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14976:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15015:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15025:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15015:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14833:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14844:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14856:6:17",
														"type": ""
													}
												],
												"src": "14787:249:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15073:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15090:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15097:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15102:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15093:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15093:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15083:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15083:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15083:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15130:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15133:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15123:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15123:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15123:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15154:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15157:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15147:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15147:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15147:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15041:127:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde14610239578063c87b56dd1461024c578063dbfd4b981461025f578063e985e9c514610267578063f2fde38b146102a357600080fd5b8063715018a6146102055780638da5cb5b1461020d57806395d89b411461021e578063a22cb4651461022657600080fd5b80630e980602116100e95780630e9806021461019857806323b872dd146101ab57806342842e0e146101be5780636352211e146101d157806370a08231146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e61012936600461120a565b6102b6565b60405190151581526020015b60405180910390f35b61014b6102e1565b60405161013a9190611277565b61016b61016636600461128a565b610373565b6040516001600160a01b03909116815260200161013a565b6101966101913660046112bf565b61039a565b005b6101966101a6366004611375565b6104b4565b6101966101b93660046113d7565b6104ed565b6101966101cc3660046113d7565b61051e565b61016b6101df36600461128a565b610539565b6101f76101f2366004611413565b610599565b60405190815260200161013a565b61019661061f565b6007546001600160a01b031661016b565b61014b610633565b61019661023436600461142e565b610642565b61019661024736600461146a565b610651565b61014b61025a36600461128a565b610689565b6008546101f7565b61012e6102753660046114e6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101966102b1366004611413565b610799565b60006001600160e01b03198216632483248360e11b14806102db57506102db82610812565b92915050565b6060600080546102f090611519565b80601f016020809104026020016040519081016040528092919081815260200182805461031c90611519565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050905090565b600061037e82610862565b506000908152600460205260409020546001600160a01b031690565b60006103a582610539565b9050806001600160a01b0316836001600160a01b0316036104175760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043357506104338133610275565b6104a55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161040e565b6104af83836108c1565b505050565b6104bc61092f565b6008546104c98382610989565b6104d38183610b14565b600880549060006104e383611553565b9190505550505050565b6104f73382610bdf565b6105135760405162461bcd60e51b815260040161040e9061157a565b6104af838383610c5d565b6104af83838360405180602001604052806000815250610651565b6000818152600260205260408120546001600160a01b0316806102db5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040e565b60006001600160a01b0382166106035760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161040e565b506001600160a01b031660009081526003602052604090205490565b61062761092f565b6106316000610dc1565b565b6060600180546102f090611519565b61064d338383610e13565b5050565b61065b3383610bdf565b6106775760405162461bcd60e51b815260040161040e9061157a565b61068384848484610ee1565b50505050565b606061069482610862565b600082815260066020526040812080546106ad90611519565b80601f01602080910402602001604051908101604052809291908181526020018280546106d990611519565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b50505050509050600061074460408051602081019091526000815290565b90508051600003610756575092915050565b8151156107885780826040516020016107709291906115c7565b60405160208183030381529060405292505050919050565b61079184610f14565b949350505050565b6107a161092f565b6001600160a01b0381166108065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040e565b61080f81610dc1565b50565b60006001600160e01b031982166380ac58cd60e01b148061084357506001600160e01b03198216635b5e139f60e01b145b806102db57506301ffc9a760e01b6001600160e01b03198316146102db565b6000818152600260205260409020546001600160a01b031661080f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040e565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108f682610539565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6007546001600160a01b031633146106315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b6001600160a01b0382166109df5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040e565b6000818152600260205260409020546001600160a01b031615610a445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040e565b6000818152600260205260409020546001600160a01b031615610aa95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610b8f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161040e565b6000828152600660205260409020610ba78282611644565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600080610beb83610539565b9050806001600160a01b0316846001600160a01b03161480610c3257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107915750836001600160a01b0316610c4b84610373565b6001600160a01b031614949350505050565b826001600160a01b0316610c7082610539565b6001600160a01b031614610c965760405162461bcd60e51b815260040161040e90611704565b6001600160a01b038216610cf85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040e565b826001600160a01b0316610d0b82610539565b6001600160a01b031614610d315760405162461bcd60e51b815260040161040e90611704565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e745760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eec848484610c5d565b610ef884848484610f88565b6106835760405162461bcd60e51b815260040161040e90611749565b6060610f1f82610862565b6000610f3660408051602081019091526000815290565b90506000815111610f565760405180602001604052806000815250610f81565b80610f6084611089565b604051602001610f719291906115c7565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561107e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fcc90339089908890889060040161179b565b6020604051808303816000875af1925050508015611007575060408051601f3d908101601f19168201909252611004918101906117d8565b60015b611064573d808015611035576040519150601f19603f3d011682016040523d82523d6000602084013e61103a565b606091505b50805160000361105c5760405162461bcd60e51b815260040161040e90611749565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610791565b506001949350505050565b606060006110968361111c565b600101905060008167ffffffffffffffff8111156110b6576110b66112e9565b6040519080825280601f01601f1916602001820160405280156110e0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110ea57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061115b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611187576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106111a557662386f26fc10000830492506010015b6305f5e10083106111bd576305f5e100830492506008015b61271083106111d157612710830492506004015b606483106111e3576064830492506002015b600a83106102db5760010192915050565b6001600160e01b03198116811461080f57600080fd5b60006020828403121561121c57600080fd5b8135610f81816111f4565b60005b8381101561124257818101518382015260200161122a565b50506000910152565b60008151808452611263816020860160208601611227565b601f01601f19169290920160200192915050565b602081526000610f81602083018461124b565b60006020828403121561129c57600080fd5b5035919050565b80356001600160a01b03811681146112ba57600080fd5b919050565b600080604083850312156112d257600080fd5b6112db836112a3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561131a5761131a6112e9565b604051601f8501601f19908116603f01168101908282118183101715611342576113426112e9565b8160405280935085815286868601111561135b57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561138857600080fd5b611391836112a3565b9150602083013567ffffffffffffffff8111156113ad57600080fd5b8301601f810185136113be57600080fd5b6113cd858235602084016112ff565b9150509250929050565b6000806000606084860312156113ec57600080fd5b6113f5846112a3565b9250611403602085016112a3565b9150604084013590509250925092565b60006020828403121561142557600080fd5b610f81826112a3565b6000806040838503121561144157600080fd5b61144a836112a3565b91506020830135801515811461145f57600080fd5b809150509250929050565b6000806000806080858703121561148057600080fd5b611489856112a3565b9350611497602086016112a3565b925060408501359150606085013567ffffffffffffffff8111156114ba57600080fd5b8501601f810187136114cb57600080fd5b6114da878235602084016112ff565b91505092959194509250565b600080604083850312156114f957600080fd5b611502836112a3565b9150611510602084016112a3565b90509250929050565b600181811c9082168061152d57607f821691505b60208210810361154d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161157357634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516115d9818460208801611227565b8351908301906115ed818360208801611227565b01949350505050565b601f8211156104af57600081815260208120601f850160051c8101602086101561161d5750805b601f850160051c820191505b8181101561163c57828155600101611629565b505050505050565b815167ffffffffffffffff81111561165e5761165e6112e9565b6116728161166c8454611519565b846115f6565b602080601f8311600181146116a7576000841561168f5750858301515b600019600386901b1c1916600185901b17855561163c565b600085815260208120601f198616915b828110156116d6578886015182559484019460019091019084016116b7565b50858210156116f45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117ce9083018461124b565b9695505050505050565b6000602082840312156117ea57600080fd5b8151610f81816111f456fea2646970667358221220e7bd77182af0f7fd03e6a4268adde4e9ce0e5d5086b48d6a8959efe24d7ad27064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xDBFD4B98 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE980602 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE980602 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x16B PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x633 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2DB JUMPI POP PUSH2 0x2DB DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x369 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x862 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 DUP3 PUSH2 0x539 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x433 JUMPI POP PUSH2 0x433 DUP2 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 PUSH2 0x8C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x92F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x4C9 DUP4 DUP3 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x4D3 DUP2 DUP4 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4E3 DUP4 PUSH2 0x1553 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x4F7 CALLER DUP3 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x651 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x627 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x631 PUSH1 0x0 PUSH2 0xDC1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x64D CALLER DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65B CALLER DUP4 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x683 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEE1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x694 DUP3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x6AD SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D9 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x726 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x726 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x709 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x744 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x756 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x788 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x770 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP5 PUSH2 0xF14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH2 0x80F DUP2 PUSH2 0xDC1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x843 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2DB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x8F6 DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x631 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBA7 DUP3 DUP3 PUSH2 0x1644 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBEB DUP4 PUSH2 0x539 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC32 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x791 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC4B DUP5 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC70 DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD0B DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xEEC DUP5 DUP5 DUP5 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xEF8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF1F DUP3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF36 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF81 JUMP JUMPDEST DUP1 PUSH2 0xF60 DUP5 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF71 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xFCC SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x179B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1007 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1004 SWAP2 DUP2 ADD SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1064 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x103A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0x1749 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x791 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1096 DUP4 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B6 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x10EA JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x115B JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1187 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11A5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11BD JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11D1 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11E3 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2DB JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF81 DUP2 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1242 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x122A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1263 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12DB DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x131A JUMPI PUSH2 0x131A PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1342 JUMPI PUSH2 0x1342 PUSH2 0x12E9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1391 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13CD DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x12FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F5 DUP5 PUSH2 0x12A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1403 PUSH1 0x20 DUP6 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF81 DUP3 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144A DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1489 DUP6 PUSH2 0x12A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1497 PUSH1 0x20 DUP7 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14DA DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x12FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1502 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1510 PUSH1 0x20 DUP5 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x152D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1573 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x15D9 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1227 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15ED DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1227 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x161D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x163C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165E PUSH2 0x12E9 JUMP JUMPDEST PUSH2 0x1672 DUP2 PUSH2 0x166C DUP5 SLOAD PUSH2 0x1519 JUMP JUMPDEST DUP5 PUSH2 0x15F6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x168F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x163C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16D6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x16B7 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16F4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x17CE SWAP1 DUP4 ADD DUP5 PUSH2 0x124B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF81 DUP2 PUSH2 0x11F4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xBD PUSH24 0x182AF0F7FD03E6A4268ADDE4E9CE0E5D5086B48D6A8959EF 0xE2 0x4D PUSH27 0xD27064736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "190:515:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:205:7;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;535:205:7;;;;;;;;2471:98:4;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:17;;;1679:51;;1667:2;1652:18;3935:167:4;1533:203:17;3468:406:4;;;;;;:::i;:::-;;:::i;:::-;;370:229:16;;;;;;:::i;:::-;;:::i;4612:296:4:-;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;4147:25:17;;;4135:2;4120:18;1929:204:4;4001:177:17;1824:101:0;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;2633:102:4;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;806:608:7:-;;;;;;:::i;:::-;;:::i;605:98:16:-;681:15;;605:98;;4388:162:4;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2074:198:0;;;;;;:::i;:::-;;:::i;535:205:7:-;637:4;-1:-1:-1;;;;;;660:33:7;;-1:-1:-1;;;660:33:7;;:73;;;697:36;721:11;697:23;:36::i;:::-;653:80;535:205;-1:-1:-1;;535:205:7:o;2471:98:4:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:4;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:4;:2;-1:-1:-1;;;;;3605:11:4;;3597:57;;;;-1:-1:-1;;;3597:57:4;;6059:2:17;3597:57:4;;;6041:21:17;6098:2;6078:18;;;6071:30;6137:34;6117:18;;;6110:62;-1:-1:-1;;;6188:18:17;;;6181:31;6229:19;;3597:57:4;;;;;;;;;719:10:10;-1:-1:-1;;;;;3686:21:4;;;;:62;;-1:-1:-1;3711:37:4;3728:5;719:10:10;4388:162:4;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:4;;6461:2:17;3665:170:4;;;6443:21:17;6500:2;6480:18;;;6473:30;6539:34;6519:18;;;6512:62;6610:31;6590:18;;;6583:59;6659:19;;3665:170:4;6259:425:17;3665:170:4;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;370:229:16:-;1094:13:0;:11;:13::i;:::-;475:15:16::1;::::0;500:21:::1;506:2:::0;475:15;500:5:::1;:21::i;:::-;531:34;544:10;556:8;531:12;:34::i;:::-;575:15;:17:::0;;;:15:::1;:17;::::0;::::1;:::i;:::-;;;;;;444:155;370:229:::0;;:::o;4612:296:4:-;4771:41;719:10:10;4804:7:4;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:4;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;;2324:56;;;;-1:-1:-1;;;2324:56:4;;7542:2:17;2324:56:4;;;7524:21:17;7581:2;7561:18;;;7554:30;-1:-1:-1;;;7600:18:17;;;7593:54;7664:18;;2324:56:4;7340:348:17;1929:204:4;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:73;;;;-1:-1:-1;;;2020:73:4;;7895:2:17;2020:73:4;;;7877:21:17;7934:2;7914:18;;;7907:30;7973:34;7953:18;;;7946:62;-1:-1:-1;;;8024:18:17;;;8017:39;8073:19;;2020:73:4;7693:405:17;2020:73:4;-1:-1:-1;;;;;;2110:16:4;;;;;:9;:16;;;;;;;1929:204::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2633:102:4:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:10;4296:8:4;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:10;5352:7:4;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:4;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;806:608:7:-;879:13;904:23;919:7;904:14;:23::i;:::-;938;964:19;;;:10;:19;;;;;938:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:18;1014:10;3395:9:4;;;;;;;;;-1:-1:-1;3395:9:4;;;3319:92;1014:10:7;993:31;;1103:4;1097:18;1119:1;1097:23;1093:70;;-1:-1:-1;1143:9:7;806:608;-1:-1:-1;;806:608:7:o;1093:70::-;1265:23;;:27;1261:106;;1339:4;1345:9;1322:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1308:48;;;;806:608;;;:::o;1261:106::-;1384:23;1399:7;1384:14;:23::i;:::-;1377:30;806:608;-1:-1:-1;;;;806:608:7:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;8806:2:17;2154:73:0::1;::::0;::::1;8788:21:17::0;8845:2;8825:18;;;8818:30;8884:34;8864:18;;;8857:62;-1:-1:-1;;;8935:18:17;;;8928:36;8981:19;;2154:73:0::1;8604:402:17::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1570:300:4:-;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:12;;;1827:36:4;829:155:12;13240:133:4;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;13313:53;;;;-1:-1:-1;;;13313:53:4;;7542:2:17;13313:53:4;;;7524:21:17;7581:2;7561:18;;;7554:30;-1:-1:-1;;;7600:18:17;;;7593:54;7664:18;;13313:53:4;7340:348:17;12572:171:4;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:4;-1:-1:-1;;;;;12646:29:4;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:4;;;;;;;;;;;12572:171;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:10;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9213:2:17;1414:68:0;;;9195:21:17;;;9232:18;;;9225:30;9291:34;9271:18;;;9264:62;9343:18;;1414:68:0;9011:356:17;8925:920:4;-1:-1:-1;;;;;9004:16:4;;8996:61;;;;-1:-1:-1;;;8996:61:4;;9574:2:17;8996:61:4;;;9556:21:17;;;9593:18;;;9586:30;9652:34;9632:18;;;9625:62;9704:18;;8996:61:4;9372:356:17;8996:61:4;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:4;;9935:2:17;9067:58:4;;;9917:21:17;9974:2;9954:18;;;9947:30;10013;9993:18;;;9986:58;10061:18;;9067:58:4;9733:352:17;9067:58:4;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:4;;9935:2:17;9271:58:4;;;9917:21:17;9974:2;9954:18;;;9947:30;10013;9993:18;;;9986:58;10061:18;;9271:58:4;9733:352:17;9271:58:4;-1:-1:-1;;;;;9671:13:4;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:4;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;1599:253:7:-;7185:4:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;1690:75:7;;;;-1:-1:-1;;;1690:75:7;;10292:2:17;1690:75:7;;;10274:21:17;10331:2;10311:18;;;10304:30;10370:34;10350:18;;;10343:62;-1:-1:-1;;;10421:18:17;;;10414:44;10475:19;;1690:75:7;10090:410:17;1690:75:7;1775:19;;;;:10;:19;;;;;:31;1797:9;1775:19;:31;:::i;:::-;-1:-1:-1;1822:23:7;;4147:25:17;;;1822:23:7;;4135:2:17;4120:18;1822:23:7;;;;;;;1599:253;;:::o;7404:261:4:-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:4;:7;-1:-1:-1;;;;;7570:16:4;;:52;;;-1:-1:-1;;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:4;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:4;;7562:96;7404:261;-1:-1:-1;;;;7404:261:4:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:4;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:4;;11346:81;;;;-1:-1:-1;;;11346:81:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:4;;11437:65;;;;-1:-1:-1;;;11437:65:4;;13317:2:17;11437:65:4;;;13299:21:17;13356:2;13336:18;;;13329:30;13395:34;13375:18;;;13368:62;-1:-1:-1;;;13446:18:17;;;13439:34;13490:19;;11437:65:4;13115:400:17;11437:65:4;11682:4;-1:-1:-1;;;;;11655:31:4;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:4;;11647:81;;;;-1:-1:-1;;;11647:81:4;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:4;;;;;;-1:-1:-1;;;;;12265:15:4;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:4;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12879:277:4:-;12999:8;-1:-1:-1;;;;;12990:17:4;:5;-1:-1:-1;;;;;12990:17:4;;12982:55;;;;-1:-1:-1;;;12982:55:4;;13722:2:17;12982:55:4;;;13704:21:17;13761:2;13741:18;;;13734:30;13800:27;13780:18;;;13773:55;13845:18;;12982:55:4;13520:349:17;12982:55:4;-1:-1:-1;;;;;13047:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:4;;;;;;;;;;13108:41;;540::17;;;13108::4;;513:18:17;13108:41:4;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:4;;;;;;;:::i;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:4;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:4:o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:4;;1702:19:9;:23;14090:660:4;;14129:71;;-1:-1:-1;;;14129:71:4;;-1:-1:-1;;;;;14129:36:4;;;;;:71;;719:10:10;;14180:4:4;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:4;;;;;;;;-1:-1:-1;;14129:71:4;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:4;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:4;-1:-1:-1;;;14250:51:4;;-1:-1:-1;14243:58:4;;14090:660;-1:-1:-1;14735:4:4;13925:831;;;;;;:::o;447:696:11:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:11;-1:-1:-1;604:41:11;-1:-1:-1;765:28:11;;;781:2;765:28;820:280;-1:-1:-1;;851:5:11;-1:-1:-1;;;985:2:11;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:11;820:280;1064:21;-1:-1:-1;1120:6:11;447:696;-1:-1:-1;;;447:696:11:o;10139:916:14:-;10192:7;;-1:-1:-1;;;10267:17:14;;10263:103;;-1:-1:-1;;;10304:17:14;;;-1:-1:-1;10349:2:14;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:14;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:14;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:14;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:14;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:14;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:14:o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:17;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:17;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:17:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:17;;1348:180;-1:-1:-1;1348:180:17:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:17;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:17:o;2178:127::-;2239:10;2234:3;2230:20;2227:1;2220:31;2270:4;2267:1;2260:15;2294:4;2291:1;2284:15;2310:632;2375:5;2405:18;2446:2;2438:6;2435:14;2432:40;;;2452:18;;:::i;:::-;2527:2;2521:9;2495:2;2581:15;;-1:-1:-1;;2577:24:17;;;2603:2;2573:33;2569:42;2557:55;;;2627:18;;;2647:22;;;2624:46;2621:72;;;2673:18;;:::i;:::-;2713:10;2709:2;2702:22;2742:6;2733:15;;2772:6;2764;2757:22;2812:3;2803:6;2798:3;2794:16;2791:25;2788:45;;;2829:1;2826;2819:12;2788:45;2879:6;2874:3;2867:4;2859:6;2855:17;2842:44;2934:1;2927:4;2918:6;2910;2906:19;2902:30;2895:41;;;;2310:632;;;;;:::o;2947:525::-;3025:6;3033;3086:2;3074:9;3065:7;3061:23;3057:32;3054:52;;;3102:1;3099;3092:12;3054:52;3125:29;3144:9;3125:29;:::i;:::-;3115:39;;3205:2;3194:9;3190:18;3177:32;3232:18;3224:6;3221:30;3218:50;;;3264:1;3261;3254:12;3218:50;3287:22;;3340:4;3332:13;;3328:27;-1:-1:-1;3318:55:17;;3369:1;3366;3359:12;3318:55;3392:74;3458:7;3453:2;3440:16;3435:2;3431;3427:11;3392:74;:::i;:::-;3382:84;;;2947:525;;;;;:::o;3477:328::-;3554:6;3562;3570;3623:2;3611:9;3602:7;3598:23;3594:32;3591:52;;;3639:1;3636;3629:12;3591:52;3662:29;3681:9;3662:29;:::i;:::-;3652:39;;3710:38;3744:2;3733:9;3729:18;3710:38;:::i;:::-;3700:48;;3795:2;3784:9;3780:18;3767:32;3757:42;;3477:328;;;;;:::o;3810:186::-;3869:6;3922:2;3910:9;3901:7;3897:23;3893:32;3890:52;;;3938:1;3935;3928:12;3890:52;3961:29;3980:9;3961:29;:::i;4183:347::-;4248:6;4256;4309:2;4297:9;4288:7;4284:23;4280:32;4277:52;;;4325:1;4322;4315:12;4277:52;4348:29;4367:9;4348:29;:::i;:::-;4338:39;;4427:2;4416:9;4412:18;4399:32;4474:5;4467:13;4460:21;4453:5;4450:32;4440:60;;4496:1;4493;4486:12;4440:60;4519:5;4509:15;;;4183:347;;;;;:::o;4535:667::-;4630:6;4638;4646;4654;4707:3;4695:9;4686:7;4682:23;4678:33;4675:53;;;4724:1;4721;4714:12;4675:53;4747:29;4766:9;4747:29;:::i;:::-;4737:39;;4795:38;4829:2;4818:9;4814:18;4795:38;:::i;:::-;4785:48;;4880:2;4869:9;4865:18;4852:32;4842:42;;4935:2;4924:9;4920:18;4907:32;4962:18;4954:6;4951:30;4948:50;;;4994:1;4991;4984:12;4948:50;5017:22;;5070:4;5062:13;;5058:27;-1:-1:-1;5048:55:17;;5099:1;5096;5089:12;5048:55;5122:74;5188:7;5183:2;5170:16;5165:2;5161;5157:11;5122:74;:::i;:::-;5112:84;;;4535:667;;;;;;;:::o;5207:260::-;5275:6;5283;5336:2;5324:9;5315:7;5311:23;5307:32;5304:52;;;5352:1;5349;5342:12;5304:52;5375:29;5394:9;5375:29;:::i;:::-;5365:39;;5423:38;5457:2;5446:9;5442:18;5423:38;:::i;:::-;5413:48;;5207:260;;;;;:::o;5472:380::-;5551:1;5547:12;;;;5594;;;5615:61;;5669:4;5661:6;5657:17;5647:27;;5615:61;5722:2;5714:6;5711:14;5691:18;5688:38;5685:161;;5768:10;5763:3;5759:20;5756:1;5749:31;5803:4;5800:1;5793:15;5831:4;5828:1;5821:15;5685:161;;5472:380;;;:::o;6689:232::-;6728:3;6749:17;;;6746:140;;6808:10;6803:3;6799:20;6796:1;6789:31;6843:4;6840:1;6833:15;6871:4;6868:1;6861:15;6746:140;-1:-1:-1;6913:1:17;6902:13;;6689:232::o;6926:409::-;7128:2;7110:21;;;7167:2;7147:18;;;7140:30;7206:34;7201:2;7186:18;;7179:62;-1:-1:-1;;;7272:2:17;7257:18;;7250:43;7325:3;7310:19;;6926:409::o;8103:496::-;8282:3;8320:6;8314:13;8336:66;8395:6;8390:3;8383:4;8375:6;8371:17;8336:66;:::i;:::-;8465:13;;8424:16;;;;8487:70;8465:13;8424:16;8534:4;8522:17;;8487:70;:::i;:::-;8573:20;;8103:496;-1:-1:-1;;;;8103:496:17:o;10631:545::-;10733:2;10728:3;10725:11;10722:448;;;10769:1;10794:5;10790:2;10783:17;10839:4;10835:2;10825:19;10909:2;10897:10;10893:19;10890:1;10886:27;10880:4;10876:38;10945:4;10933:10;10930:20;10927:47;;;-1:-1:-1;10968:4:17;10927:47;11023:2;11018:3;11014:12;11011:1;11007:20;11001:4;10997:31;10987:41;;11078:82;11096:2;11089:5;11086:13;11078:82;;;11141:17;;;11122:1;11111:13;11078:82;;;11082:3;;;10631:545;;;:::o;11352:1352::-;11478:3;11472:10;11505:18;11497:6;11494:30;11491:56;;;11527:18;;:::i;:::-;11556:97;11646:6;11606:38;11638:4;11632:11;11606:38;:::i;:::-;11600:4;11556:97;:::i;:::-;11708:4;;11772:2;11761:14;;11789:1;11784:663;;;;12491:1;12508:6;12505:89;;;-1:-1:-1;12560:19:17;;;12554:26;12505:89;-1:-1:-1;;11309:1:17;11305:11;;;11301:24;11297:29;11287:40;11333:1;11329:11;;;11284:57;12607:81;;11754:944;;11784:663;10578:1;10571:14;;;10615:4;10602:18;;-1:-1:-1;;11820:20:17;;;11938:236;11952:7;11949:1;11946:14;11938:236;;;12041:19;;;12035:26;12020:42;;12133:27;;;;12101:1;12089:14;;;;11968:19;;11938:236;;;11942:3;12202:6;12193:7;12190:19;12187:201;;;12263:19;;;12257:26;-1:-1:-1;;12346:1:17;12342:14;;;12358:3;12338:24;12334:37;12330:42;12315:58;12300:74;;12187:201;-1:-1:-1;;;;;12434:1:17;12418:14;;;12414:22;12401:36;;-1:-1:-1;11352:1352:17:o;12709:401::-;12911:2;12893:21;;;12950:2;12930:18;;;12923:30;12989:34;12984:2;12969:18;;12962:62;-1:-1:-1;;;13055:2:17;13040:18;;13033:35;13100:3;13085:19;;12709:401::o;13874:414::-;14076:2;14058:21;;;14115:2;14095:18;;;14088:30;14154:34;14149:2;14134:18;;14127:62;-1:-1:-1;;;14220:2:17;14205:18;;14198:48;14278:3;14263:19;;13874:414::o;14293:489::-;-1:-1:-1;;;;;14562:15:17;;;14544:34;;14614:15;;14609:2;14594:18;;14587:43;14661:2;14646:18;;14639:34;;;14709:3;14704:2;14689:18;;14682:31;;;14487:4;;14730:46;;14756:19;;14748:6;14730:46;:::i;:::-;14722:54;14293:489;-1:-1:-1;;;;;;14293:489:17:o;14787:249::-;14856:6;14909:2;14897:9;14888:7;14884:23;14880:32;14877:52;;;14925:1;14922;14915:12;14877:52;14957:9;14951:16;14976:30;15000:5;14976:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1237400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2700",
								"getApproved(uint256)": "4792",
								"getTokenIdCounter()": "2358",
								"isApprovedForAll(address,address)": "infinite",
								"mintWithURI(address,string)": "infinite",
								"name()": "infinite",
								"owner()": "2376",
								"ownerOf(uint256)": "2627",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26772",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 280,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 245,
									"end": 280,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 287,
									"end": 364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 287,
									"end": 364,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 348,
									"end": 352,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 354,
									"end": 360,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 348,
									"end": 352,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 287,
									"end": 364,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 287,
									"end": 364,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 17,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 17,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 190,
									"end": 705,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 705,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7bd77182af0f7fd03e6a4268adde4e9ce0e5d5086b48d6a8959efe24d7ad27064736f6c63430008120033",
									".code": [
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "DBFD4B98"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "E980602"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "E980602"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 705,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 190,
											"end": 705,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 535,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 535,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 535,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 535,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 370,
											"end": 599,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 599,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 370,
											"end": 599,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 370,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 370,
											"end": 599,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 370,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4172,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4147,
											"end": 4172,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4147,
											"end": 4172,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4001,
											"end": 4178,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 806,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 806,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 605,
											"end": 703,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 605,
											"end": 703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 681,
											"end": 696,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 681,
											"end": 696,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 605,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 605,
											"end": 703,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 535,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 535,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 637,
											"end": 641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 660,
											"end": 693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 693,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24832483"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 660,
											"end": 693,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 660,
											"end": 693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 660,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 660,
											"end": 733,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 660,
											"end": 733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 697,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 697,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 697,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 653,
											"end": 733,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 535,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 535,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6059,
											"end": 6061,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6041,
											"end": 6062,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6071,
											"end": 6101,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6172,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6181,
											"end": 6212,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6229,
											"end": 6248,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6229,
											"end": 6248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6463,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6443,
											"end": 6464,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 17,
											"value": "3D"
										},
										{
											"begin": 6480,
											"end": 6498,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6480,
											"end": 6498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6480,
											"end": 6498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6512,
											"end": 6574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6610,
											"end": 6641,
											"name": "PUSH",
											"source": 17,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6583,
											"end": 6642,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6659,
											"end": 6678,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6659,
											"end": 6678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6259,
											"end": 6684,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 370,
											"end": 599,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 370,
											"end": 599,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 475,
											"end": 490,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 500,
											"end": 521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 506,
											"end": 508,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 475,
											"end": 490,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 500,
											"end": 505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 500,
											"end": 521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 500,
											"end": 521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 531,
											"end": 565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 544,
											"end": 554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 556,
											"end": 564,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 531,
											"end": 543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 531,
											"end": 565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 531,
											"end": 565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 531,
											"end": 565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 575,
											"end": 590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 575,
											"end": 592,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 575,
											"end": 590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 575,
											"end": 592,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 575,
											"end": 592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 575,
											"end": 592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 444,
											"end": 599,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 370,
											"end": 599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4771,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4763,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4873,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7544,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7545,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7581,
											"end": 7583,
											"name": "PUSH",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7554,
											"end": 7584,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7593,
											"end": 7647,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7340,
											"end": 7688,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7897,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 7898,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7937,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8007,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7946,
											"end": 8008,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8017,
											"end": 8056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8073,
											"end": 8092,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8073,
											"end": 8092,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7693,
											"end": 8098,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5319,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5311,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 879,
											"end": 892,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 904,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 904,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 904,
											"end": 927,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 904,
											"end": 927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 964,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 964,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 964,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 964,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 964,
											"end": 983,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 938,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 938,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1014,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1093,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1093,
											"end": 1163,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1093,
											"end": 1163,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1093,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1288,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1261,
											"end": 1367,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1322,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1367,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1261,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1384,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 806,
											"end": 1414,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8808,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8788,
											"end": 8809,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8845,
											"end": 8847,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8818,
											"end": 8848,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8884,
											"end": 8918,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8857,
											"end": 8919,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8928,
											"end": 8964,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8981,
											"end": 9000,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8981,
											"end": 9000,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8604,
											"end": 9006,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7544,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7545,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7581,
											"end": 7583,
											"name": "PUSH",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7554,
											"end": 7584,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7593,
											"end": 7647,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7340,
											"end": 7688,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12661,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 12699,
											"end": 12722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12572,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9213,
											"end": 9215,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9225,
											"end": 9255,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9291,
											"end": 9325,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9271,
											"end": 9289,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9271,
											"end": 9289,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9264,
											"end": 9326,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9361,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9343,
											"end": 9361,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9011,
											"end": 9367,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8925,
											"end": 9845,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8925,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9004,
											"end": 9020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9004,
											"end": 9020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9574,
											"end": 9576,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9586,
											"end": 9616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9652,
											"end": 9686,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9625,
											"end": 9687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9372,
											"end": 9728,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9938,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9974,
											"end": 9976,
											"name": "PUSH",
											"source": 17,
											"value": "1C"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9947,
											"end": 9977,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10013,
											"end": 10043,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9986,
											"end": 10044,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9733,
											"end": 10085,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9938,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9974,
											"end": 9976,
											"name": "PUSH",
											"source": 17,
											"value": "1C"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9947,
											"end": 9977,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10013,
											"end": 10043,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9986,
											"end": 10044,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9733,
											"end": 10085,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9680,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1599,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10294,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10274,
											"end": 10295,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10331,
											"end": 10333,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 10311,
											"end": 10329,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10311,
											"end": 10329,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10311,
											"end": 10329,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10304,
											"end": 10334,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10370,
											"end": 10404,
											"name": "PUSH",
											"source": 17,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10343,
											"end": 10405,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10439,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10421,
											"end": 10439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10439,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10414,
											"end": 10458,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 10090,
											"end": 10500,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1690,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1775,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4172,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4147,
											"end": 4172,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4147,
											"end": 4172,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH",
											"source": 7,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7529,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 7626,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7404,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 11354,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11346,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13317,
											"end": 13319,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13320,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13356,
											"end": 13358,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13329,
											"end": 13359,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13395,
											"end": 13429,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13368,
											"end": 13430,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13439,
											"end": 13473,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13490,
											"end": 13509,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 13490,
											"end": 13509,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 13115,
											"end": 13515,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 11670,
											"end": 11677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 11655,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11647,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12999,
											"end": 13007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12990,
											"end": 12995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13722,
											"end": 13724,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13704,
											"end": 13725,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13761,
											"end": 13763,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 13741,
											"end": 13759,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13741,
											"end": 13759,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13741,
											"end": 13759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13734,
											"end": 13764,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13800,
											"end": 13827,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13773,
											"end": 13828,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 13520,
											"end": 13869,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12879,
											"end": 13156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6448,
											"end": 6452,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6438,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6484,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6476,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14367,
											"end": 14380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 14409,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14630,
											"end": 14643,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14606,
											"end": 14644,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 14756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 974,
											"end": 988,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2178,
											"end": 2305,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 2178,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2239,
											"end": 2249,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 2234,
											"end": 2237,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2230,
											"end": 2250,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2251,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2274,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2275,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2299,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "tag",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2446,
											"end": 2448,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2435,
											"end": 2449,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2432,
											"end": 2472,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2432,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 2432,
											"end": 2472,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 2452,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "tag",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2529,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2495,
											"end": 2497,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2605,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2569,
											"end": 2611,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2624,
											"end": 2670,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2621,
											"end": 2693,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2621,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 2621,
											"end": 2693,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 2673,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "tag",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2713,
											"end": 2723,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2812,
											"end": 2815,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2803,
											"end": 2809,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2801,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2794,
											"end": 2810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2791,
											"end": 2816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2819,
											"end": 2831,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2867,
											"end": 2871,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2855,
											"end": 2872,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2886,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2906,
											"end": 2925,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2902,
											"end": 2932,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2310,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3065,
											"end": 3072,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3084,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3057,
											"end": 3089,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "tag",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 3125,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "tag",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3154,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3209,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3221,
											"end": 3251,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3218,
											"end": 3268,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3218,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 3218,
											"end": 3268,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3265,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3254,
											"end": 3266,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3218,
											"end": 3268,
											"name": "tag",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 3218,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3287,
											"end": 3309,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3287,
											"end": 3309,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3340,
											"end": 3344,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3318,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 3318,
											"end": 3373,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3318,
											"end": 3373,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 3318,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3392,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 3458,
											"end": 3465,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3440,
											"end": 3456,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3437,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3427,
											"end": 3438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3392,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 3392,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3392,
											"end": 3466,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 3392,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3382,
											"end": 3466,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3382,
											"end": 3466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3382,
											"end": 3466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2947,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3554,
											"end": 3560,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3609,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3598,
											"end": 3621,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3591,
											"end": 3643,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3591,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 3591,
											"end": 3643,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3639,
											"end": 3640,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3637,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3629,
											"end": 3641,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3591,
											"end": 3643,
											"name": "tag",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 3591,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 3681,
											"end": 3690,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 3662,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3652,
											"end": 3691,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3652,
											"end": 3691,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 3744,
											"end": 3746,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 3710,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3748,
											"name": "tag",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 3710,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3748,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3748,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3795,
											"end": 3797,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3767,
											"end": 3799,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3757,
											"end": 3799,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3757,
											"end": 3799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3477,
											"end": 3805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3810,
											"end": 3996,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3869,
											"end": 3875,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3908,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3897,
											"end": 3920,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3893,
											"end": 3925,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3890,
											"end": 3942,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3890,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 3890,
											"end": 3942,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 3940,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3890,
											"end": 3942,
											"name": "tag",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 3890,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3961,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3961,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 3961,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4309,
											"end": 4311,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4306,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4307,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4280,
											"end": 4312,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4329,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 4277,
											"end": 4329,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4315,
											"end": 4327,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4277,
											"end": 4329,
											"name": "tag",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 4277,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4348,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 4367,
											"end": 4376,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4348,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 4348,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4348,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 4348,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4377,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4474,
											"end": 4479,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4467,
											"end": 4480,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4460,
											"end": 4481,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4450,
											"end": 4482,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 4440,
											"end": 4500,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4496,
											"end": 4497,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4494,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4486,
											"end": 4498,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4500,
											"name": "tag",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 4440,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4509,
											"end": 4524,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4509,
											"end": 4524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4509,
											"end": 4524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4636,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4660,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4705,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4675,
											"end": 4728,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4675,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 4675,
											"end": 4728,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4724,
											"end": 4725,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4722,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4726,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4675,
											"end": 4728,
											"name": "tag",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 4675,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4747,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4747,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 4747,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4747,
											"end": 4776,
											"name": "tag",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 4747,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4737,
											"end": 4776,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4737,
											"end": 4776,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4795,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4827,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4795,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 4795,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4795,
											"end": 4833,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 4795,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4785,
											"end": 4833,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4785,
											"end": 4833,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4880,
											"end": 4882,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4865,
											"end": 4883,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4852,
											"end": 4884,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4842,
											"end": 4884,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4842,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4954,
											"end": 4960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4951,
											"end": 4981,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4948,
											"end": 4998,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4948,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 4948,
											"end": 4998,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4948,
											"end": 4998,
											"name": "tag",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 4948,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5017,
											"end": 5039,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5017,
											"end": 5039,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5074,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5062,
											"end": 5075,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5062,
											"end": 5075,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5058,
											"end": 5085,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5048,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 5048,
											"end": 5103,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5089,
											"end": 5101,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5048,
											"end": 5103,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 5048,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 5188,
											"end": 5195,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5170,
											"end": 5186,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5157,
											"end": 5168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 5122,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5196,
											"name": "tag",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 5122,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5112,
											"end": 5196,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5112,
											"end": 5196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5112,
											"end": 5196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5333,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5315,
											"end": 5322,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5311,
											"end": 5334,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5307,
											"end": 5339,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5304,
											"end": 5356,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5304,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 5304,
											"end": 5356,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5342,
											"end": 5354,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5304,
											"end": 5356,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 5304,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 5375,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5375,
											"end": 5404,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 5375,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5365,
											"end": 5404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5365,
											"end": 5404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5423,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 5457,
											"end": 5459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5446,
											"end": 5455,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5423,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 5423,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5423,
											"end": 5461,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 5423,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5413,
											"end": 5461,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5413,
											"end": 5461,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5472,
											"end": 5852,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 5472,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5551,
											"end": 5552,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5547,
											"end": 5559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5547,
											"end": 5559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5547,
											"end": 5559,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 5547,
											"end": 5559,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5594,
											"end": 5606,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5594,
											"end": 5606,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5594,
											"end": 5606,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5615,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 5615,
											"end": 5676,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 5661,
											"end": 5667,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5657,
											"end": 5674,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5647,
											"end": 5674,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5647,
											"end": 5674,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5615,
											"end": 5676,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 5615,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5685,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 5685,
											"end": 5846,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5768,
											"end": 5778,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5763,
											"end": 5766,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5759,
											"end": 5779,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5780,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5793,
											"end": 5808,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5836,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5685,
											"end": 5846,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 5685,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5685,
											"end": 5846,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5472,
											"end": 5852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5472,
											"end": 5852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5472,
											"end": 5852,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5472,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6689,
											"end": 6921,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 6689,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6728,
											"end": 6731,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6746,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 6746,
											"end": 6886,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 6803,
											"end": 6806,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 6799,
											"end": 6819,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6820,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 6840,
											"end": 6841,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6833,
											"end": 6848,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6871,
											"end": 6875,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6868,
											"end": 6869,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6876,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6746,
											"end": 6886,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 6746,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6902,
											"end": 6915,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6902,
											"end": 6915,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6689,
											"end": 6921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7335,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 6926,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7128,
											"end": 7130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7131,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7131,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7131,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 17,
											"value": "2D"
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7140,
											"end": 7170,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7206,
											"end": 7240,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 7201,
											"end": 7203,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7179,
											"end": 7241,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7272,
											"end": 7274,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7250,
											"end": 7293,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7310,
											"end": 7329,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7310,
											"end": 7329,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8103,
											"end": 8599,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 8103,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8282,
											"end": 8285,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8326,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8336,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 8395,
											"end": 8401,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8390,
											"end": 8393,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8383,
											"end": 8387,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8371,
											"end": 8388,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8336,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 8336,
											"end": 8402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8336,
											"end": 8402,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 8336,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8465,
											"end": 8478,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8465,
											"end": 8478,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8424,
											"end": 8440,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8424,
											"end": 8440,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8424,
											"end": 8440,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8424,
											"end": 8440,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 8465,
											"end": 8478,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8424,
											"end": 8440,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8534,
											"end": 8538,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8539,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8522,
											"end": 8539,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 8487,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "tag",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8573,
											"end": 8593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8573,
											"end": 8593,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 8103,
											"end": 8599,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8103,
											"end": 8599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10631,
											"end": 11176,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 10631,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10733,
											"end": 10735,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10728,
											"end": 10731,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10725,
											"end": 10736,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10722,
											"end": 11170,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10722,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 10722,
											"end": 11170,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10769,
											"end": 10770,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10794,
											"end": 10799,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10790,
											"end": 10792,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10783,
											"end": 10800,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10843,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10835,
											"end": 10837,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10825,
											"end": 10844,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10909,
											"end": 10911,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10897,
											"end": 10907,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10893,
											"end": 10912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 10886,
											"end": 10913,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 10880,
											"end": 10884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10876,
											"end": 10914,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10945,
											"end": 10949,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10933,
											"end": 10943,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10930,
											"end": 10950,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10927,
											"end": 10974,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10927,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 10927,
											"end": 10974,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10968,
											"end": 10972,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10927,
											"end": 10974,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 10927,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11023,
											"end": 11025,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 11018,
											"end": 11021,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11014,
											"end": 11026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11011,
											"end": 11012,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 11007,
											"end": 11027,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 11001,
											"end": 11005,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10997,
											"end": 11028,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10987,
											"end": 11028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10987,
											"end": 11028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11098,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11086,
											"end": 11099,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 11122,
											"end": 11123,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11111,
											"end": 11124,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11078,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10631,
											"end": 11176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10631,
											"end": 11176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10631,
											"end": 11176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10631,
											"end": 11176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11352,
											"end": 12704,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 11352,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11478,
											"end": 11481,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11472,
											"end": 11482,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11494,
											"end": 11524,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11491,
											"end": 11547,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11491,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 11491,
											"end": 11547,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 11527,
											"end": 11545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 11646,
											"end": 11652,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11606,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 11638,
											"end": 11642,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11632,
											"end": 11643,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 11606,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 11606,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11606,
											"end": 11644,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 11606,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11600,
											"end": 11604,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 11556,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11653,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 11556,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11708,
											"end": 11712,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11708,
											"end": 11712,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 11761,
											"end": 11775,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11775,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11789,
											"end": 11790,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11784,
											"end": 12447,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11784,
											"end": 12447,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 11784,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 11784,
											"end": 12447,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12491,
											"end": 12492,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 12514,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12505,
											"end": 12594,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12505,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 12505,
											"end": 12594,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12554,
											"end": 12580,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12505,
											"end": 12594,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 12505,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11309,
											"end": 11310,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 11305,
											"end": 11316,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11305,
											"end": 11316,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11305,
											"end": 11316,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11301,
											"end": 11325,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 11297,
											"end": 11326,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 11287,
											"end": 11327,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11333,
											"end": 11334,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11329,
											"end": 11340,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11329,
											"end": 11340,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11329,
											"end": 11340,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11284,
											"end": 11341,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 12607,
											"end": 12688,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12607,
											"end": 12688,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 11754,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11754,
											"end": 12698,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11784,
											"end": 12447,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 11784,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10578,
											"end": 10579,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10615,
											"end": 10619,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10602,
											"end": 10620,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10602,
											"end": 10620,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11820,
											"end": 11840,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11820,
											"end": 11840,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11820,
											"end": 11840,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11952,
											"end": 11959,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11949,
											"end": 11950,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11946,
											"end": 11960,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12041,
											"end": 12060,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12041,
											"end": 12060,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12041,
											"end": 12060,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12035,
											"end": 12061,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12020,
											"end": 12062,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12020,
											"end": 12062,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 12133,
											"end": 12160,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12133,
											"end": 12160,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12133,
											"end": 12160,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12133,
											"end": 12160,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12101,
											"end": 12102,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12089,
											"end": 12103,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12089,
											"end": 12103,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12089,
											"end": 12103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12089,
											"end": 12103,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11968,
											"end": 11987,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11968,
											"end": 11987,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 11938,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12193,
											"end": 12200,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12190,
											"end": 12209,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12187,
											"end": 12388,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12187,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 12187,
											"end": 12388,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12263,
											"end": 12282,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12263,
											"end": 12282,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12263,
											"end": 12282,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12257,
											"end": 12283,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12346,
											"end": 12347,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 12342,
											"end": 12356,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12342,
											"end": 12356,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12342,
											"end": 12356,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 12358,
											"end": 12361,
											"name": "PUSH",
											"source": 17,
											"value": "F8"
										},
										{
											"begin": 12338,
											"end": 12362,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12334,
											"end": 12371,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 12330,
											"end": 12372,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 12315,
											"end": 12373,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12300,
											"end": 12374,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12300,
											"end": 12374,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 12187,
											"end": 12388,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 12187,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12434,
											"end": 12435,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12418,
											"end": 12432,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12418,
											"end": 12432,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12418,
											"end": 12432,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 12414,
											"end": 12436,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12401,
											"end": 12437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12401,
											"end": 12437,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11352,
											"end": 12704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12709,
											"end": 13110,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 12709,
											"end": 13110,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12911,
											"end": 12913,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12893,
											"end": 12914,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 12914,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 12914,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 12952,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12923,
											"end": 12953,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12989,
											"end": 13023,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 12984,
											"end": 12986,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12969,
											"end": 12987,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12969,
											"end": 12987,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12962,
											"end": 13024,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13055,
											"end": 13057,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13033,
											"end": 13068,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13100,
											"end": 13103,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 13085,
											"end": 13104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13085,
											"end": 13104,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12709,
											"end": 13110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13874,
											"end": 14288,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 13874,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14076,
											"end": 14078,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14058,
											"end": 14079,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14058,
											"end": 14079,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14058,
											"end": 14079,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14115,
											"end": 14117,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 14095,
											"end": 14113,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14095,
											"end": 14113,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14095,
											"end": 14113,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14088,
											"end": 14118,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14154,
											"end": 14188,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 14149,
											"end": 14151,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14127,
											"end": 14189,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14220,
											"end": 14222,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14198,
											"end": 14246,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14278,
											"end": 14281,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13874,
											"end": 14288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14293,
											"end": 14782,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 14293,
											"end": 14782,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14562,
											"end": 14577,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14562,
											"end": 14577,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14562,
											"end": 14577,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14544,
											"end": 14578,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14544,
											"end": 14578,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14629,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14629,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14609,
											"end": 14611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14594,
											"end": 14612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14594,
											"end": 14612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14587,
											"end": 14630,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14661,
											"end": 14663,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14646,
											"end": 14664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14646,
											"end": 14664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14639,
											"end": 14673,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14639,
											"end": 14673,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14639,
											"end": 14673,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14709,
											"end": 14712,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 14704,
											"end": 14706,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 14689,
											"end": 14707,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14689,
											"end": 14707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14682,
											"end": 14713,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14682,
											"end": 14713,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14682,
											"end": 14713,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14730,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 14730,
											"end": 14776,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14756,
											"end": 14775,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14756,
											"end": 14775,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14748,
											"end": 14754,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14730,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 14730,
											"end": 14776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14730,
											"end": 14776,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 14730,
											"end": 14776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14722,
											"end": 14776,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 14293,
											"end": 14782,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14293,
											"end": 14782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14787,
											"end": 15036,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 14787,
											"end": 15036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14856,
											"end": 14862,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14911,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14888,
											"end": 14895,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14884,
											"end": 14907,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14880,
											"end": 14912,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14877,
											"end": 14929,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14877,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 14877,
											"end": 14929,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 14926,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14922,
											"end": 14923,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14915,
											"end": 14927,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14877,
											"end": 14929,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 14877,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14957,
											"end": 14966,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14951,
											"end": 14967,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14976,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 15000,
											"end": 15005,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14976,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 14976,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/RewardsNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getTokenIdCounter()": "dbfd4b98",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintWithURI(address,string)": "0e980602",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardsNFT.sol\":\"RewardsNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/RewardsNFT.sol\":{\"keccak256\":\"0x68538bb8029779c8678fbbef8a9a7aaa4006106f6047a6820a82c6c46a2dd700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d8a71f9ae49280ebf0a1146ca69b3a8898b0ba1b950a8a93c8c4f207a71b84\",\"dweb:/ipfs/QmZPSTEGmYSbHMvW6Y4fnti5d2rE9zJ65Hu6mnB5EttrUs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 166,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 168,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 172,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 176,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 180,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 186,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1217,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 7,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 2983,
								"contract": "contracts/RewardsNFT.sol:RewardsNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1736
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1737,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1736,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1736
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 2002,
							"src": "116:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "91:70:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						],
						"IERC4906": [
							137
						],
						"IERC721": [
							1183
						]
					},
					"id": 138,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 138,
							"sourceUnit": 116,
							"src": "132:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 138,
							"sourceUnit": 141,
							"src": "156:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 121,
										"name": "IERC165",
										"nameLocations": [
											"248:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2001,
										"src": "248:7:2"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:2"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC721",
										"nameLocations": [
											"257:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1183,
										"src": "257:7:2"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "181:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 137,
							"linearizedBaseContracts": [
								137,
								1183,
								2001
							],
							"name": "IERC4906",
							"nameLocation": "236:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "271:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 129,
									"name": "MetadataUpdate",
									"nameLocation": "483:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "506:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "498:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:18:2"
									},
									"src": "477:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "522:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 136,
									"name": "BatchMetadataUpdate",
									"nameLocation": "745:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "773:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "765:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "795:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "787:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:42:2"
									},
									"src": "739:68:2"
								}
							],
							"scope": 138,
							"src": "226:583:2",
							"usedErrors": []
						}
					],
					"src": "107:703:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						],
						"IERC721": [
							1183
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 139,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 1184,
							"src": "116:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "91:63:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1714
						],
						"Context": [
							1736
						],
						"ERC165": [
							1989
						],
						"ERC721": [
							1067
						],
						"IERC165": [
							2001
						],
						"IERC721": [
							1183
						],
						"IERC721Metadata": [
							1384
						],
						"IERC721Receiver": [
							1201
						],
						"Math": [
							2867
						],
						"SignedMath": [
							2972
						],
						"Strings": [
							1965
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 142,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1184,
							"src": "132:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1202,
							"src": "156:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1385,
							"src": "188:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1715,
							"src": "231:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1737,
							"src": "265:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1966,
							"src": "299:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1990,
							"src": "333:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 151,
										"name": "Context",
										"nameLocations": [
											"647:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1736,
										"src": "647:7:4"
									},
									"id": 152,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:4"
								},
								{
									"baseName": {
										"id": 153,
										"name": "ERC165",
										"nameLocations": [
											"656:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1989,
										"src": "656:6:4"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:4"
								},
								{
									"baseName": {
										"id": 155,
										"name": "IERC721",
										"nameLocations": [
											"664:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1183,
										"src": "664:7:4"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:4"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1384,
										"src": "673:15:4"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1067,
							"linearizedBaseContracts": [
								1067,
								1384,
								1183,
								1989,
								2001,
								1736
							],
							"name": "ERC721",
							"nameLocation": "637:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 161,
									"libraryName": {
										"id": 159,
										"name": "Address",
										"nameLocations": [
											"701:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1714,
										"src": "701:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:4",
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 164,
									"libraryName": {
										"id": 162,
										"name": "Strings",
										"nameLocations": [
											"732:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1965,
										"src": "732:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:4",
									"typeName": {
										"id": 163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 166,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "776:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 165,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 168,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "823:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 167,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 172,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "898:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 171,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 169,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 176,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "992:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 175,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 174,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1093:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 179,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 178,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1199:71:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 184,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 183,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1446:57:4",
										"statements": [
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1456:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 195,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "1464:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:4"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1479:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "1489:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:4"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1402:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1423:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:4"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:4"
									},
									"scope": 1067,
									"src": "1390:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1988,
										2000
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1678:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1707:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "1727:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1183_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1183_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1183",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1763:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 222,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "1783:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1384_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1384_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 221,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1384",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1851:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 227,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1067_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1988,
															"src": "1827:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 213,
												"id": 232,
												"nodeType": "Return",
												"src": "1688:175:4"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 208,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1989,
												"src": "1646:6:4"
											},
											{
												"id": 209,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2001,
												"src": "1654:7:4"
											}
										],
										"src": "1637:25:4"
									},
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1597:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 205,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:4"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1672:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:4"
									},
									"scope": 1067,
									"src": "1570:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1108
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2010:123:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2028:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 245,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 253,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2110:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 255,
													"indexExpression": {
														"id": 254,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2120:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 256,
												"nodeType": "Return",
												"src": "2103:23:4"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:4"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1948:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:4"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2001:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:4"
									},
									"scope": 1067,
									"src": "1929:204:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1116
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2271:138:4",
										"statements": [
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "2281:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 267,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 270,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2306:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 269,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2297:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 274,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2332:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 275,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:4"
											},
											{
												"expression": {
													"id": 283,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "2397:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 266,
												"id": 284,
												"nodeType": "Return",
												"src": "2390:12:4"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 263,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:4"
									},
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2207:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:4"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2262:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:4"
									},
									"scope": 1067,
									"src": "2190:219:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1369
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2540:29:4",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2550:12:4"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 289,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:4"
									},
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:4"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2525:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:4"
									},
									"scope": 1067,
									"src": "2471:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2704:31:4",
										"statements": [
											{
												"expression": {
													"id": 303,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "2721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 302,
												"id": 304,
												"nodeType": "Return",
												"src": "2714:14:4"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 299,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:4"
									},
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:4"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2689:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:4"
									},
									"scope": 1067,
									"src": "2633:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2889:188:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2914:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2899:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:4"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "2933:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 319,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 321,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2957:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 326,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "2990:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 324,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:4",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 335,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "3036:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 336,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 309,
																				"src": "3045:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:4",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1795,
																			"src": "3045:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 333,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 331,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 314,
												"id": 343,
												"nodeType": "Return",
												"src": "2977:93:4"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 311,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:4"
									},
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2819:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:4"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2874:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:4"
									},
									"scope": 1067,
									"src": "2801:276:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "3385:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "3395:9:4"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:4"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "3370:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:4"
									},
									"scope": 1067,
									"src": "3319:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1156
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3538:336:4",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "3548:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 363,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"arguments": [
														{
															"id": 367,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3579:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 365,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3564:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:4",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "3564:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "3605:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 372,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "3611:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "3686:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 380,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "3702:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 383,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "3728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 384,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "3735:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 382,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "3711:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3855:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3859:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "3846:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:4"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:4"
									},
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3485:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3497:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:4"
									},
									"scope": 1067,
									"src": "3468:406:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "4020:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "4045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4030:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 410,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "4071:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 412,
													"indexExpression": {
														"id": 411,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "4087:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 405,
												"id": 413,
												"nodeType": "Return",
												"src": "4064:31:4"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 402,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:4"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3956:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:4"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "4011:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:4"
									},
									"scope": 1067,
									"src": "3935:167:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1164
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "4253:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 425,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "4282:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4296:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4306:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 424,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4263:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:4"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 422,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:4"
									},
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4196:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4214:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:4"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:4"
									},
									"scope": 1067,
									"src": "4169:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1182
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4491:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 443,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "4508:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 445,
														"indexExpression": {
															"id": 444,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4527:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "4534:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 442,
												"id": 448,
												"nodeType": "Return",
												"src": "4501:42:4"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:4"
									},
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4429:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4485:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:4"
									},
									"scope": 1067,
									"src": "4388:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1148
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "4701:207:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 463,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "4790:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4790:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 465,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "4804:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 462,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "4771:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4814:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4763:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4763:99:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4763:99:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4883:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4889:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4893:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4873:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "4873:28:4"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 459,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4692:8:4"
									},
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4642:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4634:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4656:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4648:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4668:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4660:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:43:4"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4701:0:4"
									},
									"scope": 1067,
									"src": "4612:296:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1138
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "5067:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 489,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5094:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "5100:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "5104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5113:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 488,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															496,
															526
														],
														"referencedDeclaration": 526,
														"src": "5077:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5077:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "5077:39:4"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "4914:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4983:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 486,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5058:8:4"
									},
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5008:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5000:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5022:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5014:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5034:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5026:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:43:4"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5067:0:4"
									},
									"scope": 1067,
									"src": "4974:149:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1128
									],
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "5301:164:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 511,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "5338:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5338:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 513,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "5352:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 510,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5319:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5319:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5362:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5311:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:99:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "5311:99:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "5434:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5440:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5444:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 522,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "5453:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 518,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "5420:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "5420:38:4"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "5129:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5198:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 507,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5292:8:4"
									},
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5223:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5215:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5237:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5229:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5249:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5241:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5271:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "5258:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5258:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:62:4"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5301:0:4"
									},
									"scope": 1067,
									"src": "5189:276:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6428:165:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "6448:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "6454:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "6458:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "6438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6438:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "6438:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 546,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6507:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 547,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6513:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 548,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6517:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 549,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6526:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 545,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "6484:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6484:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6533:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:110:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "6476:110:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "5471:850:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6335:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6357:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6349:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6371:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6363:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6383:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6375:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6405:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6392:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6392:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:62:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:0:4"
									},
									"scope": 1067,
									"src": "6326:267:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "6777:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 563,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "6794:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 565,
													"indexExpression": {
														"id": 564,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "6802:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6794:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 562,
												"id": 566,
												"nodeType": "Return",
												"src": "6787:23:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6599:98:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6711:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6728:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6720:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:17:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6768:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6768:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:9:4"
									},
									"scope": 1067,
									"src": "6702:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "7191:55:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 577,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "7217:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 576,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "7208:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7208:17:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7237:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7229:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7229:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7208:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 575,
												"id": 584,
												"nodeType": "Return",
												"src": "7201:38:4"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "6823:292:4",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7129:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7145:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "7137:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7136:17:4"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "7185:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7185:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7184:6:4"
									},
									"scope": 1067,
									"src": "7120:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "7503:162:4",
										"statements": [
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7521:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "7513:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 596,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"id": 600,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7544:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 598,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "7529:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7536:7:4",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "7529:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7513:39:4"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 603,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "7570:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 604,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "7581:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7570:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 607,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "7607:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 608,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "7614:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 606,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7590:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7590:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7570:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 612,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "7638:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 611,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "7626:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7626:20:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 614,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "7650:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7626:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7570:87:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 617,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7569:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 595,
												"id": 618,
												"nodeType": "Return",
												"src": "7562:96:4"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "7252:147:4",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7413:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "7432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7457:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "7449:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7431:34:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "7497:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7497:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:6:4"
									},
									"scope": 1067,
									"src": "7404:261:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "8060:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8080:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "8084:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8093:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 628,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															635,
															664
														],
														"referencedDeclaration": 664,
														"src": "8070:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8070:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "8070:26:4"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "7671:319:4",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8004:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8022:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "8014:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8034:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "8026:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8013:29:4"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:4"
									},
									"scope": 1067,
									"src": "7995:108:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "8408:195:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "8424:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "8428:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 645,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "8418:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "8418:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8498:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8490:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 652,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8490:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8490:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "8502:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 657,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "8506:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 658,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "8515:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 651,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "8467:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8467:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8534:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8446:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8446:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "8446:150:4"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "8109:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8333:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8351:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "8343:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8363:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "8355:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8385:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "8372:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8342:48:4"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8408:0:4"
									},
									"scope": 1067,
									"src": "8324:279:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "8986:859:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "9004:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9018:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9010:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 674,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9010:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9010:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9004:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9022:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8996:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "8996:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9075:17:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9084:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9076:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9076:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9094:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9067:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9067:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "9067:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9165:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9157:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 691,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9157:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9157:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9169:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9173:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9182:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 690,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "9136:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9136:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "9136:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9279:17:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 702,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9288:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 701,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9280:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9280:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9298:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9271:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9271:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "9271:58:4"
											},
											{
												"id": 714,
												"nodeType": "UncheckedBlock",
												"src": "9340:360:4",
												"statements": [
													{
														"expression": {
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 708,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "9671:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 710,
																"indexExpression": {
																	"id": 709,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "9681:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9671:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9671:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "9671:18:4"
													}
												]
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 715,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "9710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9718:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9710:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 718,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "9729:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9710:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "9710:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9764:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9756:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 722,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9756:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9756:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9768:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9772:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "9747:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9747:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "EmitStatement",
												"src": "9742:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9819:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9811:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 731,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9811:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9811:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 735,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9823:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9827:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9836:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 730,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "9791:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9791:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9791:47:4"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "8609:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8934:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8948:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "8940:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8960:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "8952:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8939:29:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8986:0:4"
									},
									"scope": 1067,
									"src": "8925:920:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "10220:713:4",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10238:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 807,
														"src": "10230:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 747,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10230:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"id": 751,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10261:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 749,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10246:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10253:7:4",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "10246:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10246:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10230:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "10301:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10316:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10308:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 756,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10308:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10308:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10320:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10329:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 754,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "10280:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10280:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "10280:51:4"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 764,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "10433:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 767,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "10456:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 765,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "10441:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10448:7:4",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 286,
															"src": "10441:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10441:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10433:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "10433:31:4"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10502:31:4",
													"subExpression": {
														"baseExpression": {
															"id": 771,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "10509:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 773,
														"indexExpression": {
															"id": 772,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10525:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10509:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "10502:31:4"
											},
											{
												"id": 782,
												"nodeType": "UncheckedBlock",
												"src": "10544:237:4",
												"statements": [
													{
														"expression": {
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 776,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "10749:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 778,
																"indexExpression": {
																	"id": 777,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "10759:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10769:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10749:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 781,
														"nodeType": "ExpressionStatement",
														"src": "10749:21:4"
													}
												]
											},
											{
												"expression": {
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10790:23:4",
													"subExpression": {
														"baseExpression": {
															"id": 783,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "10797:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 785,
														"indexExpression": {
															"id": 784,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10805:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10797:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "10790:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 789,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "10838:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10853:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10845:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 790,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10845:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10845:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10857:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "10829:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "EmitStatement",
												"src": "10824:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "10896:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10911:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10903:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10903:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10903:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10915:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10924:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 797,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "10876:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10876:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "10876:50:4"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "9851:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10180:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10194:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "10186:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10185:17:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10220:0:4"
									},
									"scope": 1067,
									"src": "10171:762:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "11336:1124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 821,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "11369:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 819,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "11354:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11361:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 286,
																	"src": "11354:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11354:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 823,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "11381:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11354:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11387:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11346:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11346:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "11346:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 829,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "11445:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11459:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11451:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 830,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11451:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11451:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11445:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11463:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11437:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11437:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "11437:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "11534:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11540:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11544:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11553:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 838,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "11513:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "11513:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 848,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "11670:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 846,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "11655:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11662:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 286,
																	"src": "11655:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11655:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 850,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "11682:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11655:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11688:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11647:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11647:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "11647:81:4"
											},
											{
												"expression": {
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11790:31:4",
													"subExpression": {
														"baseExpression": {
															"id": 855,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "11797:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 857,
														"indexExpression": {
															"id": 856,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11813:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11797:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "11790:31:4"
											},
											{
												"id": 872,
												"nodeType": "UncheckedBlock",
												"src": "11832:496:4",
												"statements": [
													{
														"expression": {
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 860,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "12265:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 862,
																"indexExpression": {
																	"id": 861,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "12275:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12265:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12265:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 865,
														"nodeType": "ExpressionStatement",
														"src": "12265:20:4"
													},
													{
														"expression": {
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 866,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "12299:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 868,
																"indexExpression": {
																	"id": 867,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "12309:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12299:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12316:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12299:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 871,
														"nodeType": "ExpressionStatement",
														"src": "12299:18:4"
													}
												]
											},
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 873,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "12337:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 875,
														"indexExpression": {
															"id": 874,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "12345:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12337:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "12356:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12337:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "12337:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 880,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "12383:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "12389:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "12393:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "12374:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12374:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "EmitStatement",
												"src": "12369:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "12432:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "12438:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "12442:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12451:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 885,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "12412:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12412:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "12412:41:4"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "10939:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11266:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11284:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "11276:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11276:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11298:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "11290:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11310:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "11302:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11275:43:4"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11336:0:4"
									},
									"scope": 1067,
									"src": "11257:1203:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "12636:107:4",
										"statements": [
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 901,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "12646:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 903,
														"indexExpression": {
															"id": 902,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "12662:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12646:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "12673:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12646:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "12646:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 910,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "12714:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 908,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "12699:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1067_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12706:7:4",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 286,
																"src": "12699:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12699:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "12724:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "12728:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "12690:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12690:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "EmitStatement",
												"src": "12685:51:4"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "12466:101:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12581:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12598:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "12590:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12610:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "12602:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12602:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12589:29:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12636:0:4"
									},
									"scope": 1067,
									"src": "12572:171:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "12972:184:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "12990:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 929,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "12999:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12990:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13009:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12982:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12982:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "12982:55:4"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 934,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "13047:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 937,
															"indexExpression": {
																"id": 935,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "13066:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13047:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 938,
														"indexExpression": {
															"id": 936,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "13073:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13047:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 939,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "13085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13047:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "13047:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 943,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "13123:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "13130:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "13140:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 942,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "13108:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13108:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "EmitStatement",
												"src": "13103:46:4"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "12749:125:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12888:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "12907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12930:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "12922:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12922:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12945:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "12940:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12940:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12906:48:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12972:0:4"
									},
									"scope": 1067,
									"src": "12879:277:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "13303:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 957,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "13329:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 956,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "13321:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13321:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13339:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13313:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13313:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "13313:53:4"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "13162:73:4",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13249:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13272:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "13264:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13264:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13263:17:4"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13303:0:4"
									},
									"scope": 1067,
									"src": "13240:133:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "14080:676:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 977,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "14094:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14097:10:4",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "14094:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14094:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1022,
													"nodeType": "Block",
													"src": "14714:36:4",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14735:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 976,
															"id": 1021,
															"nodeType": "Return",
															"src": "14728:11:4"
														}
													]
												},
												"id": 1023,
												"nodeType": "IfStatement",
												"src": "14090:660:4",
												"trueBody": {
													"id": 1019,
													"nodeType": "Block",
													"src": "14111:597:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 999,
																		"nodeType": "Block",
																		"src": "14225:91:4",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 997,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 993,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 991,
																						"src": "14250:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 994,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1201,
																								"src": "14260:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1201_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 995,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14276:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1200,
																							"src": "14260:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 996,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14293:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14260:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14250:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 976,
																				"id": 998,
																				"nodeType": "Return",
																				"src": "14243:58:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1000,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 992,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 991,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14217:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1000,
																				"src": "14210:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 990,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14210:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14209:15:4"
																	},
																	"src": "14201:115:4"
																},
																{
																	"block": {
																		"id": 1016,
																		"nodeType": "Block",
																		"src": "14345:353:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1007,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1004,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "14367:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1005,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14374:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14367:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1006,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14384:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14367:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1014,
																					"nodeType": "Block",
																					"src": "14494:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14580:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14617:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14621:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14613:3:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14613:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14636:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14630:5:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14630:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14606:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14606:38:4"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14606:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1002,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14621:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1002,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14636:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1013,
																							"nodeType": "InlineAssembly",
																							"src": "14571:95:4"
																						}
																					]
																				},
																				"id": 1015,
																				"nodeType": "IfStatement",
																				"src": "14363:321:4",
																				"trueBody": {
																					"id": 1012,
																					"nodeType": "Block",
																					"src": "14387:101:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1009,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14416:52:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1008,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14409:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1010,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14409:60:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1011,
																							"nodeType": "ExpressionStatement",
																							"src": "14409:60:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1017,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1003,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1002,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14337:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1017,
																				"src": "14324:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1001,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14324:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14323:21:4"
																	},
																	"src": "14317:381:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 984,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "14166:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14166:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 986,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "14180:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 987,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "14186:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 988,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "14195:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 981,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 968,
																				"src": "14145:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 980,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "14129:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1201_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14129:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1201",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14149:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1200,
																	"src": "14129:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14129:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1018,
															"nodeType": "TryStatement",
															"src": "14125:573:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "13379:541:4",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13934:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13974:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "13966:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13966:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13996:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "13988:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14016:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "14008:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14046:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "14033:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14033:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:100:4"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "14074:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14074:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14073:6:4"
									},
									"scope": 1067,
									"src": "13925:831:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "15586:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "14762:705:4",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15481:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15510:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "15502:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15502:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15524:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "15516:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15516:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15536:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "15528:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15558:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "15550:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15501:67:4"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15586:0:4"
									},
									"scope": 1067,
									"src": "15472:116:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "16407:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "15594:695:4",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16303:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16331:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16323:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16323:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16345:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16337:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16337:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16357:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16349:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16379:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16371:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16371:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16322:67:4"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16407:0:4"
									},
									"scope": 1067,
									"src": "16294:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "16958:45:4",
										"statements": [
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1059,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "16968:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"id": 1060,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16978:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16968:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1062,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "16990:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16968:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "16968:28:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "16415:409:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16891:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16924:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "16916:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16941:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "16933:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16933:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16915:33:4"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16958:0:4"
									},
									"scope": 1067,
									"src": "16882:121:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1068,
							"src": "628:16377:4",
							"usedErrors": []
						}
					],
					"src": "107:16899:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						],
						"IERC721": [
							1183
						]
					},
					"id": 1184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1070,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 2002,
							"src": "133:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1072,
										"name": "IERC165",
										"nameLocations": [
											"271:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2001,
										"src": "271:7:5"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1071,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1183,
							"linearizedBaseContracts": [
								1183,
								2001
							],
							"name": "IERC721",
							"nameLocation": "260:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1082,
									"name": "Transfer",
									"nameLocation": "384:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "393:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "415:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "435:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:5"
									},
									"src": "378:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1091,
									"name": "Approval",
									"nameLocation": "571:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "580:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "603:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "629:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:5"
									},
									"src": "565:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1100,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "803:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "852:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:5"
									},
									"src": "782:85:5"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "973:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:5"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:5"
									},
									"scope": 1183,
									"src": "954:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1187:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:5"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1227:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:5"
									},
									"scope": 1183,
									"src": "1170:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1835:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1849:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1861:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1878:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1124,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:5"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:5"
									},
									"scope": 1183,
									"src": "1809:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2632:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2646:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2658:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:5"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:5"
									},
									"scope": 1183,
									"src": "2606:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3449:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3463:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3475:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:5"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:5"
									},
									"scope": 1183,
									"src": "3427:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3981:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3993:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:5"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:5"
									},
									"scope": 1183,
									"src": "3964:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4366:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4384:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:5"
									},
									"scope": 1183,
									"src": "4339:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4579:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:5"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4619:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:5"
									},
									"scope": 1183,
									"src": "4558:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4812:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4827:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:5"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4868:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:5"
									},
									"scope": 1183,
									"src": "4786:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1184,
							"src": "250:4626:5",
							"usedErrors": []
						}
					],
					"src": "108:4769:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1201
						]
					},
					"id": 1202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1186,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "859:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "885:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "907:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "932:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "976:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1197,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:6"
									},
									"scope": 1201,
									"src": "824:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1202,
							"src": "294:692:6",
							"usedErrors": []
						}
					],
					"src": "116:871:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							1714
						],
						"Context": [
							1736
						],
						"ERC165": [
							1989
						],
						"ERC721": [
							1067
						],
						"ERC721URIStorage": [
							1357
						],
						"IERC165": [
							2001
						],
						"IERC4906": [
							137
						],
						"IERC721": [
							1183
						],
						"IERC721Metadata": [
							1384
						],
						"IERC721Receiver": [
							1201
						],
						"Math": [
							2867
						],
						"SignedMath": [
							2972
						],
						"Strings": [
							1965
						]
					},
					"id": 1358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "128:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 1068,
							"src": "153:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 138,
							"src": "177:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1207,
										"name": "IERC4906",
										"nameLocations": [
											"329:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 137,
										"src": "329:8:7"
									},
									"id": 1208,
									"nodeType": "InheritanceSpecifier",
									"src": "329:8:7"
								},
								{
									"baseName": {
										"id": 1209,
										"name": "ERC721",
										"nameLocations": [
											"339:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1067,
										"src": "339:6:7"
									},
									"id": 1210,
									"nodeType": "InheritanceSpecifier",
									"src": "339:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1206,
								"nodeType": "StructuredDocumentation",
								"src": "221:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1357,
							"linearizedBaseContracts": [
								1357,
								1067,
								1384,
								137,
								1183,
								1989,
								2001,
								1736
							],
							"name": "ERC721URIStorage",
							"nameLocation": "309:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1213,
									"libraryName": {
										"id": 1211,
										"name": "Strings",
										"nameLocations": [
											"358:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1965,
										"src": "358:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "352:26:7",
									"typeName": {
										"id": 1212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1217,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "458:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "423:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1216,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1214,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "431:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "423:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1215,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "442:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										234,
										2000
									],
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "643:97:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1228,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "660:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30783439303634393036",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "682:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1225148678_by_1",
																		"typeString": "int_const 1225148678"
																	},
																	"value": "0x49064906"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1225148678_by_1",
																		"typeString": "int_const 1225148678"
																	}
																],
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "675:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 1229,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "675:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "660:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1236,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "721:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1234,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "697:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1357_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "703:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 234,
															"src": "697:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "697:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "660:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1239,
												"nodeType": "Return",
												"src": "653:80:7"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "475:55:7",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "544:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1224,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1222,
												"name": "ERC721",
												"nameLocations": [
													"611:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "611:6:7"
											},
											{
												"id": 1223,
												"name": "IERC165",
												"nameLocations": [
													"619:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2001,
												"src": "619:7:7"
											}
										],
										"src": "602:25:7"
									},
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "569:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "562:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "562:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:20:7"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "637:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:6:7"
									},
									"scope": 1357,
									"src": "535:205:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "894:520:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "919:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1250,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "904:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "904:23:7"
											},
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "952:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1299,
														"src": "938:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1254,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "938:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"baseExpression": {
														"id": 1256,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "964:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1258,
													"indexExpression": {
														"id": 1257,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "975:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "964:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:45:7"
											},
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1007:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1299,
														"src": "993:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1260,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "993:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1262,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1014:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1014:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "993:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1267,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "1103:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1097:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1265,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1097:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1097:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1109:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1097:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1119:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1097:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1275,
												"nodeType": "IfStatement",
												"src": "1093:70:7",
												"trueBody": {
													"id": 1274,
													"nodeType": "Block",
													"src": "1122:41:7",
													"statements": [
														{
															"expression": {
																"id": 1272,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "1143:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1249,
															"id": 1273,
															"nodeType": "Return",
															"src": "1136:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1278,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "1271:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1265:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1276,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1265:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1265:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1282:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1265:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1291:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1265:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "1261:106:7",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "1294:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1287,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "1339:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1288,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "1345:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1285,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1322:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1326:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1322:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1322:33:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1315:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1283,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1315:6:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1315:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1249,
															"id": 1291,
															"nodeType": "Return",
															"src": "1308:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "1399:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1294,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1384:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1357_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1390:8:7",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 345,
														"src": "1384:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1384:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1298,
												"nodeType": "Return",
												"src": "1377:30:7"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "746:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "815:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1246,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "861:8:7"
									},
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "832:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "824:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:17:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "879:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "879:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:15:7"
									},
									"scope": 1357,
									"src": "806:608:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "1680:172:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1310,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "1706:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1309,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "1698:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1698:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1716:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1690:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1690:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "1690:75:7"
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1315,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "1775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1317,
														"indexExpression": {
															"id": 1316,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "1786:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1775:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1797:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1775:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "1775:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1322,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "1837:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1822:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1822:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "EmitStatement",
												"src": "1817:28:7"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "1420:174:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1608:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1629:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1621:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1652:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1638:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1638:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:42:7"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1680:0:7"
									},
									"scope": 1357,
									"src": "1599:253:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										808
									],
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "2128:142:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "2150:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1333,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1357_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2144:5:7",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 808,
														"src": "2138:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2138:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "2138:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1341,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "2179:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1343,
																	"indexExpression": {
																		"id": 1342,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "2190:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2179:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2173:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2173:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:26:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2200:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2173:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2173:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "2169:95:7",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "2213:51:7",
													"statements": [
														{
															"expression": {
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "2227:26:7",
																"subExpression": {
																	"baseExpression": {
																		"id": 1348,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "2234:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1350,
																	"indexExpression": {
																		"id": 1349,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "2245:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2234:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "2227:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "1858:207:7",
										"text": " @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "2079:5:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2119:8:7"
									},
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2093:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2085:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:17:7"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2128:0:7"
									},
									"scope": 1357,
									"src": "2070:200:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1358,
							"src": "291:1981:7",
							"usedErrors": []
						}
					],
					"src": "128:2145:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						],
						"IERC721": [
							1183
						],
						"IERC721Metadata": [
							1384
						]
					},
					"id": 1385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1385,
							"sourceUnit": 1184,
							"src": "137:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1362,
										"name": "IERC721",
										"nameLocations": [
											"326:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1183,
										"src": "326:7:8"
									},
									"id": 1363,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1361,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1384,
							"linearizedBaseContracts": [
								1384,
								1183,
								2001
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:8"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "442:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:8"
									},
									"scope": 1384,
									"src": "403:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:8"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "569:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:8"
									},
									"scope": 1384,
									"src": "528:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "703:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:8"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "743:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:8"
									},
									"scope": 1384,
									"src": "685:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1385,
							"src": "297:463:8",
							"usedErrors": []
						}
					],
					"src": "112:649:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1714
						]
					},
					"id": 1715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1386,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1387,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "Address",
							"nameLocation": "202:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "1478:254:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1395,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1702:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1400,
												"nodeType": "Return",
												"src": "1695:30:9"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1432:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1472:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:9"
									},
									"scope": 1714,
									"src": "1412:320:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "2718:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1413,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1714",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1714",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1411,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "2761:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:9"
											},
											{
												"assignments": [
													1422,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1435,
														"src": "2813:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1421,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1429,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1423,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "2831:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1425,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "2853:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1431,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "2882:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:9"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2666:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2693:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:9"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:9"
									},
									"scope": 1714,
									"src": "2647:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "3790:96:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "3829:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1448,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "3837:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1446,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1494,
															1538
														],
														"referencedDeclaration": 1538,
														"src": "3807:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1445,
												"id": 1452,
												"nodeType": "Return",
												"src": "3800:79:9"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3723:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3739:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:9"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3776:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1443,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:9"
									},
									"scope": 1714,
									"src": "3701:185:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "4255:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1467,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "4294:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "4302:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1470,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "4311:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1466,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1494,
															1538
														],
														"referencedDeclaration": 1538,
														"src": "4272:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1472,
												"nodeType": "Return",
												"src": "4265:59:9"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4139:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4163:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4190:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:9"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4241:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:9"
									},
									"scope": 1714,
									"src": "4108:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "4806:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1487,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4845:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "4853:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1489,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "4859:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1486,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1494,
															1538
														],
														"referencedDeclaration": 1538,
														"src": "4823:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1492,
												"nodeType": "Return",
												"src": "4816:94:9"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "4724:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "4740:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "4759:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "4792:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:9"
									},
									"scope": 1714,
									"src": "4693:224:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "5344:267:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1511,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1714",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1714",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1509,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "5387:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:9"
											},
											{
												"assignments": [
													1520,
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "5446:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1519,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "5460:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1521,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"arguments": [
														{
															"id": 1527,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "5513:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1523,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "5487:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1525,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "5506:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "5562:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1532,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "5570:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1533,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "5579:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1534,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "5591:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1530,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "5535:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1536,
												"nodeType": "Return",
												"src": "5528:76:9"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5205:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5229:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5256:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5279:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:9"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5330:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:9"
									},
									"scope": 1714,
									"src": "5165:446:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "5888:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1549,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "5924:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "5932:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1548,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1555,
															1584
														],
														"referencedDeclaration": 1584,
														"src": "5905:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1553,
												"nodeType": "Return",
												"src": "5898:80:9"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "5816:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "5832:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:9"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "5874:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:9"
									},
									"scope": 1714,
									"src": "5788:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "6327:168:9",
										"statements": [
											{
												"assignments": [
													1568,
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1568,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "6338:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1567,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "6352:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1569,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [
														{
															"id": 1573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "6397:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "6379:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "6446:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1578,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "6454:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1579,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "6463:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1580,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "6475:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1576,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "6419:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1582,
												"nodeType": "Return",
												"src": "6412:76:9"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6206:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6230:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6257:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:9"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6313:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:9"
									},
									"scope": 1714,
									"src": "6169:326:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "6771:101:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1595,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "6809:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "6817:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1594,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1601,
															1630
														],
														"referencedDeclaration": 1630,
														"src": "6788:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1599,
												"nodeType": "Return",
												"src": "6781:84:9"
											}
										]
									},
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "6704:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "6720:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "6757:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:9"
									},
									"scope": 1714,
									"src": "6674:198:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "7213:170:9",
										"statements": [
											{
												"assignments": [
													1614,
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "7224:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1613,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "7238:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1615,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"arguments": [
														{
															"id": 1619,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "7285:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1617,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "7265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1623,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "7334:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1624,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "7342:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1625,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "7351:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1626,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "7363:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1622,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "7307:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1628,
												"nodeType": "Return",
												"src": "7300:76:9"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "7097:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "7121:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "7148:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "7199:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:9"
									},
									"scope": 1714,
									"src": "7058:325:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "7865:434:9",
										"statements": [
											{
												"condition": {
													"id": 1644,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1635,
													"src": "7879:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "8235:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1662,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "8257:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1663,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "8269:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1661,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "8249:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1665,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:9"
														}
													]
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "7875:418:9",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "7888:341:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1645,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "7906:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1657,
															"nodeType": "IfStatement",
															"src": "7902:286:9",
															"trueBody": {
																"id": 1656,
																"nodeType": "Block",
																"src": "7930:258:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1651,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1633,
																							"src": "8132:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1650,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1402,
																						"src": "8121:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1649,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1655,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1658,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "8208:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1643,
															"id": 1659,
															"nodeType": "Return",
															"src": "8201:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7716:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7740:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7762:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7795:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:9"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7851:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:9"
									},
									"scope": 1714,
									"src": "7671:628:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "8680:135:9",
										"statements": [
											{
												"condition": {
													"id": 1681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "8694:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "8751:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1686,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "8773:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1687,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "8785:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1685,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "8765:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1689,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:9"
														}
													]
												},
												"id": 1691,
												"nodeType": "IfStatement",
												"src": "8690:119:9",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "8703:42:9",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "8724:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1680,
															"id": 1683,
															"nodeType": "Return",
															"src": "8717:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:9",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "8555:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "8577:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "8610:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:9"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "8666:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:9"
									},
									"scope": 1714,
									"src": "8520:295:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "8904:457:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1700,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "8980:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1710,
													"nodeType": "Block",
													"src": "9310:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1707,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "9331:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1706,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1709,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:9"
														}
													]
												},
												"id": 1711,
												"nodeType": "IfStatement",
												"src": "8976:379:9",
												"trueBody": {
													"id": 1705,
													"nodeType": "Block",
													"src": "9003:301:9",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1695,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1695,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:9",
																	"valueSize": 1
																}
															],
															"id": 1704,
															"nodeType": "InlineAssembly",
															"src": "9152:142:9"
														}
													]
												}
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "8838:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "8863:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:9"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:9"
									},
									"scope": 1714,
									"src": "8821:540:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1715,
							"src": "194:9169:9",
							"usedErrors": []
						}
					],
					"src": "101:9263:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1736
						]
					},
					"id": 1737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "Context",
							"nameLocation": "626:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "702:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1722,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1724,
												"nodeType": "Return",
												"src": "712:17:10"
											}
										]
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:10"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "693:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:10"
									},
									"scope": 1736,
									"src": "640:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "809:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1731,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1733,
												"nodeType": "Return",
												"src": "819:15:10"
											}
										]
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:10"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "793:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:10"
									},
									"scope": 1736,
									"src": "742:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1737,
							"src": "608:235:10",
							"usedErrors": []
						}
					],
					"src": "86:758:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2867
						],
						"SignedMath": [
							2972
						],
						"Strings": [
							1965
						]
					},
					"id": 1966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1966,
							"sourceUnit": 2868,
							"src": "126:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1966,
							"sourceUnit": 2973,
							"src": "152:31:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1741,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1965,
							"linearizedBaseContracts": [
								1965
							],
							"name": "Strings",
							"nameLocation": "228:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1744,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1965,
									"src": "242:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1742,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1743,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1747,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1965,
									"src": "302:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1745,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "518:625:11",
										"statements": [
											{
												"id": 1793,
												"nodeType": "UncheckedBlock",
												"src": "528:609:11",
												"statements": [
													{
														"assignments": [
															1756
														],
														"declarations": [
															{
																"constant": false,
																"id": 1756,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1793,
																"src": "552:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1755,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1763,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1759,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "580:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1757,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "569:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2867_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2704,
																	"src": "569:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:11"
													},
													{
														"assignments": [
															1765
														],
														"declarations": [
															{
																"constant": false,
																"id": 1765,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1793,
																"src": "604:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1764,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1770,
														"initialValue": {
															"arguments": [
																{
																	"id": 1768,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "638:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1766,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:11"
													},
													{
														"assignments": [
															1772
														],
														"declarations": [
															{
																"constant": false,
																"id": 1772,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1793,
																"src": "659:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1773,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1765,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1772,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:11",
																"valueSize": 1
															}
														],
														"id": 1774,
														"nodeType": "InlineAssembly",
														"src": "731:76:11"
													},
													{
														"body": {
															"id": 1789,
															"nodeType": "Block",
															"src": "833:267:11",
															"statements": [
																{
																	"expression": {
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:11",
																		"subExpression": {
																			"id": 1776,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "851:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1778,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:11"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:11"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1744,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1772,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1750,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1779,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:11"
																},
																{
																	"expression": {
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1780,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "1035:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1783,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1784,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "1068:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1788,
																	"nodeType": "IfStatement",
																	"src": "1064:21:11",
																	"trueBody": {
																		"id": 1787,
																		"nodeType": "Break",
																		"src": "1080:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1790,
														"nodeType": "WhileStatement",
														"src": "820:280:11"
													},
													{
														"expression": {
															"id": 1791,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "1120:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1754,
														"id": 1792,
														"nodeType": "Return",
														"src": "1113:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "465:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:11"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "503:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:11"
									},
									"scope": 1965,
									"src": "447:696:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "1313:103:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1807,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "1354:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:11",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1816,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1798,
																					"src": "1400:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1814,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2972,
																					"src": "1385:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2972_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:11",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2971,
																				"src": "1385:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1813,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1795,
																			1823
																		],
																		"referencedDeclaration": 1795,
																		"src": "1376:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1805,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:11",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1803,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1821,
												"nodeType": "Return",
												"src": "1323:86:11"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1261:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1797,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:11"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1298:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:11"
									},
									"scope": 1965,
									"src": "1243:173:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "1595:100:11",
										"statements": [
											{
												"id": 1841,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "1648:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1835,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "1667:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1833,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2867,
																				"src": "1655:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2867_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2827,
																			"src": "1655:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1831,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1843,
																	1919,
																	1939
																],
																"referencedDeclaration": 1919,
																"src": "1636:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1830,
														"id": 1840,
														"nodeType": "Return",
														"src": "1629:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "1542:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:11"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "1580:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:11"
									},
									"scope": 1965,
									"src": "1521:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "1908:347:11",
										"statements": [
											{
												"assignments": [
													1854
												],
												"declarations": [
													{
														"constant": false,
														"id": 1854,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "1918:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1853,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1863,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1858,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "1954:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1855,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:11"
											},
											{
												"expression": {
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1864,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "1975:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1866,
														"indexExpression": {
															"hexValue": "30",
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:11"
											},
											{
												"expression": {
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1870,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "2000:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1872,
														"indexExpression": {
															"hexValue": "31",
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:11"
											},
											{
												"body": {
													"id": 1904,
													"nodeType": "Block",
													"src": "2070:83:11",
													"statements": [
														{
															"expression": {
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1890,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "2084:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1892,
																	"indexExpression": {
																		"id": 1891,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1877,
																		"src": "2091:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1893,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1744,
																		"src": "2096:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1897,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1846,
																			"src": "2105:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1899,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:11"
														},
														{
															"expression": {
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1900,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "2131:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1903,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1884,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2058:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1905,
												"initializationExpression": {
													"assignments": [
														1877
													],
													"declarations": [
														{
															"constant": false,
															"id": 1877,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1905,
															"src": "2030:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1876,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1883,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1879,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "2046:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:11",
														"subExpression": {
															"id": 1887,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "2067:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1889,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1907,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "2170:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1915,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "2241:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1913,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1917,
												"nodeType": "Return",
												"src": "2227:21:11"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "1839:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "1854:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:11"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "1893:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:11"
									},
									"scope": 1965,
									"src": "1818:437:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "2480:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1932,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "2525:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1930,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1935,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "2533:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1927,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1843,
															1919,
															1939
														],
														"referencedDeclaration": 1919,
														"src": "2497:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1926,
												"id": 1937,
												"nodeType": "Return",
												"src": "2490:59:11"
											}
										]
									},
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2428:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:11"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2465:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:11"
									},
									"scope": 1965,
									"src": "2407:149:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2711:66:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1952,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "2744:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1950,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1949,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1958,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "2767:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1956,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1955,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1948,
												"id": 1962,
												"nodeType": "Return",
												"src": "2721:49:11"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2648:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2665:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:11"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2705:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:11"
									},
									"scope": 1965,
									"src": "2633:144:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1966,
							"src": "220:2559:11",
							"usedErrors": []
						}
					],
					"src": "101:2679:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1989
						],
						"IERC165": [
							2001
						]
					},
					"id": 1990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1967,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1968,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1990,
							"sourceUnit": 2002,
							"src": "124:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1970,
										"name": "IERC165",
										"nameLocations": [
											"754:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2001,
										"src": "754:7:12"
									},
									"id": 1971,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1969,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1989,
							"linearizedBaseContracts": [
								1989,
								2001
							],
							"name": "ERC165",
							"nameLocation": "744:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2000
									],
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "920:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "937:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1982,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "957:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2001_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2001_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1981,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2001",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1979,
												"id": 1986,
												"nodeType": "Return",
												"src": "930:47:12"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1976,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:12"
									},
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "856:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1973,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:12"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "914:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:12"
									},
									"scope": 1989,
									"src": "829:155:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1990,
							"src": "726:260:12",
							"usedErrors": []
						}
					],
					"src": "99:888:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						]
					},
					"id": 2002,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1992,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2001,
							"linearizedBaseContracts": [
								2001
							],
							"name": "IERC165",
							"nameLocation": "415:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "801:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1994,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:13"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "844:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:13"
									},
									"scope": 2001,
									"src": "774:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2002,
							"src": "405:447:13",
							"usedErrors": []
						}
					],
					"src": "100:753:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2867
						]
					},
					"id": 2868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2003,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2004,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2867,
							"linearizedBaseContracts": [
								2867
							],
							"name": "Math",
							"nameLocation": "210:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 2008,
									"members": [
										{
											"id": 2005,
											"name": "Down",
											"nameLocation": "245:4:14",
											"nodeType": "EnumValue",
											"src": "245:4:14"
										},
										{
											"id": 2006,
											"name": "Up",
											"nameLocation": "287:2:14",
											"nodeType": "EnumValue",
											"src": "287:2:14"
										},
										{
											"id": 2007,
											"name": "Zero",
											"nameLocation": "318:4:14",
											"nodeType": "EnumValue",
											"src": "318:4:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:14",
									"nodeType": "EnumDefinition",
									"src": "221:122:14"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "480:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2018,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "497:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2019,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "501:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2022,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "509:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:14",
													"trueExpression": {
														"id": 2021,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "505:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2017,
												"id": 2024,
												"nodeType": "Return",
												"src": "490:20:14"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "426:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "437:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:14"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "471:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:14"
									},
									"scope": 2867,
									"src": "413:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "655:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2036,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "672:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2037,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "676:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2040,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "684:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:14",
													"trueExpression": {
														"id": 2039,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "680:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2035,
												"id": 2042,
												"nodeType": "Return",
												"src": "665:20:14"
											}
										]
									},
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "646:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:14"
									},
									"scope": 2867,
									"src": "588:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "876:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2054,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2055,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "935:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2057,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2058,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "941:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2059,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "945:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2061,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2065,
												"nodeType": "Return",
												"src": "923:28:14"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "822:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "833:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:14"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "867:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:14"
									},
									"scope": 2867,
									"src": "805:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "1228:123:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2077,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "1316:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2081,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "1330:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2085,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "1339:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2076,
												"id": 2090,
												"nodeType": "Return",
												"src": "1309:35:14"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1174:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1185:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:14"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1219:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:14"
									},
									"scope": 2867,
									"src": "1157:194:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "1765:4115:14",
										"statements": [
											{
												"id": 2213,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:14",
												"statements": [
													{
														"assignments": [
															2105
														],
														"declarations": [
															{
																"constant": false,
																"id": 2105,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2213,
																"src": "2096:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:14"
													},
													{
														"assignments": [
															2108
														],
														"declarations": [
															{
																"constant": false,
																"id": 2108,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2213,
																"src": "2168:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2107,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2109,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2108,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2095,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2095,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:14",
																"valueSize": 1
															}
														],
														"id": 2110,
														"nodeType": "InlineAssembly",
														"src": "2239:166:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "2486:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2119,
														"nodeType": "IfStatement",
														"src": "2482:368:14",
														"trueBody": {
															"id": 2118,
															"nodeType": "Block",
															"src": "2498:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2114,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "2816:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2115,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "2824:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2103,
																	"id": 2117,
																	"nodeType": "Return",
																	"src": "2809:26:14"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2121,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "2960:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2122,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2108,
																		"src": "2974:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2120,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2126,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:14"
													},
													{
														"assignments": [
															2128
														],
														"declarations": [
															{
																"constant": false,
																"id": 2128,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2213,
																"src": "3261:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2127,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2129,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:14"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:14"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2099,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2108,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2108,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2128,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2128,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2128,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2095,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:14",
																"valueSize": 1
															}
														],
														"id": 2130,
														"nodeType": "InlineAssembly",
														"src": "3292:300:14"
													},
													{
														"assignments": [
															2132
														],
														"declarations": [
															{
																"constant": false,
																"id": 2132,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2213,
																"src": "3899:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2140,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2133,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "3914:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:14",
																			"subExpression": {
																				"id": 2134,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2099,
																				"src": "3930:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2138,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:14"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2099,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2099,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2105,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:14",
																"valueSize": 1
															}
														],
														"id": 2141,
														"nodeType": "InlineAssembly",
														"src": "3960:371:14"
													},
													{
														"expression": {
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2142,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "4397:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2143,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "4406:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2144,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "4414:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2147,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:14"
													},
													{
														"assignments": [
															2149
														],
														"declarations": [
															{
																"constant": false,
																"id": 2149,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2213,
																"src": "4736:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2148,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2156,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2151,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "4759:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2153,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:14"
													},
													{
														"expression": {
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2157,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "4992:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2159,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "5007:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2160,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "5021:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2164,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:14"
													},
													{
														"expression": {
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2165,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "5061:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2167,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "5076:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2168,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "5090:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2172,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:14"
													},
													{
														"expression": {
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2173,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "5131:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2175,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "5146:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2176,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "5160:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2180,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:14"
													},
													{
														"expression": {
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2181,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "5201:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2183,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "5216:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2184,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "5230:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2188,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:14"
													},
													{
														"expression": {
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2189,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "5271:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2191,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "5286:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2192,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "5300:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2196,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:14"
													},
													{
														"expression": {
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2197,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "5342:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2199,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "5357:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2200,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "5371:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2204,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:14"
													},
													{
														"expression": {
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "5812:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2206,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "5821:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2207,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "5829:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2210,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:14"
													},
													{
														"expression": {
															"id": 2211,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "5857:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2103,
														"id": 2212,
														"nodeType": "Return",
														"src": "5850:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1683:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1694:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1705:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:14"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1749:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:14"
									},
									"scope": 2867,
									"src": "1667:4213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "6122:189:14",
										"statements": [
											{
												"assignments": [
													2231
												],
												"declarations": [
													{
														"constant": false,
														"id": 2231,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2258,
														"src": "6132:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2237,
												"initialValue": {
													"arguments": [
														{
															"id": 2233,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "6156:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2234,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "6159:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2235,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "6162:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2232,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2215,
															2259
														],
														"referencedDeclaration": 2215,
														"src": "6149:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2008",
															"typeString": "enum Math.Rounding"
														},
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2238,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "6188:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2008",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2239,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "6200:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2008_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:14",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2006,
															"src": "6200:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2008",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2243,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "6222:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2244,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "6225:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2245,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2222,
																	"src": "6228:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2242,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2255,
												"nodeType": "IfStatement",
												"src": "6184:98:14",
												"trueBody": {
													"id": 2254,
													"nodeType": "Block",
													"src": "6246:36:14",
													"statements": [
														{
															"expression": {
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2250,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2231,
																	"src": "6260:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2253,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2256,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2231,
													"src": "6298:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2229,
												"id": 2257,
												"nodeType": "Return",
												"src": "6291:13:14"
											}
										]
									},
									"documentation": {
										"id": 2216,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "6028:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "6039:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "6050:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "6071:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2008",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2223,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "6071:8:14"
													},
													"referencedDeclaration": 2008,
													"src": "6071:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2008",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:14"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "6113:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:14"
									},
									"scope": 2867,
									"src": "6012:299:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "6587:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2267,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "6601:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2273,
												"nodeType": "IfStatement",
												"src": "6597:45:14",
												"trueBody": {
													"id": 2272,
													"nodeType": "Block",
													"src": "6609:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2266,
															"id": 2271,
															"nodeType": "Return",
															"src": "6623:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2275
												],
												"declarations": [
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2370,
														"src": "7321:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2284,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2278,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2262,
																			"src": "7349:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2277,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2539,
																			2575
																		],
																		"referencedDeclaration": 2539,
																		"src": "7344:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2282,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:14"
											},
											{
												"id": 2369,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:14",
												"statements": [
													{
														"expression": {
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2285,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "7782:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2286,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "7792:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2287,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "7801:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2288,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "7805:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2291,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2295,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:14"
													},
													{
														"expression": {
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2296,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "7831:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2297,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "7841:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2298,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "7850:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2299,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "7854:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2302,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2306,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:14"
													},
													{
														"expression": {
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2307,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "7880:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2308,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "7890:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2309,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "7899:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2310,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "7903:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2313,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2317,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:14"
													},
													{
														"expression": {
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2318,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "7929:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2319,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "7939:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2320,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "7948:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2321,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "7952:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2324,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2328,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:14"
													},
													{
														"expression": {
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2329,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "7978:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2330,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "7988:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2331,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "7997:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2332,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "8001:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2335,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2339,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:14"
													},
													{
														"expression": {
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2340,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "8027:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2341,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "8037:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2342,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "8046:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2343,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "8050:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2346,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2350,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:14"
													},
													{
														"expression": {
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2351,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "8076:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2352,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "8086:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2353,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "8095:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2354,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "8099:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2361,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "8136:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2364,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2262,
																		"src": "8144:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2365,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2275,
																		"src": "8148:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2362,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "8132:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2266,
														"id": 2368,
														"nodeType": "Return",
														"src": "8125:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "6544:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:14"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "6578:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:14"
									},
									"scope": 2867,
									"src": "6530:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "8348:161:14",
										"statements": [
											{
												"id": 2405,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:14",
												"statements": [
													{
														"assignments": [
															2383
														],
														"declarations": [
															{
																"constant": false,
																"id": 2383,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2405,
																"src": "8382:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2387,
														"initialValue": {
															"arguments": [
																{
																	"id": 2385,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "8404:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2384,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2371,
																	2407
																],
																"referencedDeclaration": 2371,
																"src": "8399:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2388,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2383,
																"src": "8427:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2008",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2389,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2377,
																					"src": "8437:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2390,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2008,
																						"src": "8449:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2008_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2006,
																					"src": "8449:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2395,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2393,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2383,
																						"src": "8464:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2394,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2383,
																						"src": "8473:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2396,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "8482:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2402,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2381,
														"id": 2404,
														"nodeType": "Return",
														"src": "8420:72:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8286:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8297:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2008",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2376,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2375,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "8297:8:14"
													},
													"referencedDeclaration": 2008,
													"src": "8297:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2008",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:14"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8339:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:14"
									},
									"scope": 2867,
									"src": "8272:237:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "8694:922:14",
										"statements": [
											{
												"assignments": [
													2416
												],
												"declarations": [
													{
														"constant": false,
														"id": 2416,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2538,
														"src": "8704:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2418,
												"initialValue": {
													"hexValue": "30",
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:14"
											},
											{
												"id": 2535,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2419,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "8760:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2433,
														"nodeType": "IfStatement",
														"src": "8756:99:14",
														"trueBody": {
															"id": 2432,
															"nodeType": "Block",
															"src": "8778:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2424,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "8796:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2427,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:14"
																},
																{
																	"expression": {
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2428,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "8827:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2431,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "8872:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2448,
														"nodeType": "IfStatement",
														"src": "8868:96:14",
														"trueBody": {
															"id": 2447,
															"nodeType": "Block",
															"src": "8889:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2439,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "8907:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2442,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:14"
																},
																{
																	"expression": {
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2443,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "8937:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2446,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "8981:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2463,
														"nodeType": "IfStatement",
														"src": "8977:96:14",
														"trueBody": {
															"id": 2462,
															"nodeType": "Block",
															"src": "8998:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2454,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "9016:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2457,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:14"
																},
																{
																	"expression": {
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2458,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "9046:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2461,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "9090:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2478,
														"nodeType": "IfStatement",
														"src": "9086:96:14",
														"trueBody": {
															"id": 2477,
															"nodeType": "Block",
															"src": "9107:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "9125:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2472,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:14"
																},
																{
																	"expression": {
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2473,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "9155:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2476,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "9199:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2493,
														"nodeType": "IfStatement",
														"src": "9195:93:14",
														"trueBody": {
															"id": 2492,
															"nodeType": "Block",
															"src": "9215:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2484,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "9233:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2487,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:14"
																},
																{
																	"expression": {
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2488,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "9262:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2491,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "9305:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2508,
														"nodeType": "IfStatement",
														"src": "9301:93:14",
														"trueBody": {
															"id": 2507,
															"nodeType": "Block",
															"src": "9321:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "9339:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2502,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:14"
																},
																{
																	"expression": {
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "9368:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2506,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "9411:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2523,
														"nodeType": "IfStatement",
														"src": "9407:93:14",
														"trueBody": {
															"id": 2522,
															"nodeType": "Block",
															"src": "9427:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2514,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2410,
																			"src": "9445:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2517,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:14"
																},
																{
																	"expression": {
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2518,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "9474:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2521,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2524,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "9517:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2534,
														"nodeType": "IfStatement",
														"src": "9513:64:14",
														"trueBody": {
															"id": 2533,
															"nodeType": "Block",
															"src": "9533:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2529,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "9551:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2532,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2536,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2416,
													"src": "9603:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2414,
												"id": 2537,
												"nodeType": "Return",
												"src": "9596:13:14"
											}
										]
									},
									"documentation": {
										"id": 2408,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:14",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "8647:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:14"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "8685:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:14"
									},
									"scope": 2867,
									"src": "8633:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "9849:165:14",
										"statements": [
											{
												"id": 2573,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:14",
												"statements": [
													{
														"assignments": [
															2551
														],
														"declarations": [
															{
																"constant": false,
																"id": 2551,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2573,
																"src": "9883:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2550,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2555,
														"initialValue": {
															"arguments": [
																{
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2542,
																	"src": "9905:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2552,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2539,
																	2575
																],
																"referencedDeclaration": 2539,
																"src": "9900:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2551,
																"src": "9932:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2008",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2557,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2545,
																					"src": "9942:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2558,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2008,
																						"src": "9954:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2008_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2559,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2006,
																					"src": "9954:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2562,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2551,
																						"src": "9974:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2564,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2542,
																					"src": "9983:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2570,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2549,
														"id": 2572,
														"nodeType": "Return",
														"src": "9925:72:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "9783:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "9798:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2008",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2543,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "9798:8:14"
													},
													"referencedDeclaration": 2008,
													"src": "9798:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2008",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:14"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "9840:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:14"
									},
									"scope": 2867,
									"src": "9769:245:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "10201:854:14",
										"statements": [
											{
												"assignments": [
													2584
												],
												"declarations": [
													{
														"constant": false,
														"id": 2584,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2703,
														"src": "10211:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2586,
												"initialValue": {
													"hexValue": "30",
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:14"
											},
											{
												"id": 2700,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2587,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10267:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2603,
														"nodeType": "IfStatement",
														"src": "10263:103:14",
														"trueBody": {
															"id": 2602,
															"nodeType": "Block",
															"src": "10286:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2592,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "10304:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2597,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:14"
																},
																{
																	"expression": {
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2598,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10339:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2601,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2604,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10383:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "10379:103:14",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "10402:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2609,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "10420:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2614,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:14"
																},
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10455:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10499:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2637,
														"nodeType": "IfStatement",
														"src": "10495:103:14",
														"trueBody": {
															"id": 2636,
															"nodeType": "Block",
															"src": "10518:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "10536:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2631,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:14"
																},
																{
																	"expression": {
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2632,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10571:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2635,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2638,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10615:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2654,
														"nodeType": "IfStatement",
														"src": "10611:100:14",
														"trueBody": {
															"id": 2653,
															"nodeType": "Block",
															"src": "10633:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2643,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "10651:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2648,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:14"
																},
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10685:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2655,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10728:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2671,
														"nodeType": "IfStatement",
														"src": "10724:100:14",
														"trueBody": {
															"id": 2670,
															"nodeType": "Block",
															"src": "10746:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "10764:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2665,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:14"
																},
																{
																	"expression": {
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2666,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10798:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2669,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2672,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10841:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "10837:100:14",
														"trueBody": {
															"id": 2687,
															"nodeType": "Block",
															"src": "10859:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2677,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "10877:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:14"
																},
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10911:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2689,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "10954:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2699,
														"nodeType": "IfStatement",
														"src": "10950:66:14",
														"trueBody": {
															"id": 2698,
															"nodeType": "Block",
															"src": "10972:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "10990:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2701,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2584,
													"src": "11042:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2582,
												"id": 2702,
												"nodeType": "Return",
												"src": "11035:13:14"
											}
										]
									},
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:14",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "10154:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:14"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "10192:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:14"
									},
									"scope": 2867,
									"src": "10139:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "11290:167:14",
										"statements": [
											{
												"id": 2738,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:14",
												"statements": [
													{
														"assignments": [
															2716
														],
														"declarations": [
															{
																"constant": false,
																"id": 2716,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2738,
																"src": "11324:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2715,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2720,
														"initialValue": {
															"arguments": [
																{
																	"id": 2718,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2707,
																	"src": "11347:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2717,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2704,
																	2740
																],
																"referencedDeclaration": 2704,
																"src": "11341:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2721,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "11374:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2008",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2722,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2710,
																					"src": "11384:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2723,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2008,
																						"src": "11396:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2008_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2724,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2006,
																					"src": "11396:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2727,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2716,
																						"src": "11417:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2729,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2707,
																					"src": "11426:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2735,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2714,
														"id": 2737,
														"nodeType": "Return",
														"src": "11367:73:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "11224:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "11239:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2008",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2708,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "11239:8:14"
													},
													"referencedDeclaration": 2008,
													"src": "11239:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2008",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:14"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "11281:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:14"
									},
									"scope": 2867,
									"src": "11209:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "11771:600:14",
										"statements": [
											{
												"assignments": [
													2749
												],
												"declarations": [
													{
														"constant": false,
														"id": 2749,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2826,
														"src": "11781:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2751,
												"initialValue": {
													"hexValue": "30",
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:14"
											},
											{
												"id": 2823,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "11837:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "11833:98:14",
														"trueBody": {
															"id": 2765,
															"nodeType": "Block",
															"src": "11855:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "11873:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:14"
																},
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "11904:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "11948:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2781,
														"nodeType": "IfStatement",
														"src": "11944:95:14",
														"trueBody": {
															"id": 2780,
															"nodeType": "Block",
															"src": "11965:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "11983:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2775,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:14"
																},
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12013:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "12056:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "12052:95:14",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "12073:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "12091:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:14"
																},
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12121:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "12164:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2811,
														"nodeType": "IfStatement",
														"src": "12160:95:14",
														"trueBody": {
															"id": 2810,
															"nodeType": "Block",
															"src": "12181:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "12199:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2805,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:14"
																},
																{
																	"expression": {
																		"id": 2808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2806,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12229:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2809,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2812,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "12272:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2822,
														"nodeType": "IfStatement",
														"src": "12268:64:14",
														"trueBody": {
															"id": 2821,
															"nodeType": "Block",
															"src": "12288:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2817,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12306:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2820,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2824,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2749,
													"src": "12358:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2747,
												"id": 2825,
												"nodeType": "Return",
												"src": "12351:13:14"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:14",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "11724:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:14"
									},
									"returnParameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "11762:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:14"
									},
									"scope": 2867,
									"src": "11708:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "12608:174:14",
										"statements": [
											{
												"id": 2864,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:14",
												"statements": [
													{
														"assignments": [
															2839
														],
														"declarations": [
															{
																"constant": false,
																"id": 2839,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2864,
																"src": "12642:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2838,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2843,
														"initialValue": {
															"arguments": [
																{
																	"id": 2841,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2830,
																	"src": "12666:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2840,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2827,
																	2866
																],
																"referencedDeclaration": 2827,
																"src": "12659:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2839,
																"src": "12693:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2008",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2845,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2833,
																					"src": "12703:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2846,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2008,
																						"src": "12715:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2008_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2006,
																					"src": "12715:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2008",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2854,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2849,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2852,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2850,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2839,
																									"src": "12736:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2851,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2853,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2855,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "12751:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2837,
														"id": 2863,
														"nodeType": "Return",
														"src": "12686:79:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2828,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "12542:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "12557:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2008",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2831,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "12557:8:14"
													},
													"referencedDeclaration": 2008,
													"src": "12557:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2008",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:14"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "12599:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:14"
									},
									"scope": 2867,
									"src": "12526:256:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2868,
							"src": "202:12582:14",
							"usedErrors": []
						}
					],
					"src": "103:12682:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2972
						]
					},
					"id": 2973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2870,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2972,
							"linearizedBaseContracts": [
								2972
							],
							"name": "SignedMath",
							"nameLocation": "223:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2887,
										"nodeType": "Block",
										"src": "375:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2880,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "392:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2881,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "396:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2884,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "404:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:15",
													"trueExpression": {
														"id": 2883,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2873,
														"src": "400:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2879,
												"id": 2886,
												"nodeType": "Return",
												"src": "385:20:15"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "324:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2872,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "334:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:15"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "367:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:15"
									},
									"scope": 2972,
									"src": "311:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "554:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2898,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2891,
															"src": "571:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2899,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "575:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2902,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2893,
														"src": "583:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:15",
													"trueExpression": {
														"id": 2901,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "579:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2897,
												"id": 2904,
												"nodeType": "Return",
												"src": "564:20:15"
											}
										]
									},
									"documentation": {
										"id": 2889,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "503:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2890,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "513:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2892,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:15"
									},
									"returnParameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "546:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2895,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:15"
									},
									"scope": 2972,
									"src": "490:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2949,
										"nodeType": "Block",
										"src": "796:162:15",
										"statements": [
											{
												"assignments": [
													2917
												],
												"declarations": [
													{
														"constant": false,
														"id": 2917,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2949,
														"src": "858:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2916,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2930,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2918,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2909,
																	"src": "870:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2919,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2911,
																	"src": "874:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2921,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2922,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2909,
																				"src": "881:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2923,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2911,
																				"src": "885:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2925,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2928,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2931,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "910:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2936,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2917,
																						"src": "930:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2935,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2934,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2932,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2941,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2909,
																				"src": "944:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2942,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2911,
																				"src": "948:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2944,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2946,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2915,
												"id": 2948,
												"nodeType": "Return",
												"src": "903:48:15"
											}
										]
									},
									"documentation": {
										"id": 2907,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "745:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2908,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "755:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2910,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:15"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "788:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2913,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:15"
									},
									"scope": 2972,
									"src": "728:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2970,
										"nodeType": "Block",
										"src": "1102:158:15",
										"statements": [
											{
												"id": 2969,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2960,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "1227:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:15",
																		"subExpression": {
																			"id": 2964,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "1241:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:15",
																	"trueExpression": {
																		"id": 2963,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2953,
																		"src": "1236:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2957,
														"id": 2968,
														"nodeType": "Return",
														"src": "1212:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2951,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "1060:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2952,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:15"
									},
									"returnParameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "1093:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:15"
									},
									"scope": 2972,
									"src": "1047:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2973,
							"src": "215:1047:15",
							"usedErrors": []
						}
					],
					"src": "109:1154:15"
				},
				"id": 15
			},
			"contracts/RewardsNFT.sol": {
				"ast": {
					"absolutePath": "contracts/RewardsNFT.sol",
					"exportedSymbols": {
						"Address": [
							1714
						],
						"Context": [
							1736
						],
						"ERC165": [
							1989
						],
						"ERC721": [
							1067
						],
						"ERC721URIStorage": [
							1357
						],
						"IERC165": [
							2001
						],
						"IERC4906": [
							137
						],
						"IERC721": [
							1183
						],
						"IERC721Metadata": [
							1384
						],
						"IERC721Receiver": [
							1201
						],
						"Math": [
							2867
						],
						"Ownable": [
							112
						],
						"RewardsNFT": [
							3031
						],
						"SignedMath": [
							2972
						],
						"Strings": [
							1965
						]
					},
					"id": 3032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3032,
							"sourceUnit": 1358,
							"src": "57:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3032,
							"sourceUnit": 113,
							"src": "136:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2977,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"213:16:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1357,
										"src": "213:16:16"
									},
									"id": 2978,
									"nodeType": "InheritanceSpecifier",
									"src": "213:16:16"
								},
								{
									"baseName": {
										"id": 2979,
										"name": "Ownable",
										"nameLocations": [
											"231:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "231:7:16"
									},
									"id": 2980,
									"nodeType": "InheritanceSpecifier",
									"src": "231:7:16"
								}
							],
							"canonicalName": "RewardsNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3031,
							"linearizedBaseContracts": [
								3031,
								112,
								1357,
								1067,
								1384,
								137,
								1183,
								1989,
								2001,
								1736
							],
							"name": "RewardsNFT",
							"nameLocation": "199:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2983,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "261:15:16",
									"nodeType": "VariableDeclaration",
									"scope": 3031,
									"src": "245:35:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2982,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2994,
										"nodeType": "Block",
										"src": "362:2:16",
										"statements": []
									},
									"id": 2995,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2990,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2985,
													"src": "348:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2991,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2987,
													"src": "354:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2992,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2989,
												"name": "ERC721",
												"nameLocations": [
													"341:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "341:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "341:20:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "313:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "299:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "299:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "333:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "319:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "319:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:42:16"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:16"
									},
									"scope": 3031,
									"src": "287:77:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3021,
										"nodeType": "Block",
										"src": "444:155:16",
										"statements": [
											{
												"assignments": [
													3005
												],
												"declarations": [
													{
														"constant": false,
														"id": 3005,
														"mutability": "mutable",
														"name": "newTokenId",
														"nameLocation": "462:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 3021,
														"src": "454:18:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "454:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3007,
												"initialValue": {
													"id": 3006,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2983,
													"src": "475:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "454:36:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3009,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "506:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3010,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "510:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3008,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "500:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "500:21:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3012,
												"nodeType": "ExpressionStatement",
												"src": "500:21:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3014,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "544:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3015,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "556:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3013,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "531:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:34:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3017,
												"nodeType": "ExpressionStatement",
												"src": "531:34:16"
											},
											{
												"expression": {
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "575:17:16",
													"subExpression": {
														"id": 3018,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "575:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3020,
												"nodeType": "ExpressionStatement",
												"src": "575:17:16"
											}
										]
									},
									"functionSelector": "0e980602",
									"id": 3022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3001,
												"name": "onlyOwner",
												"nameLocations": [
													"434:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "434:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "434:9:16"
										}
									],
									"name": "mintWithURI",
									"nameLocation": "379:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "399:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "391:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "417:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "403:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "403:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:36:16"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:16"
									},
									"scope": 3031,
									"src": "370:229:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3029,
										"nodeType": "Block",
										"src": "664:39:16",
										"statements": [
											{
												"expression": {
													"id": 3027,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2983,
													"src": "681:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3026,
												"id": 3028,
												"nodeType": "Return",
												"src": "674:22:16"
											}
										]
									},
									"functionSelector": "dbfd4b98",
									"id": 3030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenIdCounter",
									"nameLocation": "614:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:16"
									},
									"returnParameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "655:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:16"
									},
									"scope": 3031,
									"src": "605:98:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3032,
							"src": "190:515:16",
							"usedErrors": []
						}
					],
					"src": "32:673:16"
				},
				"id": 16
			}
		}
	}
}